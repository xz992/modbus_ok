<?xml version="1.0"?>
<doc>
    <assembly>
        <name>log4net.Fakes</name>
    </assembly>
    <members>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppender">
            <summary>log4net.Appender.AdoNetAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.#ctor(log4net.Appender.AdoNetAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ActivateOptions">
            <summary>设置 AdoNetAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AddParameterAdoNetAppenderParameter">
            <summary>设置 AdoNetAppender.AddParameter(AdoNetAppenderParameter parameter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTextGet">
            <summary>设置 AdoNetAppender.get_CommandText() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTextSetString">
            <summary>设置 AdoNetAppender.set_CommandText(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTypeGet">
            <summary>设置 AdoNetAppender.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTypeSetCommandType">
            <summary>设置 AdoNetAppender.set_CommandType(CommandType value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionGet">
            <summary>设置 AdoNetAppender.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionSetIDbConnection">
            <summary>设置 AdoNetAppender.set_Connection(IDbConnection value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringGet">
            <summary>设置 AdoNetAppender.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringSetString">
            <summary>设置 AdoNetAppender.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionTypeGet">
            <summary>设置 AdoNetAppender.get_ConnectionType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionTypeSetString">
            <summary>设置 AdoNetAppender.set_ConnectionType(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.Constructor">
            <summary>设置 AdoNetAppender.AdoNetAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.GetLogStatementLoggingEvent">
            <summary>设置 AdoNetAppender.GetLogStatement(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.InitializeDatabaseCommand">
            <summary>设置 AdoNetAppender.InitializeDatabaseCommand() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.InitializeDatabaseConnection">
            <summary>设置 AdoNetAppender.InitializeDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.OnClose">
            <summary>设置 AdoNetAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ReconnectOnErrorGet">
            <summary>设置 AdoNetAppender.get_ReconnectOnError() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ReconnectOnErrorSetBoolean">
            <summary>设置 AdoNetAppender.set_ReconnectOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ResolveConnectionType">
            <summary>设置 AdoNetAppender.ResolveConnectionType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SecurityContextGet">
            <summary>设置 AdoNetAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SecurityContextSetSecurityContext">
            <summary>设置 AdoNetAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SendBufferIDbTransactionLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SendBufferLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.UseTransactionsGet">
            <summary>设置 AdoNetAppender.get_UseTransactions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.UseTransactionsSetBoolean">
            <summary>设置 AdoNetAppender.set_UseTransactions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ActivateOptions">
            <summary>设置 AdoNetAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.AddParameterAdoNetAppenderParameter">
            <summary>设置 AdoNetAppender.AddParameter(AdoNetAppenderParameter parameter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTextGet">
            <summary>设置 AdoNetAppender.get_CommandText() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTextSetString">
            <summary>设置 AdoNetAppender.set_CommandText(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTypeGet">
            <summary>设置 AdoNetAppender.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTypeSetCommandType">
            <summary>设置 AdoNetAppender.set_CommandType(CommandType value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionGet">
            <summary>设置 AdoNetAppender.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionSetIDbConnection">
            <summary>设置 AdoNetAppender.set_Connection(IDbConnection value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringGet">
            <summary>设置 AdoNetAppender.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringSetString">
            <summary>设置 AdoNetAppender.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionTypeGet">
            <summary>设置 AdoNetAppender.get_ConnectionType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionTypeSetString">
            <summary>设置 AdoNetAppender.set_ConnectionType(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.GetLogStatementLoggingEvent">
            <summary>设置 AdoNetAppender.GetLogStatement(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.InitializeDatabaseCommand">
            <summary>设置 AdoNetAppender.InitializeDatabaseCommand() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.InitializeDatabaseConnection">
            <summary>设置 AdoNetAppender.InitializeDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.OnClose">
            <summary>设置 AdoNetAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ReconnectOnErrorGet">
            <summary>设置 AdoNetAppender.get_ReconnectOnError() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ReconnectOnErrorSetBoolean">
            <summary>设置 AdoNetAppender.set_ReconnectOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ResolveConnectionType">
            <summary>设置 AdoNetAppender.ResolveConnectionType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SecurityContextGet">
            <summary>设置 AdoNetAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>设置 AdoNetAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SendBufferIDbTransactionLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.UseTransactionsGet">
            <summary>设置 AdoNetAppender.get_UseTransactions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.UseTransactionsSetBoolean">
            <summary>设置 AdoNetAppender.set_UseTransactions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppenderParameter">
            <summary>log4net.Appender.AdoNetAppenderParameter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.#ctor(log4net.Appender.AdoNetAppenderParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.Constructor">
            <summary>设置 AdoNetAppenderParameter.AdoNetAppenderParameter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.DbTypeGet">
            <summary>设置 AdoNetAppenderParameter.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.DbTypeSetDbType">
            <summary>设置 AdoNetAppenderParameter.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.FormatValueIDbCommandLoggingEvent">
            <summary>设置 AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.LayoutGet">
            <summary>设置 AdoNetAppenderParameter.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.LayoutSetIRawLayout">
            <summary>设置 AdoNetAppenderParameter.set_Layout(IRawLayout value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ParameterNameGet">
            <summary>设置 AdoNetAppenderParameter.get_ParameterName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ParameterNameSetString">
            <summary>设置 AdoNetAppenderParameter.set_ParameterName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrecisionGet">
            <summary>设置 AdoNetAppenderParameter.get_Precision() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrecisionSetByte">
            <summary>设置 AdoNetAppenderParameter.set_Precision(Byte value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrepareIDbCommand">
            <summary>设置 AdoNetAppenderParameter.Prepare(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ScaleGet">
            <summary>设置 AdoNetAppenderParameter.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ScaleSetByte">
            <summary>设置 AdoNetAppenderParameter.set_Scale(Byte value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.SizeGet">
            <summary>设置 AdoNetAppenderParameter.get_Size() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.SizeSetInt32">
            <summary>设置 AdoNetAppenderParameter.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.DbTypeGet">
            <summary>设置 AdoNetAppenderParameter.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.DbTypeSetDbType">
            <summary>设置 AdoNetAppenderParameter.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.FormatValueIDbCommandLoggingEvent">
            <summary>设置 AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.LayoutGet">
            <summary>设置 AdoNetAppenderParameter.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.LayoutSetIRawLayout">
            <summary>设置 AdoNetAppenderParameter.set_Layout(IRawLayout value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ParameterNameGet">
            <summary>设置 AdoNetAppenderParameter.get_ParameterName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ParameterNameSetString">
            <summary>设置 AdoNetAppenderParameter.set_ParameterName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrecisionGet">
            <summary>设置 AdoNetAppenderParameter.get_Precision() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrecisionSetByte">
            <summary>设置 AdoNetAppenderParameter.set_Precision(Byte value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrepareIDbCommand">
            <summary>设置 AdoNetAppenderParameter.Prepare(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ScaleGet">
            <summary>设置 AdoNetAppenderParameter.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ScaleSetByte">
            <summary>设置 AdoNetAppenderParameter.set_Scale(Byte value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.SizeGet">
            <summary>设置 AdoNetAppenderParameter.get_Size() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.SizeSetInt32">
            <summary>设置 AdoNetAppenderParameter.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender">
            <summary>log4net.Appender.AnsiColorTerminalAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.#ctor(log4net.Appender.AnsiColorTerminalAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ActivateOptions">
            <summary>设置 AnsiColorTerminalAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AddMappingAnsiColorTerminalAppenderLevelColors">
            <summary>设置 AnsiColorTerminalAppender.AddMapping(LevelColors mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AppendLoggingEvent">
            <summary>设置 AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Constructor">
            <summary>设置 AnsiColorTerminalAppender.AnsiColorTerminalAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.RequiresLayoutGet">
            <summary>设置 AnsiColorTerminalAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.TargetGet">
            <summary>设置 AnsiColorTerminalAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.TargetSetString">
            <summary>设置 AnsiColorTerminalAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.ActivateOptions">
            <summary>设置 AnsiColorTerminalAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.AddMappingAnsiColorTerminalAppenderLevelColors">
            <summary>设置 AnsiColorTerminalAppender.AddMapping(LevelColors mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 AnsiColorTerminalAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.TargetGet">
            <summary>设置 AnsiColorTerminalAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.TargetSetString">
            <summary>设置 AnsiColorTerminalAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors">
            <summary>log4net.Appender.AnsiColorTerminalAppender+LevelColors 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.#ctor(log4net.Appender.AnsiColorTerminalAppender.LevelColors)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ActivateOptions">
            <summary>设置 LevelColors.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AttributesGet">
            <summary>设置 LevelColors.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AttributesSetAnsiColorTerminalAppenderAnsiAttributes">
            <summary>设置 LevelColors.set_Attributes(AnsiAttributes value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BackColorGet">
            <summary>设置 LevelColors.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BackColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>设置 LevelColors.set_BackColor(AnsiColor value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.CombinedColorGet">
            <summary>设置 LevelColors.get_CombinedColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Constructor">
            <summary>设置 LevelColors.LevelColors() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ForeColorGet">
            <summary>设置 LevelColors.get_ForeColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ForeColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>设置 LevelColors.set_ForeColor(AnsiColor value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ActivateOptions">
            <summary>设置 LevelColors.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.AttributesGet">
            <summary>设置 LevelColors.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.AttributesSetAnsiColorTerminalAppenderAnsiAttributes">
            <summary>设置 LevelColors.set_Attributes(AnsiAttributes value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.BackColorGet">
            <summary>设置 LevelColors.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.BackColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>设置 LevelColors.set_BackColor(AnsiColor value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.CombinedColorGet">
            <summary>设置 LevelColors.get_CombinedColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ForeColorGet">
            <summary>设置 LevelColors.get_ForeColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ForeColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>设置 LevelColors.set_ForeColor(AnsiColor value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderCollection">
            <summary>log4net.Appender.AppenderCollection 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.#ctor(log4net.Appender.AppenderCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddIAppender">
            <summary>设置 AppenderCollection.Add(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeAppenderCollection">
            <summary>设置 AppenderCollection.AddRange(AppenderCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeIAppenderArray">
            <summary>设置 AppenderCollection.AddRange(IAppender[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeICollection">
            <summary>设置 AppenderCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CapacityGet">
            <summary>设置 AppenderCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CapacitySetInt32">
            <summary>设置 AppenderCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Clear">
            <summary>设置 AppenderCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Clone">
            <summary>设置 AppenderCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Constructor">
            <summary>设置 AppenderCollection.AppenderCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorAppenderCollection">
            <summary>设置 AppenderCollection.AppenderCollection(AppenderCollection c) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorIAppenderArray">
            <summary>设置 AppenderCollection.AppenderCollection(IAppender[] a) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorICollection">
            <summary>设置 AppenderCollection.AppenderCollection(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorInt32">
            <summary>设置 AppenderCollection.AppenderCollection(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ContainsIAppender">
            <summary>设置 AppenderCollection.Contains(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CopyToIAppenderArray">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CopyToIAppenderArrayInt32">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CountGet">
            <summary>设置 AppenderCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.EnsureCapacityInt32">
            <summary>设置 AppenderCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.GetEnumerator">
            <summary>设置 AppenderCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IndexOfIAppender">
            <summary>设置 AppenderCollection.IndexOf(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.InsertInt32IAppender">
            <summary>设置 AppenderCollection.Insert(Int32 index, IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsFixedSizeGet">
            <summary>设置 AppenderCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsReadOnlyGet">
            <summary>设置 AppenderCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsSynchronizedGet">
            <summary>设置 AppenderCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemGetInt32">
            <summary>设置 AppenderCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSetInt32IAppender">
            <summary>设置 AppenderCollection.set_Item(Int32 index, IAppender value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSystemCollectionsIListgetInt32">
            <summary>设置 AppenderCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 AppenderCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ReadOnlyAppenderCollection">
            <summary>设置 AppenderCollection.ReadOnly(AppenderCollection list) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.RemoveAtInt32">
            <summary>设置 AppenderCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.RemoveIAppender">
            <summary>设置 AppenderCollection.Remove(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.StaticConstructor">
            <summary>设置 AppenderCollection.AppenderCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SyncRootGet">
            <summary>设置 AppenderCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 AppenderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AppenderCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListAddObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListContainsObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListIndexOfObject">
            <summary>设置 AppenderCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListInsertInt32Object">
            <summary>设置 AppenderCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 AppenderCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListRemoveObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ToArray">
            <summary>设置 AppenderCollection.ToArray() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.TrimToSize">
            <summary>设置 AppenderCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ValidateIndexInt32">
            <summary>设置 AppenderCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ValidateIndexInt32Boolean">
            <summary>设置 AppenderCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddIAppender">
            <summary>设置 AppenderCollection.Add(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeAppenderCollection">
            <summary>设置 AppenderCollection.AddRange(AppenderCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeIAppenderArray">
            <summary>设置 AppenderCollection.AddRange(IAppender[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeICollection">
            <summary>设置 AppenderCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CapacityGet">
            <summary>设置 AppenderCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CapacitySetInt32">
            <summary>设置 AppenderCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.Clear">
            <summary>设置 AppenderCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.Clone">
            <summary>设置 AppenderCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ContainsIAppender">
            <summary>设置 AppenderCollection.Contains(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CopyToIAppenderArray">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CopyToIAppenderArrayInt32">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CountGet">
            <summary>设置 AppenderCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.EnsureCapacityInt32">
            <summary>设置 AppenderCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.GetEnumerator">
            <summary>设置 AppenderCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IndexOfIAppender">
            <summary>设置 AppenderCollection.IndexOf(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.InsertInt32IAppender">
            <summary>设置 AppenderCollection.Insert(Int32 index, IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsFixedSizeGet">
            <summary>设置 AppenderCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsReadOnlyGet">
            <summary>设置 AppenderCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsSynchronizedGet">
            <summary>设置 AppenderCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemGetInt32">
            <summary>设置 AppenderCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSetInt32IAppender">
            <summary>设置 AppenderCollection.set_Item(Int32 index, IAppender value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>设置 AppenderCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 AppenderCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.RemoveAtInt32">
            <summary>设置 AppenderCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.RemoveIAppender">
            <summary>设置 AppenderCollection.Remove(IAppender item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SyncRootGet">
            <summary>设置 AppenderCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 AppenderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AppenderCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>设置 AppenderCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>设置 AppenderCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 AppenderCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>设置 AppenderCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ToArray">
            <summary>设置 AppenderCollection.ToArray() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.TrimToSize">
            <summary>设置 AppenderCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ValidateIndexInt32">
            <summary>设置 AppenderCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>设置 AppenderCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderSkeleton">
            <summary>log4net.Appender.AppenderSkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.#ctor(log4net.Appender.AppenderSkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Close">
            <summary>设置 AppenderSkeleton.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Constructor">
            <summary>设置 AppenderSkeleton.AppenderSkeleton() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.DoAppendLoggingEvent">
            <summary>设置 AppenderSkeleton.DoAppend(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.DoAppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.DoAppend(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.NameGet">
            <summary>设置 AppenderSkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.NameSetString">
            <summary>设置 AppenderSkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RenderLoggingEventLoggingEvent">
            <summary>设置 AppenderSkeleton.RenderLoggingEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RenderLoggingEventTextWriterLoggingEvent">
            <summary>设置 AppenderSkeleton.RenderLoggingEvent(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ThresholdGet">
            <summary>设置 AppenderSkeleton.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ThresholdSetLevel">
            <summary>设置 AppenderSkeleton.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.Close">
            <summary>设置 AppenderSkeleton.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.DoAppendLoggingEvent">
            <summary>设置 AppenderSkeleton.DoAppend(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.DoAppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.DoAppend(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.NameGet">
            <summary>设置 AppenderSkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.NameSetString">
            <summary>设置 AppenderSkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RenderLoggingEventLoggingEvent">
            <summary>设置 AppenderSkeleton.RenderLoggingEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RenderLoggingEventTextWriterLoggingEvent">
            <summary>设置 AppenderSkeleton.RenderLoggingEvent(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ThresholdGet">
            <summary>设置 AppenderSkeleton.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ThresholdSetLevel">
            <summary>设置 AppenderSkeleton.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAspNetTraceAppender">
            <summary>log4net.Appender.AspNetTraceAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.#ctor(log4net.Appender.AspNetTraceAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AppendLoggingEvent">
            <summary>设置 AspNetTraceAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.Constructor">
            <summary>设置 AspNetTraceAppender.AspNetTraceAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.RequiresLayoutGet">
            <summary>设置 AspNetTraceAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 AspNetTraceAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 AspNetTraceAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton">
            <summary>log4net.Appender.BufferingAppenderSkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.#ctor(log4net.Appender.BufferingAppenderSkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.ActivateOptions">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BufferSizeGet">
            <summary>设置 BufferingAppenderSkeleton.get_BufferSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BufferSizeSetInt32">
            <summary>设置 BufferingAppenderSkeleton.set_BufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Constructor">
            <summary>设置 BufferingAppenderSkeleton.BufferingAppenderSkeleton() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.ConstructorBoolean">
            <summary>设置 BufferingAppenderSkeleton.BufferingAppenderSkeleton(Boolean eventMustBeFixed) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.EvaluatorGet">
            <summary>设置 BufferingAppenderSkeleton.get_Evaluator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.EvaluatorSetITriggeringEventEvaluator">
            <summary>设置 BufferingAppenderSkeleton.set_Evaluator(ITriggeringEventEvaluator value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyEvaluatorGet">
            <summary>设置 BufferingAppenderSkeleton.get_LossyEvaluator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyEvaluatorSetITriggeringEventEvaluator">
            <summary>设置 BufferingAppenderSkeleton.set_LossyEvaluator(ITriggeringEventEvaluator value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyGet">
            <summary>设置 BufferingAppenderSkeleton.get_Lossy() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossySetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_Lossy(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnClose">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.ActivateOptions">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.BufferSizeGet">
            <summary>设置 BufferingAppenderSkeleton.get_BufferSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.BufferSizeSetInt32">
            <summary>设置 BufferingAppenderSkeleton.set_BufferSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.EvaluatorGet">
            <summary>设置 BufferingAppenderSkeleton.get_Evaluator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.EvaluatorSetITriggeringEventEvaluator">
            <summary>设置 BufferingAppenderSkeleton.set_Evaluator(ITriggeringEventEvaluator value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyEvaluatorGet">
            <summary>设置 BufferingAppenderSkeleton.get_LossyEvaluator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyEvaluatorSetITriggeringEventEvaluator">
            <summary>设置 BufferingAppenderSkeleton.set_LossyEvaluator(ITriggeringEventEvaluator value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyGet">
            <summary>设置 BufferingAppenderSkeleton.get_Lossy() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossySetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_Lossy(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnClose">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingForwardingAppender">
            <summary>log4net.Appender.BufferingForwardingAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.#ctor(log4net.Appender.BufferingForwardingAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Core.IAppenderAttachable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AddAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AppendersGet">
            <summary>设置 BufferingForwardingAppender.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Constructor">
            <summary>设置 BufferingForwardingAppender.BufferingForwardingAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.GetAppenderString">
            <summary>设置 BufferingForwardingAppender.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.OnClose">
            <summary>设置 BufferingForwardingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAllAppenders">
            <summary>设置 BufferingForwardingAppender.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAppenderString">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.SendBufferLoggingEventArray">
            <summary>设置 BufferingForwardingAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.AddAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.AppendersGet">
            <summary>设置 BufferingForwardingAppender.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.GetAppenderString">
            <summary>设置 BufferingForwardingAppender.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.OnClose">
            <summary>设置 BufferingForwardingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAllAppenders">
            <summary>设置 BufferingForwardingAppender.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAppenderString">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>设置 BufferingForwardingAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender">
            <summary>log4net.Appender.ColoredConsoleAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.#ctor(log4net.Appender.ColoredConsoleAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ActivateOptions">
            <summary>设置 ColoredConsoleAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AddMappingColoredConsoleAppenderLevelColors">
            <summary>设置 ColoredConsoleAppender.AddMapping(LevelColors mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AppendLoggingEvent">
            <summary>设置 ColoredConsoleAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.Constructor">
            <summary>设置 ColoredConsoleAppender.ColoredConsoleAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ConstructorILayout">
            <summary>设置 ColoredConsoleAppender.ColoredConsoleAppender(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ConstructorILayoutBoolean">
            <summary>设置 ColoredConsoleAppender.ColoredConsoleAppender(ILayout layout, Boolean writeToErrorStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.RequiresLayoutGet">
            <summary>设置 ColoredConsoleAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.StaticConstructor">
            <summary>设置 ColoredConsoleAppender.ColoredConsoleAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.TargetGet">
            <summary>设置 ColoredConsoleAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.TargetSetString">
            <summary>设置 ColoredConsoleAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.ActivateOptions">
            <summary>设置 ColoredConsoleAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.AddMappingColoredConsoleAppenderLevelColors">
            <summary>设置 ColoredConsoleAppender.AddMapping(LevelColors mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 ColoredConsoleAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 ColoredConsoleAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.TargetGet">
            <summary>设置 ColoredConsoleAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.TargetSetString">
            <summary>设置 ColoredConsoleAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors">
            <summary>log4net.Appender.ColoredConsoleAppender+LevelColors 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.#ctor(log4net.Appender.ColoredConsoleAppender.LevelColors)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ActivateOptions">
            <summary>设置 LevelColors.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BackColorGet">
            <summary>设置 LevelColors.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BackColorSetColoredConsoleAppenderColors">
            <summary>设置 LevelColors.set_BackColor(Colors value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.CombinedColorGet">
            <summary>设置 LevelColors.get_CombinedColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Constructor">
            <summary>设置 LevelColors.LevelColors() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ForeColorGet">
            <summary>设置 LevelColors.get_ForeColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ForeColorSetColoredConsoleAppenderColors">
            <summary>设置 LevelColors.set_ForeColor(Colors value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ActivateOptions">
            <summary>设置 LevelColors.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorGet">
            <summary>设置 LevelColors.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorSetColoredConsoleAppenderColors">
            <summary>设置 LevelColors.set_BackColor(Colors value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.CombinedColorGet">
            <summary>设置 LevelColors.get_CombinedColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorGet">
            <summary>设置 LevelColors.get_ForeColor() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorSetColoredConsoleAppenderColors">
            <summary>设置 LevelColors.set_ForeColor(Colors value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimConsoleAppender">
            <summary>log4net.Appender.ConsoleAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.#ctor(log4net.Appender.ConsoleAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AppendLoggingEvent">
            <summary>设置 ConsoleAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.Constructor">
            <summary>设置 ConsoleAppender.ConsoleAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.ConstructorILayout">
            <summary>设置 ConsoleAppender.ConsoleAppender(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.ConstructorILayoutBoolean">
            <summary>设置 ConsoleAppender.ConsoleAppender(ILayout layout, Boolean writeToErrorStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.RequiresLayoutGet">
            <summary>设置 ConsoleAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.TargetGet">
            <summary>设置 ConsoleAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.TargetSetString">
            <summary>设置 ConsoleAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 ConsoleAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 ConsoleAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.TargetGet">
            <summary>设置 ConsoleAppender.get_Target() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.TargetSetString">
            <summary>设置 ConsoleAppender.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimDebugAppender">
            <summary>log4net.Appender.DebugAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.#ctor(log4net.Appender.DebugAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AppendLoggingEvent">
            <summary>设置 DebugAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.Constructor">
            <summary>设置 DebugAppender.DebugAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ConstructorILayout">
            <summary>设置 DebugAppender.DebugAppender(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ImmediateFlushGet">
            <summary>设置 DebugAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ImmediateFlushSetBoolean">
            <summary>设置 DebugAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.RequiresLayoutGet">
            <summary>设置 DebugAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimDebugAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 DebugAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.ImmediateFlushGet">
            <summary>设置 DebugAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>设置 DebugAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 DebugAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender">
            <summary>log4net.Appender.EventLogAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.#ctor(log4net.Appender.EventLogAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ActivateOptions">
            <summary>设置 EventLogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AddMappingEventLogAppenderLevel2EventLogEntryType">
            <summary>设置 EventLogAppender.AddMapping(Level2EventLogEntryType mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AppendLoggingEvent">
            <summary>设置 EventLogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ApplicationNameGet">
            <summary>设置 EventLogAppender.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ApplicationNameSetString">
            <summary>设置 EventLogAppender.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.Constructor">
            <summary>设置 EventLogAppender.EventLogAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ConstructorILayout">
            <summary>设置 EventLogAppender.EventLogAppender(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.CreateEventSourceStringStringString">
            <summary>设置 EventLogAppender.CreateEventSource(String source, String logName, String machineName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.GetEntryTypeLevel">
            <summary>设置 EventLogAppender.GetEntryType(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.LogNameGet">
            <summary>设置 EventLogAppender.get_LogName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.LogNameSetString">
            <summary>设置 EventLogAppender.set_LogName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.MachineNameGet">
            <summary>设置 EventLogAppender.get_MachineName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.MachineNameSetString">
            <summary>设置 EventLogAppender.set_MachineName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.RequiresLayoutGet">
            <summary>设置 EventLogAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.SecurityContextGet">
            <summary>设置 EventLogAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.SecurityContextSetSecurityContext">
            <summary>设置 EventLogAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ActivateOptions">
            <summary>设置 EventLogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.AddMappingEventLogAppenderLevel2EventLogEntryType">
            <summary>设置 EventLogAppender.AddMapping(Level2EventLogEntryType mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 EventLogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ApplicationNameGet">
            <summary>设置 EventLogAppender.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ApplicationNameSetString">
            <summary>设置 EventLogAppender.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.GetEntryTypeLevel">
            <summary>设置 EventLogAppender.GetEntryType(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.LogNameGet">
            <summary>设置 EventLogAppender.get_LogName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.LogNameSetString">
            <summary>设置 EventLogAppender.set_LogName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.MachineNameGet">
            <summary>设置 EventLogAppender.get_MachineName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.MachineNameSetString">
            <summary>设置 EventLogAppender.set_MachineName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 EventLogAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.SecurityContextGet">
            <summary>设置 EventLogAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>设置 EventLogAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType">
            <summary>log4net.Appender.EventLogAppender+Level2EventLogEntryType 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.#ctor(log4net.Appender.EventLogAppender.Level2EventLogEntryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Constructor">
            <summary>设置 Level2EventLogEntryType.Level2EventLogEntryType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.EventLogEntryTypeGet">
            <summary>设置 Level2EventLogEntryType.get_EventLogEntryType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.EventLogEntryTypeSetEventLogEntryType">
            <summary>设置 Level2EventLogEntryType.set_EventLogEntryType(EventLogEntryType value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances.EventLogEntryTypeGet">
            <summary>设置 Level2EventLogEntryType.get_EventLogEntryType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances.EventLogEntryTypeSetEventLogEntryType">
            <summary>设置 Level2EventLogEntryType.set_EventLogEntryType(EventLogEntryType value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender">
            <summary>log4net.Appender.FileAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.#ctor(log4net.Appender.FileAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ActivateOptions">
            <summary>设置 FileAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendLoggingEvent">
            <summary>设置 FileAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendLoggingEventArray">
            <summary>设置 FileAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendToFileGet">
            <summary>设置 FileAppender.get_AppendToFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendToFileSetBoolean">
            <summary>设置 FileAppender.set_AppendToFile(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.CloseFile">
            <summary>设置 FileAppender.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.CloseWriter">
            <summary>设置 FileAppender.CloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Constructor">
            <summary>设置 FileAppender.FileAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConstructorILayoutString">
            <summary>设置 FileAppender.FileAppender(ILayout layout, String filename) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConstructorILayoutStringBoolean">
            <summary>设置 FileAppender.FileAppender(ILayout layout, String filename, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConvertToFullPathString">
            <summary>设置 FileAppender.ConvertToFullPath(String path) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.EncodingGet">
            <summary>设置 FileAppender.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.EncodingSetEncoding">
            <summary>设置 FileAppender.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.FileGet">
            <summary>设置 FileAppender.get_File() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.FileSetString">
            <summary>设置 FileAppender.set_File(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.LockingModelGet">
            <summary>设置 FileAppender.get_LockingModel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.LockingModelSetFileAppenderLockingModelBase">
            <summary>设置 FileAppender.set_LockingModel(LockingModelBase value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.OpenFileStringBoolean">
            <summary>设置 FileAppender.OpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.PrepareWriter">
            <summary>设置 FileAppender.PrepareWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Reset">
            <summary>设置 FileAppender.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SafeOpenFileStringBoolean">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SecurityContextGet">
            <summary>设置 FileAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SecurityContextSetSecurityContext">
            <summary>设置 FileAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SetQWForFilesStream">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SetQWForFilesTextWriter">
            <summary>设置 FileAppender.SetQWForFiles(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.WriteFooter">
            <summary>设置 FileAppender.WriteFooter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.WriteHeader">
            <summary>设置 FileAppender.WriteHeader() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.ActivateOptions">
            <summary>设置 FileAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 FileAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendLoggingEventArray">
            <summary>设置 FileAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendToFileGet">
            <summary>设置 FileAppender.get_AppendToFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendToFileSetBoolean">
            <summary>设置 FileAppender.set_AppendToFile(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.CloseFile">
            <summary>设置 FileAppender.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.CloseWriter">
            <summary>设置 FileAppender.CloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.EncodingGet">
            <summary>设置 FileAppender.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.EncodingSetEncoding">
            <summary>设置 FileAppender.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.FileGet">
            <summary>设置 FileAppender.get_File() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.FileSetString">
            <summary>设置 FileAppender.set_File(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.LockingModelGet">
            <summary>设置 FileAppender.get_LockingModel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.LockingModelSetFileAppenderLockingModelBase">
            <summary>设置 FileAppender.set_LockingModel(LockingModelBase value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.OpenFileStringBoolean">
            <summary>设置 FileAppender.OpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.PrepareWriter">
            <summary>设置 FileAppender.PrepareWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.Reset">
            <summary>设置 FileAppender.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SafeOpenFileStringBoolean">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SecurityContextGet">
            <summary>设置 FileAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>设置 FileAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SetQWForFilesStream">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SetQWForFilesTextWriter">
            <summary>设置 FileAppender.SetQWForFiles(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.WriteFooter">
            <summary>设置 FileAppender.WriteFooter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.WriteHeader">
            <summary>设置 FileAppender.WriteHeader() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock">
            <summary>log4net.Appender.FileAppender+ExclusiveLock 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.#ctor(log4net.Appender.FileAppender.ExclusiveLock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AcquireLock">
            <summary>设置 ExclusiveLock.AcquireLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.CloseFile">
            <summary>设置 ExclusiveLock.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.Constructor">
            <summary>设置 ExclusiveLock.ExclusiveLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.OpenFileStringBooleanEncoding">
            <summary>设置 ExclusiveLock.OpenFile(String filename, Boolean append, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.ReleaseLock">
            <summary>设置 ExclusiveLock.ReleaseLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.AcquireLock">
            <summary>设置 ExclusiveLock.AcquireLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.CloseFile">
            <summary>设置 ExclusiveLock.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.OpenFileStringBooleanEncoding">
            <summary>设置 ExclusiveLock.OpenFile(String filename, Boolean append, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.ReleaseLock">
            <summary>设置 ExclusiveLock.ReleaseLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase">
            <summary>log4net.Appender.FileAppender+LockingModelBase 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.#ctor(log4net.Appender.FileAppender.LockingModelBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.Constructor">
            <summary>设置 LockingModelBase.LockingModelBase() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CurrentAppenderGet">
            <summary>设置 LockingModelBase.get_CurrentAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CurrentAppenderSetFileAppender">
            <summary>设置 LockingModelBase.set_CurrentAppender(FileAppender value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CurrentAppenderGet">
            <summary>设置 LockingModelBase.get_CurrentAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CurrentAppenderSetFileAppender">
            <summary>设置 LockingModelBase.set_CurrentAppender(FileAppender value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock">
            <summary>log4net.Appender.FileAppender+MinimalLock 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.#ctor(log4net.Appender.FileAppender.MinimalLock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AcquireLock">
            <summary>设置 MinimalLock.AcquireLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.CloseFile">
            <summary>设置 MinimalLock.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.Constructor">
            <summary>设置 MinimalLock.MinimalLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.OpenFileStringBooleanEncoding">
            <summary>设置 MinimalLock.OpenFile(String filename, Boolean append, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.ReleaseLock">
            <summary>设置 MinimalLock.ReleaseLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.AcquireLock">
            <summary>设置 MinimalLock.AcquireLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.CloseFile">
            <summary>设置 MinimalLock.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.OpenFileStringBooleanEncoding">
            <summary>设置 MinimalLock.OpenFile(String filename, Boolean append, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.ReleaseLock">
            <summary>设置 MinimalLock.ReleaseLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimForwardingAppender">
            <summary>log4net.Appender.ForwardingAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.#ctor(log4net.Appender.ForwardingAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Core.IAppenderAttachable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AddAppenderIAppender">
            <summary>设置 ForwardingAppender.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendLoggingEvent">
            <summary>设置 ForwardingAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendLoggingEventArray">
            <summary>设置 ForwardingAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendersGet">
            <summary>设置 ForwardingAppender.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.Constructor">
            <summary>设置 ForwardingAppender.ForwardingAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.GetAppenderString">
            <summary>设置 ForwardingAppender.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.OnClose">
            <summary>设置 ForwardingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAllAppenders">
            <summary>设置 ForwardingAppender.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAppenderIAppender">
            <summary>设置 ForwardingAppender.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAppenderString">
            <summary>设置 ForwardingAppender.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AddAppenderIAppender">
            <summary>设置 ForwardingAppender.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 ForwardingAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendLoggingEventArray">
            <summary>设置 ForwardingAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendersGet">
            <summary>设置 ForwardingAppender.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.GetAppenderString">
            <summary>设置 ForwardingAppender.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.OnClose">
            <summary>设置 ForwardingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAllAppenders">
            <summary>设置 ForwardingAppender.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAppenderIAppender">
            <summary>设置 ForwardingAppender.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAppenderString">
            <summary>设置 ForwardingAppender.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender">
            <summary>log4net.Appender.LocalSyslogAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.#ctor(log4net.Appender.LocalSyslogAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ActivateOptions">
            <summary>设置 LocalSyslogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AddMappingLocalSyslogAppenderLevelSeverity">
            <summary>设置 LocalSyslogAppender.AddMapping(LevelSeverity mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AppendLoggingEvent">
            <summary>设置 LocalSyslogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.Constructor">
            <summary>设置 LocalSyslogAppender.LocalSyslogAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.FacilityGet">
            <summary>设置 LocalSyslogAppender.get_Facility() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.FacilitySetLocalSyslogAppenderSyslogFacility">
            <summary>设置 LocalSyslogAppender.set_Facility(SyslogFacility value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.GeneratePriorityLocalSyslogAppenderSyslogFacilityLocalSyslogAppenderSyslogSeverity">
            <summary>设置 LocalSyslogAppender.GeneratePriority(SyslogFacility facility, SyslogSeverity severity) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.GetSeverityLevel">
            <summary>设置 LocalSyslogAppender.GetSeverity(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.IdentityGet">
            <summary>设置 LocalSyslogAppender.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.IdentitySetString">
            <summary>设置 LocalSyslogAppender.set_Identity(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.OnClose">
            <summary>设置 LocalSyslogAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.RequiresLayoutGet">
            <summary>设置 LocalSyslogAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.ActivateOptions">
            <summary>设置 LocalSyslogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.AddMappingLocalSyslogAppenderLevelSeverity">
            <summary>设置 LocalSyslogAppender.AddMapping(LevelSeverity mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 LocalSyslogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.FacilityGet">
            <summary>设置 LocalSyslogAppender.get_Facility() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.FacilitySetLocalSyslogAppenderSyslogFacility">
            <summary>设置 LocalSyslogAppender.set_Facility(SyslogFacility value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.GetSeverityLevel">
            <summary>设置 LocalSyslogAppender.GetSeverity(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.IdentityGet">
            <summary>设置 LocalSyslogAppender.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.IdentitySetString">
            <summary>设置 LocalSyslogAppender.set_Identity(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.OnClose">
            <summary>设置 LocalSyslogAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 LocalSyslogAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity">
            <summary>log4net.Appender.LocalSyslogAppender+LevelSeverity 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.#ctor(log4net.Appender.LocalSyslogAppender.LevelSeverity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Constructor">
            <summary>设置 LevelSeverity.LevelSeverity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.SeverityGet">
            <summary>设置 LevelSeverity.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.SeveritySetLocalSyslogAppenderSyslogSeverity">
            <summary>设置 LevelSeverity.set_Severity(SyslogSeverity value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances.SeverityGet">
            <summary>设置 LevelSeverity.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances.SeveritySetLocalSyslogAppenderSyslogSeverity">
            <summary>设置 LevelSeverity.set_Severity(SyslogSeverity value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimMemoryAppender">
            <summary>log4net.Appender.MemoryAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.#ctor(log4net.Appender.MemoryAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AppendLoggingEvent">
            <summary>设置 MemoryAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Clear">
            <summary>设置 MemoryAppender.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Constructor">
            <summary>设置 MemoryAppender.MemoryAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.FixGet">
            <summary>设置 MemoryAppender.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.FixSetFixFlags">
            <summary>设置 MemoryAppender.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.GetEvents">
            <summary>设置 MemoryAppender.GetEvents() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.OnlyFixPartialEventDataGet">
            <summary>设置 MemoryAppender.get_OnlyFixPartialEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 MemoryAppender.set_OnlyFixPartialEventData(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 MemoryAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.Clear">
            <summary>设置 MemoryAppender.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.FixGet">
            <summary>设置 MemoryAppender.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.FixSetFixFlags">
            <summary>设置 MemoryAppender.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.GetEvents">
            <summary>设置 MemoryAppender.GetEvents() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.OnlyFixPartialEventDataGet">
            <summary>设置 MemoryAppender.get_OnlyFixPartialEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 MemoryAppender.set_OnlyFixPartialEventData(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimNetSendAppender">
            <summary>log4net.Appender.NetSendAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.#ctor(log4net.Appender.NetSendAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ActivateOptions">
            <summary>设置 NetSendAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AppendLoggingEvent">
            <summary>设置 NetSendAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.Constructor">
            <summary>设置 NetSendAppender.NetSendAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RecipientGet">
            <summary>设置 NetSendAppender.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RecipientSetString">
            <summary>设置 NetSendAppender.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RequiresLayoutGet">
            <summary>设置 NetSendAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SecurityContextGet">
            <summary>设置 NetSendAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SecurityContextSetSecurityContext">
            <summary>设置 NetSendAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SenderGet">
            <summary>设置 NetSendAppender.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SenderSetString">
            <summary>设置 NetSendAppender.set_Sender(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ServerGet">
            <summary>设置 NetSendAppender.get_Server() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ServerSetString">
            <summary>设置 NetSendAppender.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ActivateOptions">
            <summary>设置 NetSendAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 NetSendAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RecipientGet">
            <summary>设置 NetSendAppender.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RecipientSetString">
            <summary>设置 NetSendAppender.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 NetSendAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SecurityContextGet">
            <summary>设置 NetSendAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>设置 NetSendAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SenderGet">
            <summary>设置 NetSendAppender.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SenderSetString">
            <summary>设置 NetSendAppender.set_Sender(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ServerGet">
            <summary>设置 NetSendAppender.get_Server() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ServerSetString">
            <summary>设置 NetSendAppender.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimOutputDebugStringAppender">
            <summary>log4net.Appender.OutputDebugStringAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.#ctor(log4net.Appender.OutputDebugStringAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AppendLoggingEvent">
            <summary>设置 OutputDebugStringAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Constructor">
            <summary>设置 OutputDebugStringAppender.OutputDebugStringAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.RequiresLayoutGet">
            <summary>设置 OutputDebugStringAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 OutputDebugStringAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 OutputDebugStringAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender">
            <summary>log4net.Appender.RemoteSyslogAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.#ctor(log4net.Appender.RemoteSyslogAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ActivateOptions">
            <summary>设置 RemoteSyslogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AddMappingRemoteSyslogAppenderLevelSeverity">
            <summary>设置 RemoteSyslogAppender.AddMapping(LevelSeverity mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AppendLoggingEvent">
            <summary>设置 RemoteSyslogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Constructor">
            <summary>设置 RemoteSyslogAppender.RemoteSyslogAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.FacilityGet">
            <summary>设置 RemoteSyslogAppender.get_Facility() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.FacilitySetRemoteSyslogAppenderSyslogFacility">
            <summary>设置 RemoteSyslogAppender.set_Facility(SyslogFacility value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.GeneratePriorityRemoteSyslogAppenderSyslogFacilityRemoteSyslogAppenderSyslogSeverity">
            <summary>设置 RemoteSyslogAppender.GeneratePriority(SyslogFacility facility, SyslogSeverity severity) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.GetSeverityLevel">
            <summary>设置 RemoteSyslogAppender.GetSeverity(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.IdentityGet">
            <summary>设置 RemoteSyslogAppender.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.IdentitySetPatternLayout">
            <summary>设置 RemoteSyslogAppender.set_Identity(PatternLayout value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.ActivateOptions">
            <summary>设置 RemoteSyslogAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.AddMappingRemoteSyslogAppenderLevelSeverity">
            <summary>设置 RemoteSyslogAppender.AddMapping(LevelSeverity mapping) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 RemoteSyslogAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.FacilityGet">
            <summary>设置 RemoteSyslogAppender.get_Facility() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.FacilitySetRemoteSyslogAppenderSyslogFacility">
            <summary>设置 RemoteSyslogAppender.set_Facility(SyslogFacility value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.GetSeverityLevel">
            <summary>设置 RemoteSyslogAppender.GetSeverity(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.IdentityGet">
            <summary>设置 RemoteSyslogAppender.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.IdentitySetPatternLayout">
            <summary>设置 RemoteSyslogAppender.set_Identity(PatternLayout value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity">
            <summary>log4net.Appender.RemoteSyslogAppender+LevelSeverity 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.#ctor(log4net.Appender.RemoteSyslogAppender.LevelSeverity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Constructor">
            <summary>设置 LevelSeverity.LevelSeverity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.SeverityGet">
            <summary>设置 LevelSeverity.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.SeveritySetRemoteSyslogAppenderSyslogSeverity">
            <summary>设置 LevelSeverity.set_Severity(SyslogSeverity value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances.SeverityGet">
            <summary>设置 LevelSeverity.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances.SeveritySetRemoteSyslogAppenderSyslogSeverity">
            <summary>设置 LevelSeverity.set_Severity(SyslogSeverity value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemotingAppender">
            <summary>log4net.Appender.RemotingAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.#ctor(log4net.Appender.RemotingAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.ActivateOptions">
            <summary>设置 RemotingAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.BeginAsyncSend">
            <summary>设置 RemotingAppender.BeginAsyncSend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.Constructor">
            <summary>设置 RemotingAppender.RemotingAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.EndAsyncSend">
            <summary>设置 RemotingAppender.EndAsyncSend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.OnClose">
            <summary>设置 RemotingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SendBufferCallbackObject">
            <summary>设置 RemotingAppender.SendBufferCallback(Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SendBufferLoggingEventArray">
            <summary>设置 RemotingAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SinkGet">
            <summary>设置 RemotingAppender.get_Sink() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SinkSetString">
            <summary>设置 RemotingAppender.set_Sink(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.ActivateOptions">
            <summary>设置 RemotingAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.BeginAsyncSend">
            <summary>设置 RemotingAppender.BeginAsyncSend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.EndAsyncSend">
            <summary>设置 RemotingAppender.EndAsyncSend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.OnClose">
            <summary>设置 RemotingAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SendBufferCallbackObject">
            <summary>设置 RemotingAppender.SendBufferCallback(Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>设置 RemotingAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SinkGet">
            <summary>设置 RemotingAppender.get_Sink() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SinkSetString">
            <summary>设置 RemotingAppender.set_Sink(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRollingFileAppender">
            <summary>log4net.Appender.RollingFileAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.#ctor(log4net.Appender.RollingFileAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.ActivateOptions">
            <summary>设置 RollingFileAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AdjustFileBeforeAppend">
            <summary>设置 RollingFileAppender.AdjustFileBeforeAppend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AppendLoggingEvent">
            <summary>设置 RollingFileAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AppendLoggingEventArray">
            <summary>设置 RollingFileAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.Constructor">
            <summary>设置 RollingFileAppender.RollingFileAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.CountDirectionGet">
            <summary>设置 RollingFileAppender.get_CountDirection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.CountDirectionSetInt32">
            <summary>设置 RollingFileAppender.set_CountDirection(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DatePatternGet">
            <summary>设置 RollingFileAppender.get_DatePattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DatePatternSetString">
            <summary>设置 RollingFileAppender.set_DatePattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DeleteFileString">
            <summary>设置 RollingFileAppender.DeleteFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DetermineCurSizeRollBackups">
            <summary>设置 RollingFileAppender.DetermineCurSizeRollBackups() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.ExistingInit">
            <summary>设置 RollingFileAppender.ExistingInit() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.FileExistsString">
            <summary>设置 RollingFileAppender.FileExists(String path) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetExistingFilesString">
            <summary>设置 RollingFileAppender.GetExistingFiles(String baseFilePath) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetNextOutputFileNameString">
            <summary>设置 RollingFileAppender.GetNextOutputFileName(String fileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetWildcardPatternForFileString">
            <summary>设置 RollingFileAppender.GetWildcardPatternForFile(String baseFileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.InitializeFromOneFileStringString">
            <summary>设置 RollingFileAppender.InitializeFromOneFile(String baseFile, String curFileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.InitializeRollBackupsStringArrayList">
            <summary>设置 RollingFileAppender.InitializeRollBackups(String baseFile, ArrayList arrayFiles) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxFileSizeGet">
            <summary>设置 RollingFileAppender.get_MaxFileSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxFileSizeSetInt64">
            <summary>设置 RollingFileAppender.set_MaxFileSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxSizeRollBackupsGet">
            <summary>设置 RollingFileAppender.get_MaxSizeRollBackups() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxSizeRollBackupsSetInt32">
            <summary>设置 RollingFileAppender.set_MaxSizeRollBackups(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaximumFileSizeGet">
            <summary>设置 RollingFileAppender.get_MaximumFileSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaximumFileSizeSetString">
            <summary>设置 RollingFileAppender.set_MaximumFileSize(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.OpenFileStringBoolean">
            <summary>设置 RollingFileAppender.OpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollFileStringString">
            <summary>设置 RollingFileAppender.RollFile(String fromFile, String toFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverIfDateBoundaryCrossing">
            <summary>设置 RollingFileAppender.RollOverIfDateBoundaryCrossing() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverRenameFilesString">
            <summary>设置 RollingFileAppender.RollOverRenameFiles(String baseFileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverSize">
            <summary>设置 RollingFileAppender.RollOverSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverTimeBoolean">
            <summary>设置 RollingFileAppender.RollOverTime(Boolean fileIsOpen) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollingStyleGet">
            <summary>设置 RollingFileAppender.get_RollingStyle() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollingStyleSetRollingFileAppenderRollingMode">
            <summary>设置 RollingFileAppender.set_RollingStyle(RollingMode value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.SetQWForFilesTextWriter">
            <summary>设置 RollingFileAppender.SetQWForFiles(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticConstructor">
            <summary>设置 RollingFileAppender.RollingFileAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticLogFileNameGet">
            <summary>设置 RollingFileAppender.get_StaticLogFileName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticLogFileNameSetBoolean">
            <summary>设置 RollingFileAppender.set_StaticLogFileName(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.ActivateOptions">
            <summary>设置 RollingFileAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AdjustFileBeforeAppend">
            <summary>设置 RollingFileAppender.AdjustFileBeforeAppend() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 RollingFileAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AppendLoggingEventArray">
            <summary>设置 RollingFileAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.CountDirectionGet">
            <summary>设置 RollingFileAppender.get_CountDirection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.CountDirectionSetInt32">
            <summary>设置 RollingFileAppender.set_CountDirection(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DatePatternGet">
            <summary>设置 RollingFileAppender.get_DatePattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DatePatternSetString">
            <summary>设置 RollingFileAppender.set_DatePattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DeleteFileString">
            <summary>设置 RollingFileAppender.DeleteFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DetermineCurSizeRollBackups">
            <summary>设置 RollingFileAppender.DetermineCurSizeRollBackups() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.ExistingInit">
            <summary>设置 RollingFileAppender.ExistingInit() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.FileExistsString">
            <summary>设置 RollingFileAppender.FileExists(String path) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetExistingFilesString">
            <summary>设置 RollingFileAppender.GetExistingFiles(String baseFilePath) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetNextOutputFileNameString">
            <summary>设置 RollingFileAppender.GetNextOutputFileName(String fileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.InitializeFromOneFileStringString">
            <summary>设置 RollingFileAppender.InitializeFromOneFile(String baseFile, String curFileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.InitializeRollBackupsStringArrayList">
            <summary>设置 RollingFileAppender.InitializeRollBackups(String baseFile, ArrayList arrayFiles) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxFileSizeGet">
            <summary>设置 RollingFileAppender.get_MaxFileSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxFileSizeSetInt64">
            <summary>设置 RollingFileAppender.set_MaxFileSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxSizeRollBackupsGet">
            <summary>设置 RollingFileAppender.get_MaxSizeRollBackups() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxSizeRollBackupsSetInt32">
            <summary>设置 RollingFileAppender.set_MaxSizeRollBackups(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaximumFileSizeGet">
            <summary>设置 RollingFileAppender.get_MaximumFileSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaximumFileSizeSetString">
            <summary>设置 RollingFileAppender.set_MaximumFileSize(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.OpenFileStringBoolean">
            <summary>设置 RollingFileAppender.OpenFile(String fileName, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollFileStringString">
            <summary>设置 RollingFileAppender.RollFile(String fromFile, String toFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverIfDateBoundaryCrossing">
            <summary>设置 RollingFileAppender.RollOverIfDateBoundaryCrossing() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverRenameFilesString">
            <summary>设置 RollingFileAppender.RollOverRenameFiles(String baseFileName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverSize">
            <summary>设置 RollingFileAppender.RollOverSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverTimeBoolean">
            <summary>设置 RollingFileAppender.RollOverTime(Boolean fileIsOpen) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollingStyleGet">
            <summary>设置 RollingFileAppender.get_RollingStyle() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollingStyleSetRollingFileAppenderRollingMode">
            <summary>设置 RollingFileAppender.set_RollingStyle(RollingMode value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.SetQWForFilesTextWriter">
            <summary>设置 RollingFileAppender.SetQWForFiles(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.StaticLogFileNameGet">
            <summary>设置 RollingFileAppender.get_StaticLogFileName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.StaticLogFileNameSetBoolean">
            <summary>设置 RollingFileAppender.set_StaticLogFileName(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpAppender">
            <summary>log4net.Appender.SmtpAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.#ctor(log4net.Appender.SmtpAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AuthenticationGet">
            <summary>设置 SmtpAppender.get_Authentication() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AuthenticationSetSmtpAppenderSmtpAuthentication">
            <summary>设置 SmtpAppender.set_Authentication(SmtpAuthentication value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.Constructor">
            <summary>设置 SmtpAppender.SmtpAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.FromGet">
            <summary>设置 SmtpAppender.get_From() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.FromSetString">
            <summary>设置 SmtpAppender.set_From(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.LocationInfoGet">
            <summary>设置 SmtpAppender.get_LocationInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.LocationInfoSetBoolean">
            <summary>设置 SmtpAppender.set_LocationInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PasswordGet">
            <summary>设置 SmtpAppender.get_Password() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PasswordSetString">
            <summary>设置 SmtpAppender.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PortGet">
            <summary>设置 SmtpAppender.get_Port() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PortSetInt32">
            <summary>设置 SmtpAppender.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PriorityGet">
            <summary>设置 SmtpAppender.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PrioritySetMailPriority">
            <summary>设置 SmtpAppender.set_Priority(MailPriority value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.RequiresLayoutGet">
            <summary>设置 SmtpAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SendBufferLoggingEventArray">
            <summary>设置 SmtpAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SendEmailString">
            <summary>设置 SmtpAppender.SendEmail(String messageBody) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SmtpHostGet">
            <summary>设置 SmtpAppender.get_SmtpHost() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SmtpHostSetString">
            <summary>设置 SmtpAppender.set_SmtpHost(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SubjectGet">
            <summary>设置 SmtpAppender.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SubjectSetString">
            <summary>设置 SmtpAppender.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ToGet">
            <summary>设置 SmtpAppender.get_To() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ToSetString">
            <summary>设置 SmtpAppender.set_To(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.UsernameGet">
            <summary>设置 SmtpAppender.get_Username() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.UsernameSetString">
            <summary>设置 SmtpAppender.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.AuthenticationGet">
            <summary>设置 SmtpAppender.get_Authentication() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.AuthenticationSetSmtpAppenderSmtpAuthentication">
            <summary>设置 SmtpAppender.set_Authentication(SmtpAuthentication value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.FromGet">
            <summary>设置 SmtpAppender.get_From() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.FromSetString">
            <summary>设置 SmtpAppender.set_From(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.LocationInfoGet">
            <summary>设置 SmtpAppender.get_LocationInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.LocationInfoSetBoolean">
            <summary>设置 SmtpAppender.set_LocationInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PasswordGet">
            <summary>设置 SmtpAppender.get_Password() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PasswordSetString">
            <summary>设置 SmtpAppender.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PortGet">
            <summary>设置 SmtpAppender.get_Port() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PortSetInt32">
            <summary>设置 SmtpAppender.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PriorityGet">
            <summary>设置 SmtpAppender.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PrioritySetMailPriority">
            <summary>设置 SmtpAppender.set_Priority(MailPriority value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 SmtpAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>设置 SmtpAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SendEmailString">
            <summary>设置 SmtpAppender.SendEmail(String messageBody) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SmtpHostGet">
            <summary>设置 SmtpAppender.get_SmtpHost() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SmtpHostSetString">
            <summary>设置 SmtpAppender.set_SmtpHost(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SubjectGet">
            <summary>设置 SmtpAppender.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SubjectSetString">
            <summary>设置 SmtpAppender.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ToGet">
            <summary>设置 SmtpAppender.get_To() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ToSetString">
            <summary>设置 SmtpAppender.set_To(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.UsernameGet">
            <summary>设置 SmtpAppender.get_Username() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.UsernameSetString">
            <summary>设置 SmtpAppender.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpPickupDirAppender">
            <summary>log4net.Appender.SmtpPickupDirAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.#ctor(log4net.Appender.SmtpPickupDirAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ActivateOptions">
            <summary>设置 SmtpPickupDirAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Constructor">
            <summary>设置 SmtpPickupDirAppender.SmtpPickupDirAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ConvertToFullPathString">
            <summary>设置 SmtpPickupDirAppender.ConvertToFullPath(String path) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FromGet">
            <summary>设置 SmtpPickupDirAppender.get_From() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FromSetString">
            <summary>设置 SmtpPickupDirAppender.set_From(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.PickupDirGet">
            <summary>设置 SmtpPickupDirAppender.get_PickupDir() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.PickupDirSetString">
            <summary>设置 SmtpPickupDirAppender.set_PickupDir(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.RequiresLayoutGet">
            <summary>设置 SmtpPickupDirAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SecurityContextGet">
            <summary>设置 SmtpPickupDirAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SecurityContextSetSecurityContext">
            <summary>设置 SmtpPickupDirAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SendBufferLoggingEventArray">
            <summary>设置 SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SubjectGet">
            <summary>设置 SmtpPickupDirAppender.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SubjectSetString">
            <summary>设置 SmtpPickupDirAppender.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ToGet">
            <summary>设置 SmtpPickupDirAppender.get_To() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ToSetString">
            <summary>设置 SmtpPickupDirAppender.set_To(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ActivateOptions">
            <summary>设置 SmtpPickupDirAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FromGet">
            <summary>设置 SmtpPickupDirAppender.get_From() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FromSetString">
            <summary>设置 SmtpPickupDirAppender.set_From(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.PickupDirGet">
            <summary>设置 SmtpPickupDirAppender.get_PickupDir() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.PickupDirSetString">
            <summary>设置 SmtpPickupDirAppender.set_PickupDir(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 SmtpPickupDirAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SecurityContextGet">
            <summary>设置 SmtpPickupDirAppender.get_SecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>设置 SmtpPickupDirAppender.set_SecurityContext(SecurityContext value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>设置 SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SubjectGet">
            <summary>设置 SmtpPickupDirAppender.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SubjectSetString">
            <summary>设置 SmtpPickupDirAppender.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ToGet">
            <summary>设置 SmtpPickupDirAppender.get_To() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ToSetString">
            <summary>设置 SmtpPickupDirAppender.set_To(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTelnetAppender">
            <summary>log4net.Appender.TelnetAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.#ctor(log4net.Appender.TelnetAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.ActivateOptions">
            <summary>设置 TelnetAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AppendLoggingEvent">
            <summary>设置 TelnetAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.Constructor">
            <summary>设置 TelnetAppender.TelnetAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.OnClose">
            <summary>设置 TelnetAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.PortGet">
            <summary>设置 TelnetAppender.get_Port() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.PortSetInt32">
            <summary>设置 TelnetAppender.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.RequiresLayoutGet">
            <summary>设置 TelnetAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.ActivateOptions">
            <summary>设置 TelnetAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 TelnetAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.OnClose">
            <summary>设置 TelnetAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.PortGet">
            <summary>设置 TelnetAppender.get_Port() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.PortSetInt32">
            <summary>设置 TelnetAppender.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 TelnetAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTextWriterAppender">
            <summary>log4net.Appender.TextWriterAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.#ctor(log4net.Appender.TextWriterAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AppendLoggingEvent">
            <summary>设置 TextWriterAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AppendLoggingEventArray">
            <summary>设置 TextWriterAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.CloseWriter">
            <summary>设置 TextWriterAppender.CloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Constructor">
            <summary>设置 TextWriterAppender.TextWriterAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ConstructorILayoutStream">
            <summary>设置 TextWriterAppender.TextWriterAppender(ILayout layout, Stream os) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ConstructorILayoutTextWriter">
            <summary>设置 TextWriterAppender.TextWriterAppender(ILayout layout, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ErrorHandlerGet">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 TextWriterAppender.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ImmediateFlushGet">
            <summary>设置 TextWriterAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ImmediateFlushSetBoolean">
            <summary>设置 TextWriterAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.OnClose">
            <summary>设置 TextWriterAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.PreAppendCheck">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.PrepareWriter">
            <summary>设置 TextWriterAppender.PrepareWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.QuietWriterGet">
            <summary>设置 TextWriterAppender.get_QuietWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.QuietWriterSetQuietTextWriter">
            <summary>设置 TextWriterAppender.set_QuietWriter(QuietTextWriter value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.RequiresLayoutGet">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Reset">
            <summary>设置 TextWriterAppender.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteFooter">
            <summary>设置 TextWriterAppender.WriteFooter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteFooterAndCloseWriter">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteHeader">
            <summary>设置 TextWriterAppender.WriteHeader() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriterGet">
            <summary>设置 TextWriterAppender.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriterSetTextWriter">
            <summary>设置 TextWriterAppender.set_Writer(TextWriter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 TextWriterAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.AppendLoggingEventArray">
            <summary>设置 TextWriterAppender.Append(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.CloseWriter">
            <summary>设置 TextWriterAppender.CloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ErrorHandlerGet">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>设置 TextWriterAppender.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ImmediateFlushGet">
            <summary>设置 TextWriterAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>设置 TextWriterAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.OnClose">
            <summary>设置 TextWriterAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.PreAppendCheck">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.PrepareWriter">
            <summary>设置 TextWriterAppender.PrepareWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.QuietWriterGet">
            <summary>设置 TextWriterAppender.get_QuietWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.QuietWriterSetQuietTextWriter">
            <summary>设置 TextWriterAppender.set_QuietWriter(QuietTextWriter value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.Reset">
            <summary>设置 TextWriterAppender.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteFooter">
            <summary>设置 TextWriterAppender.WriteFooter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteFooterAndCloseWriter">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteHeader">
            <summary>设置 TextWriterAppender.WriteHeader() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriterGet">
            <summary>设置 TextWriterAppender.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriterSetTextWriter">
            <summary>设置 TextWriterAppender.set_Writer(TextWriter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTraceAppender">
            <summary>log4net.Appender.TraceAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.#ctor(log4net.Appender.TraceAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AppendLoggingEvent">
            <summary>设置 TraceAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.Constructor">
            <summary>设置 TraceAppender.TraceAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ConstructorILayout">
            <summary>设置 TraceAppender.TraceAppender(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ImmediateFlushGet">
            <summary>设置 TraceAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ImmediateFlushSetBoolean">
            <summary>设置 TraceAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.RequiresLayoutGet">
            <summary>设置 TraceAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTraceAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 TraceAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.ImmediateFlushGet">
            <summary>设置 TraceAppender.get_ImmediateFlush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>设置 TraceAppender.set_ImmediateFlush(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 TraceAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimUdpAppender">
            <summary>log4net.Appender.UdpAppender 的填充码类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.#ctor(log4net.Appender.UdpAppender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Appender.IAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ActivateOptions">
            <summary>设置 UdpAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AppendLoggingEvent">
            <summary>设置 UdpAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ClientGet">
            <summary>设置 UdpAppender.get_Client() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ClientSetUdpClient">
            <summary>设置 UdpAppender.set_Client(UdpClient value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.Constructor">
            <summary>设置 UdpAppender.UdpAppender() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.EncodingGet">
            <summary>设置 UdpAppender.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.EncodingSetEncoding">
            <summary>设置 UdpAppender.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.InitializeClientConnection">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.LocalPortGet">
            <summary>设置 UdpAppender.get_LocalPort() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.LocalPortSetInt32">
            <summary>设置 UdpAppender.set_LocalPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.OnClose">
            <summary>设置 UdpAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteAddressGet">
            <summary>设置 UdpAppender.get_RemoteAddress() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteAddressSetIPAddress">
            <summary>设置 UdpAppender.set_RemoteAddress(IPAddress value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteEndPointGet">
            <summary>设置 UdpAppender.get_RemoteEndPoint() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteEndPointSetIPEndPoint">
            <summary>设置 UdpAppender.set_RemoteEndPoint(IPEndPoint value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemotePortGet">
            <summary>设置 UdpAppender.get_RemotePort() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemotePortSetInt32">
            <summary>设置 UdpAppender.set_RemotePort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RequiresLayoutGet">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimUdpAppender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ActivateOptions">
            <summary>设置 UdpAppender.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.AppendLoggingEvent">
            <summary>设置 UdpAppender.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ClientGet">
            <summary>设置 UdpAppender.get_Client() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ClientSetUdpClient">
            <summary>设置 UdpAppender.set_Client(UdpClient value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.EncodingGet">
            <summary>设置 UdpAppender.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.EncodingSetEncoding">
            <summary>设置 UdpAppender.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.InitializeClientConnection">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.LocalPortGet">
            <summary>设置 UdpAppender.get_LocalPort() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.LocalPortSetInt32">
            <summary>设置 UdpAppender.set_LocalPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.OnClose">
            <summary>设置 UdpAppender.OnClose() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteAddressGet">
            <summary>设置 UdpAppender.get_RemoteAddress() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteAddressSetIPAddress">
            <summary>设置 UdpAppender.set_RemoteAddress(IPAddress value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteEndPointGet">
            <summary>设置 UdpAppender.get_RemoteEndPoint() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteEndPointSetIPEndPoint">
            <summary>设置 UdpAppender.set_RemoteEndPoint(IPEndPoint value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemotePortGet">
            <summary>设置 UdpAppender.get_RemotePort() 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemotePortSetInt32">
            <summary>设置 UdpAppender.set_RemotePort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RequiresLayoutGet">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAdoNetAppender">
            <summary>log4net.Appender.AdoNetAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ActivateOptions">
            <summary>设置 AdoNetAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ActivateOptions01">
            <summary>设置 AdoNetAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubAdoNetAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubAdoNetAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubAdoNetAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubAdoNetAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.GetLogStatement(log4net.Core.LoggingEvent)">
            <summary>设置 AdoNetAppender.GetLogStatement(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.GetLogStatementLoggingEvent">
            <summary>设置 AdoNetAppender.GetLogStatement(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.InitializeStub">
            <summary>初始化 type StubAdoNetAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.OnClose">
            <summary>设置 AdoNetAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnClose01">
            <summary>设置 AdoNetAppender.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionType">
            <summary>设置 AdoNetAppender.ResolveConnectionType() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionType01">
            <summary>设置 AdoNetAppender.ResolveConnectionType() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 AdoNetAppender.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendBuffer(System.Data.IDbTransaction,log4net.Core.LoggingEvent[])">
            <summary>设置 AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendBufferIDbTransactionLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendBufferLoggingEventArray">
            <summary>设置 AdoNetAppender.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAdoNetAppenderParameter">
            <summary>log4net.Appender.AdoNetAppenderParameter 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.FormatValue(System.Data.IDbCommand,log4net.Core.LoggingEvent)">
            <summary>设置 AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppenderParameter.FormatValueIDbCommandLoggingEvent">
            <summary>设置 AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InitializeStub">
            <summary>初始化 type StubAdoNetAppenderParameter 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.Prepare(System.Data.IDbCommand)">
            <summary>设置 AdoNetAppenderParameter.Prepare(IDbCommand command) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppenderParameter.PrepareIDbCommand">
            <summary>设置 AdoNetAppenderParameter.Prepare(IDbCommand command) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAnsiColorTerminalAppender">
            <summary>log4net.Appender.AnsiColorTerminalAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ActivateOptions">
            <summary>设置 AnsiColorTerminalAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ActivateOptions01">
            <summary>设置 AnsiColorTerminalAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AppendLoggingEvent">
            <summary>设置 AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubAnsiColorTerminalAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubAnsiColorTerminalAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToTarget">
            <summary>附加委托以将 StubAnsiColorTerminalAppender.Target 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InitializeStub">
            <summary>初始化 type StubAnsiColorTerminalAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.RequiresLayoutGet">
            <summary>设置 AnsiColorTerminalAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.TargetGet">
            <summary>设置 AnsiColorTerminalAppender.get_Target() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.TargetSetString">
            <summary>设置 AnsiColorTerminalAppender.set_Target(String value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.RequiresLayout">
            <summary>设置 AnsiColorTerminalAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Target">
            <summary>设置 AnsiColorTerminalAppender.get_Target() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAppenderCollection">
            <summary>log4net.Appender.AppenderCollection 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.AppenderCollection.Tag)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.IAppender[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.AppenderCollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(System.Collections.ICollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Add(log4net.Appender.IAppender)">
            <summary>设置 AppenderCollection.Add(IAppender item) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddIAppender">
            <summary>设置 AppenderCollection.Add(IAppender item) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(log4net.Appender.AppenderCollection)">
            <summary>设置 AppenderCollection.AddRange(AppenderCollection x) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 AppenderCollection.AddRange(ICollection col) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(log4net.Appender.IAppender[])">
            <summary>设置 AppenderCollection.AddRange(IAppender[] x) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeAppenderCollection">
            <summary>设置 AppenderCollection.AddRange(AppenderCollection x) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeIAppenderArray">
            <summary>设置 AppenderCollection.AddRange(IAppender[] x) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeICollection">
            <summary>设置 AppenderCollection.AddRange(ICollection col) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AttachBackingFieldToCapacity">
            <summary>附加委托以将 StubAppenderCollection.Capacity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CapacityGet">
            <summary>设置 AppenderCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CapacitySetInt32">
            <summary>设置 AppenderCollection.set_Capacity(Int32 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Clear">
            <summary>设置 AppenderCollection.Clear() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.Clear01">
            <summary>设置 AppenderCollection.Clear() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Clone">
            <summary>设置 AppenderCollection.Clone() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.Clone01">
            <summary>设置 AppenderCollection.Clone() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Contains(log4net.Appender.IAppender)">
            <summary>设置 AppenderCollection.Contains(IAppender item) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ContainsIAppender">
            <summary>设置 AppenderCollection.Contains(IAppender item) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.CopyTo(log4net.Appender.IAppender[])">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.CopyTo(log4net.Appender.IAppender[],System.Int32)">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array, Int32 start) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CopyToIAppenderArray">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CopyToIAppenderArrayInt32">
            <summary>设置 AppenderCollection.CopyTo(IAppender[] array, Int32 start) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CountGet">
            <summary>设置 AppenderCollection.get_Count() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.GetEnumerator">
            <summary>设置 AppenderCollection.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.GetEnumerator01">
            <summary>设置 AppenderCollection.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.IndexOf(log4net.Appender.IAppender)">
            <summary>设置 AppenderCollection.IndexOf(IAppender item) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IndexOfIAppender">
            <summary>设置 AppenderCollection.IndexOf(IAppender item) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.InitializeStub">
            <summary>初始化 type StubAppenderCollection 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Insert(System.Int32,log4net.Appender.IAppender)">
            <summary>设置 AppenderCollection.Insert(Int32 index, IAppender item) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.InsertInt32IAppender">
            <summary>设置 AppenderCollection.Insert(Int32 index, IAppender item) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsFixedSizeGet">
            <summary>设置 AppenderCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsReadOnlyGet">
            <summary>设置 AppenderCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsSynchronizedGet">
            <summary>设置 AppenderCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ItemGetInt32">
            <summary>设置 AppenderCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ItemSetInt32IAppender">
            <summary>设置 AppenderCollection.set_Item(Int32 index, IAppender value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Remove(log4net.Appender.IAppender)">
            <summary>设置 AppenderCollection.Remove(IAppender item) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.RemoveAt(System.Int32)">
            <summary>设置 AppenderCollection.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.RemoveAtInt32">
            <summary>设置 AppenderCollection.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.RemoveIAppender">
            <summary>设置 AppenderCollection.Remove(IAppender item) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.SyncRootGet">
            <summary>设置 AppenderCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.ToArray">
            <summary>设置 AppenderCollection.ToArray() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ToArray01">
            <summary>设置 AppenderCollection.ToArray() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.TrimToSize">
            <summary>设置 AppenderCollection.TrimToSize() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.TrimToSize01">
            <summary>设置 AppenderCollection.TrimToSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Capacity">
            <summary>设置 AppenderCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Count">
            <summary>设置 AppenderCollection.get_Count() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsFixedSize">
            <summary>设置 AppenderCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsReadOnly">
            <summary>设置 AppenderCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsSynchronized">
            <summary>设置 AppenderCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Item(System.Int32)">
            <summary>设置 AppenderCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.SyncRoot">
            <summary>设置 AppenderCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAppenderSkeleton">
            <summary>log4net.Appender.AppenderSkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.Append(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AppendLoggingEvent">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubAppenderSkeleton.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubAppenderSkeleton.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.InitializeStub">
            <summary>初始化 type StubAppenderSkeleton 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAspNetTraceAppender">
            <summary>log4net.Appender.AspNetTraceAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 AspNetTraceAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AppendLoggingEvent">
            <summary>设置 AspNetTraceAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubAspNetTraceAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubAspNetTraceAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.InitializeStub">
            <summary>初始化 type StubAspNetTraceAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.RequiresLayoutGet">
            <summary>设置 AspNetTraceAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.RequiresLayout">
            <summary>设置 AspNetTraceAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubBufferingAppenderSkeleton">
            <summary>log4net.Appender.BufferingAppenderSkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ActivateOptions">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ActivateOptions01">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubBufferingAppenderSkeleton.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToFix">
            <summary>附加委托以将 StubBufferingAppenderSkeleton.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubBufferingAppenderSkeleton.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubBufferingAppenderSkeleton.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InitializeStub">
            <summary>初始化 type StubBufferingAppenderSkeleton 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnClose">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnClose01">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 BufferingAppenderSkeleton.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendBufferLoggingEventArray">
            <summary>设置 BufferingAppenderSkeleton.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubBufferingForwardingAppender">
            <summary>log4net.Appender.BufferingForwardingAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.ActivateOptions">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ActivateOptions01">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddAppender(log4net.Appender.IAppender)">
            <summary>设置 BufferingForwardingAppender.AddAppender(IAppender newAppender) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.AddAppender(IAppender newAppender) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendersGet">
            <summary>设置 BufferingForwardingAppender.get_Appenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubBufferingForwardingAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubBufferingForwardingAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubBufferingForwardingAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubBufferingForwardingAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.GetAppender(System.String)">
            <summary>设置 BufferingForwardingAppender.GetAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.GetAppenderString">
            <summary>设置 BufferingForwardingAppender.GetAppender(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.InitializeStub">
            <summary>初始化 type StubBufferingForwardingAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnClose">
            <summary>设置 BufferingForwardingAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnClose01">
            <summary>设置 BufferingForwardingAppender.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAllAppenders">
            <summary>设置 BufferingForwardingAppender.RemoveAllAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAllAppenders01">
            <summary>设置 BufferingForwardingAppender.RemoveAllAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppender(log4net.Appender.IAppender)">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppender(System.String)">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppenderIAppender">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppenderString">
            <summary>设置 BufferingForwardingAppender.RemoveAppender(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 BufferingForwardingAppender.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendBufferLoggingEventArray">
            <summary>设置 BufferingForwardingAppender.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Appenders">
            <summary>设置 BufferingForwardingAppender.get_Appenders() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubColoredConsoleAppender">
            <summary>log4net.Appender.ColoredConsoleAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor(log4net.Layout.ILayout,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.ActivateOptions">
            <summary>设置 ColoredConsoleAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ActivateOptions01">
            <summary>设置 ColoredConsoleAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 ColoredConsoleAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AppendLoggingEvent">
            <summary>设置 ColoredConsoleAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubColoredConsoleAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubColoredConsoleAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToTarget">
            <summary>附加委托以将 StubColoredConsoleAppender.Target 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.InitializeStub">
            <summary>初始化 type StubColoredConsoleAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.RequiresLayoutGet">
            <summary>设置 ColoredConsoleAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.TargetGet">
            <summary>设置 ColoredConsoleAppender.get_Target() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.TargetSetString">
            <summary>设置 ColoredConsoleAppender.set_Target(String value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.RequiresLayout">
            <summary>设置 ColoredConsoleAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.Target">
            <summary>设置 ColoredConsoleAppender.get_Target() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubConsoleAppender">
            <summary>log4net.Appender.ConsoleAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor(log4net.Layout.ILayout,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 ConsoleAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AppendLoggingEvent">
            <summary>设置 ConsoleAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubConsoleAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubConsoleAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToTarget">
            <summary>附加委托以将 StubConsoleAppender.Target 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.InitializeStub">
            <summary>初始化 type StubConsoleAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.RequiresLayoutGet">
            <summary>设置 ConsoleAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.TargetGet">
            <summary>设置 ConsoleAppender.get_Target() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.TargetSetString">
            <summary>设置 ConsoleAppender.set_Target(String value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.RequiresLayout">
            <summary>设置 ConsoleAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.Target">
            <summary>设置 ConsoleAppender.get_Target() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubDebugAppender">
            <summary>log4net.Appender.DebugAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 DebugAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AppendLoggingEvent">
            <summary>设置 DebugAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubDebugAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubDebugAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.InitializeStub">
            <summary>初始化 type StubDebugAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.RequiresLayoutGet">
            <summary>设置 DebugAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.RequiresLayout">
            <summary>设置 DebugAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubEventLogAppender">
            <summary>log4net.Appender.EventLogAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.ActivateOptions">
            <summary>设置 EventLogAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ActivateOptions01">
            <summary>设置 EventLogAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 EventLogAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AppendLoggingEvent">
            <summary>设置 EventLogAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubEventLogAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubEventLogAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.GetEntryType(log4net.Core.Level)">
            <summary>设置 EventLogAppender.GetEntryType(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.GetEntryTypeLevel">
            <summary>设置 EventLogAppender.GetEntryType(Level level) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.InitializeStub">
            <summary>初始化 type StubEventLogAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.RequiresLayoutGet">
            <summary>设置 EventLogAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.RequiresLayout">
            <summary>设置 EventLogAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubFileAppender">
            <summary>log4net.Appender.FileAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor(log4net.Layout.ILayout,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor(log4net.Layout.ILayout,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.ActivateOptions">
            <summary>设置 FileAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ActivateOptions01">
            <summary>设置 FileAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 FileAppender.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 FileAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AppendLoggingEvent">
            <summary>设置 FileAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AppendLoggingEventArray">
            <summary>设置 FileAppender.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubFileAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToFile">
            <summary>附加委托以将 StubFileAppender.File 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubFileAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToWriter">
            <summary>附加委托以将 StubFileAppender.Writer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.CloseWriter">
            <summary>设置 FileAppender.CloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.CloseWriter01">
            <summary>设置 FileAppender.CloseWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ErrorHandlerGet">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 TextWriterAppender.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FileGet">
            <summary>设置 FileAppender.get_File() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FileSetString">
            <summary>设置 FileAppender.set_File(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.InitializeStub">
            <summary>初始化 type StubFileAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.OnClose">
            <summary>设置 TextWriterAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.OnClose01">
            <summary>设置 TextWriterAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.OpenFile(System.String,System.Boolean)">
            <summary>设置 FileAppender.OpenFile(String fileName, Boolean append) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.OpenFileStringBoolean">
            <summary>设置 FileAppender.OpenFile(String fileName, Boolean append) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.PreAppendCheck">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.PreAppendCheck01">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.PrepareWriter">
            <summary>设置 FileAppender.PrepareWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.PrepareWriter01">
            <summary>设置 FileAppender.PrepareWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.RequiresLayoutGet">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Reset">
            <summary>设置 FileAppender.Reset() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.Reset01">
            <summary>设置 FileAppender.Reset() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SafeOpenFile(System.String,System.Boolean)">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SafeOpenFileStringBoolean">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SetQWForFiles(System.IO.Stream)">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SetQWForFiles(System.IO.TextWriter)">
            <summary>设置 FileAppender.SetQWForFiles(TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SetQWForFilesStream">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SetQWForFilesTextWriter">
            <summary>设置 FileAppender.SetQWForFiles(TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteFooter">
            <summary>设置 FileAppender.WriteFooter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteFooter01">
            <summary>设置 FileAppender.WriteFooter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteFooterAndCloseWriter">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteFooterAndCloseWriter01">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteHeader">
            <summary>设置 FileAppender.WriteHeader() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteHeader01">
            <summary>设置 FileAppender.WriteHeader() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriterGet">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriterSetTextWriter">
            <summary>设置 TextWriterAppender.set_Writer(TextWriter value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.ErrorHandler">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.File">
            <summary>设置 FileAppender.get_File() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.RequiresLayout">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.Writer">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubForwardingAppender">
            <summary>log4net.Appender.ForwardingAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AddAppender(log4net.Appender.IAppender)">
            <summary>设置 ForwardingAppender.AddAppender(IAppender newAppender) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AddAppenderIAppender">
            <summary>设置 ForwardingAppender.AddAppender(IAppender newAppender) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 ForwardingAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 ForwardingAppender.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendLoggingEvent">
            <summary>设置 ForwardingAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendLoggingEventArray">
            <summary>设置 ForwardingAppender.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendersGet">
            <summary>设置 ForwardingAppender.get_Appenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubForwardingAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubForwardingAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.GetAppender(System.String)">
            <summary>设置 ForwardingAppender.GetAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.GetAppenderString">
            <summary>设置 ForwardingAppender.GetAppender(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.InitializeStub">
            <summary>初始化 type StubForwardingAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.OnClose">
            <summary>设置 ForwardingAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.OnClose01">
            <summary>设置 ForwardingAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAllAppenders">
            <summary>设置 ForwardingAppender.RemoveAllAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAllAppenders01">
            <summary>设置 ForwardingAppender.RemoveAllAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppender(log4net.Appender.IAppender)">
            <summary>设置 ForwardingAppender.RemoveAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppender(System.String)">
            <summary>设置 ForwardingAppender.RemoveAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppenderIAppender">
            <summary>设置 ForwardingAppender.RemoveAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppenderString">
            <summary>设置 ForwardingAppender.RemoveAppender(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.Appenders">
            <summary>设置 ForwardingAppender.get_Appenders() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubIAppender">
            <summary>log4net.Appender.IAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.#ctor">
            <summary>初始化 type StubIAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.AttachBackingFieldToName">
            <summary>附加委托以将 StubIAppender.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.Close">
            <summary>设置 IAppender.Close() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.DoAppendLoggingEvent">
            <summary>设置 IAppender.DoAppend(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.NameGet">
            <summary>设置 IAppender.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.NameSetString">
            <summary>设置 IAppender.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.l4::log4net#Appender#IAppender#Close">
            <summary>设置 IAppender.Close() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.l4::log4net#Appender#IAppender#DoAppend(log4net.Core.LoggingEvent)">
            <summary>设置 IAppender.DoAppend(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubIAppender.l4::log4net#Appender#IAppender#Name">
            <summary>设置 IAppender.get_Name() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubIBulkAppender">
            <summary>log4net.Appender.IBulkAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.#ctor">
            <summary>初始化 type StubIBulkAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.AttachBackingFieldToName">
            <summary>附加委托以将 StubIBulkAppender.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.Close">
            <summary>设置 IAppender.Close() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.DoAppendLoggingEvent">
            <summary>设置 IAppender.DoAppend(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.DoAppendLoggingEventArray">
            <summary>设置 IBulkAppender.DoAppend(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.NameGet">
            <summary>设置 IAppender.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.NameSetString">
            <summary>设置 IAppender.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.l4::log4net#Appender#IAppender#Close">
            <summary>设置 IAppender.Close() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.l4::log4net#Appender#IAppender#DoAppend(log4net.Core.LoggingEvent)">
            <summary>设置 IAppender.DoAppend(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.l4::log4net#Appender#IBulkAppender#DoAppend(log4net.Core.LoggingEvent[])">
            <summary>设置 IBulkAppender.DoAppend(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubIBulkAppender.l4::log4net#Appender#IAppender#Name">
            <summary>设置 IAppender.get_Name() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubLocalSyslogAppender">
            <summary>log4net.Appender.LocalSyslogAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.ActivateOptions">
            <summary>设置 LocalSyslogAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ActivateOptions01">
            <summary>设置 LocalSyslogAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 LocalSyslogAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AppendLoggingEvent">
            <summary>设置 LocalSyslogAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubLocalSyslogAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubLocalSyslogAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.GetSeverity(log4net.Core.Level)">
            <summary>设置 LocalSyslogAppender.GetSeverity(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.GetSeverityLevel">
            <summary>设置 LocalSyslogAppender.GetSeverity(Level level) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.InitializeStub">
            <summary>初始化 type StubLocalSyslogAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.OnClose">
            <summary>设置 LocalSyslogAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.OnClose01">
            <summary>设置 LocalSyslogAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.RequiresLayoutGet">
            <summary>设置 LocalSyslogAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.RequiresLayout">
            <summary>设置 LocalSyslogAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubMemoryAppender">
            <summary>log4net.Appender.MemoryAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 MemoryAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AppendLoggingEvent">
            <summary>设置 MemoryAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubMemoryAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubMemoryAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubMemoryAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubMemoryAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Clear">
            <summary>设置 MemoryAppender.Clear() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.Clear01">
            <summary>设置 MemoryAppender.Clear() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FixGet">
            <summary>设置 MemoryAppender.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FixSetFixFlags">
            <summary>设置 MemoryAppender.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.GetEvents">
            <summary>设置 MemoryAppender.GetEvents() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.GetEvents01">
            <summary>设置 MemoryAppender.GetEvents() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.InitializeStub">
            <summary>初始化 type StubMemoryAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventDataGet">
            <summary>设置 MemoryAppender.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 MemoryAppender.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.Fix">
            <summary>设置 MemoryAppender.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventData">
            <summary>设置 MemoryAppender.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubNetSendAppender">
            <summary>log4net.Appender.NetSendAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.ActivateOptions">
            <summary>设置 NetSendAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ActivateOptions01">
            <summary>设置 NetSendAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 NetSendAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AppendLoggingEvent">
            <summary>设置 NetSendAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubNetSendAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubNetSendAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.InitializeStub">
            <summary>初始化 type StubNetSendAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.RequiresLayoutGet">
            <summary>设置 NetSendAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.RequiresLayout">
            <summary>设置 NetSendAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubOutputDebugStringAppender">
            <summary>log4net.Appender.OutputDebugStringAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 OutputDebugStringAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AppendLoggingEvent">
            <summary>设置 OutputDebugStringAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubOutputDebugStringAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubOutputDebugStringAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.InitializeStub">
            <summary>初始化 type StubOutputDebugStringAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.RequiresLayoutGet">
            <summary>设置 OutputDebugStringAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.RequiresLayout">
            <summary>设置 OutputDebugStringAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRemoteSyslogAppender">
            <summary>log4net.Appender.RemoteSyslogAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.ActivateOptions">
            <summary>设置 RemoteSyslogAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ActivateOptions01">
            <summary>设置 RemoteSyslogAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 RemoteSyslogAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AppendLoggingEvent">
            <summary>设置 RemoteSyslogAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubRemoteSyslogAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubRemoteSyslogAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.GetSeverity(log4net.Core.Level)">
            <summary>设置 RemoteSyslogAppender.GetSeverity(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.GetSeverityLevel">
            <summary>设置 RemoteSyslogAppender.GetSeverity(Level level) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeClientConnection">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeClientConnection01">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeStub">
            <summary>初始化 type StubRemoteSyslogAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.OnClose">
            <summary>设置 UdpAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.OnClose01">
            <summary>设置 UdpAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.RequiresLayoutGet">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.RequiresLayout">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRemotingAppender">
            <summary>log4net.Appender.RemotingAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.ActivateOptions">
            <summary>设置 RemotingAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ActivateOptions01">
            <summary>设置 RemotingAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubRemotingAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubRemotingAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubRemotingAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubRemotingAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.InitializeStub">
            <summary>初始化 type StubRemotingAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.OnClose">
            <summary>设置 RemotingAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnClose01">
            <summary>设置 RemotingAppender.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.RequiresLayoutGet">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 RemotingAppender.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.SendBufferLoggingEventArray">
            <summary>设置 RemotingAppender.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.RequiresLayout">
            <summary>设置 AppenderSkeleton.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRollingFileAppender">
            <summary>log4net.Appender.RollingFileAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.ActivateOptions">
            <summary>设置 RollingFileAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ActivateOptions01">
            <summary>设置 RollingFileAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AdjustFileBeforeAppend">
            <summary>设置 RollingFileAppender.AdjustFileBeforeAppend() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AdjustFileBeforeAppend01">
            <summary>设置 RollingFileAppender.AdjustFileBeforeAppend() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 RollingFileAppender.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 RollingFileAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AppendLoggingEvent">
            <summary>设置 RollingFileAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AppendLoggingEventArray">
            <summary>设置 RollingFileAppender.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubRollingFileAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToFile">
            <summary>附加委托以将 StubRollingFileAppender.File 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubRollingFileAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToWriter">
            <summary>附加委托以将 StubRollingFileAppender.Writer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.CloseWriter">
            <summary>设置 FileAppender.CloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.CloseWriter01">
            <summary>设置 FileAppender.CloseWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandlerGet">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 TextWriterAppender.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FileGet">
            <summary>设置 FileAppender.get_File() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FileSetString">
            <summary>设置 FileAppender.set_File(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.InitializeStub">
            <summary>初始化 type StubRollingFileAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.OnClose">
            <summary>设置 TextWriterAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.OnClose01">
            <summary>设置 TextWriterAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.OpenFile(System.String,System.Boolean)">
            <summary>设置 RollingFileAppender.OpenFile(String fileName, Boolean append) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.OpenFileStringBoolean">
            <summary>设置 RollingFileAppender.OpenFile(String fileName, Boolean append) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.PreAppendCheck">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.PreAppendCheck01">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.PrepareWriter">
            <summary>设置 FileAppender.PrepareWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.PrepareWriter01">
            <summary>设置 FileAppender.PrepareWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.RequiresLayoutGet">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Reset">
            <summary>设置 FileAppender.Reset() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.Reset01">
            <summary>设置 FileAppender.Reset() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SafeOpenFile(System.String,System.Boolean)">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SafeOpenFileStringBoolean">
            <summary>设置 FileAppender.SafeOpenFile(String fileName, Boolean append) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFiles(System.IO.Stream)">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFiles(System.IO.TextWriter)">
            <summary>设置 RollingFileAppender.SetQWForFiles(TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFilesStream">
            <summary>设置 FileAppender.SetQWForFiles(Stream fileStream) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFilesTextWriter">
            <summary>设置 RollingFileAppender.SetQWForFiles(TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooter">
            <summary>设置 FileAppender.WriteFooter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooter01">
            <summary>设置 FileAppender.WriteFooter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooterAndCloseWriter">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooterAndCloseWriter01">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteHeader">
            <summary>设置 FileAppender.WriteHeader() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteHeader01">
            <summary>设置 FileAppender.WriteHeader() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriterGet">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriterSetTextWriter">
            <summary>设置 TextWriterAppender.set_Writer(TextWriter value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandler">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.File">
            <summary>设置 FileAppender.get_File() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.RequiresLayout">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.Writer">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubSmtpAppender">
            <summary>log4net.Appender.SmtpAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.ActivateOptions">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ActivateOptions01">
            <summary>设置 BufferingAppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubSmtpAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubSmtpAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubSmtpAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubSmtpAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.InitializeStub">
            <summary>初始化 type StubSmtpAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.OnClose">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnClose01">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.RequiresLayoutGet">
            <summary>设置 SmtpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 SmtpAppender.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendBufferLoggingEventArray">
            <summary>设置 SmtpAppender.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendEmail(System.String)">
            <summary>设置 SmtpAppender.SendEmail(String messageBody) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendEmailString">
            <summary>设置 SmtpAppender.SendEmail(String messageBody) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.RequiresLayout">
            <summary>设置 SmtpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubSmtpPickupDirAppender">
            <summary>log4net.Appender.SmtpPickupDirAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ActivateOptions">
            <summary>设置 SmtpPickupDirAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ActivateOptions01">
            <summary>设置 SmtpPickupDirAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AppendLoggingEvent">
            <summary>设置 BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubSmtpPickupDirAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToFix">
            <summary>附加委托以将 StubSmtpPickupDirAppender.Fix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubSmtpPickupDirAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>附加委托以将 StubSmtpPickupDirAppender.OnlyFixPartialEventData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FixGet">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FixSetFixFlags">
            <summary>设置 BufferingAppenderSkeleton.set_Fix(FixFlags value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush(System.Boolean)">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush01">
            <summary>设置 BufferingAppenderSkeleton.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FlushBoolean">
            <summary>设置 BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InitializeStub">
            <summary>初始化 type StubSmtpPickupDirAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnClose">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnClose01">
            <summary>设置 BufferingAppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventDataGet">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>设置 BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.RequiresLayoutGet">
            <summary>设置 SmtpPickupDirAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>设置 SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendBufferLoggingEventArray">
            <summary>设置 SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>设置 BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Fix">
            <summary>设置 BufferingAppenderSkeleton.get_Fix() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventData">
            <summary>设置 BufferingAppenderSkeleton.get_OnlyFixPartialEventData() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.RequiresLayout">
            <summary>设置 SmtpPickupDirAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTelnetAppender">
            <summary>log4net.Appender.TelnetAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.ActivateOptions">
            <summary>设置 TelnetAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ActivateOptions01">
            <summary>设置 TelnetAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 TelnetAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AppendLoggingEvent">
            <summary>设置 TelnetAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubTelnetAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubTelnetAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.InitializeStub">
            <summary>初始化 type StubTelnetAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.OnClose">
            <summary>设置 TelnetAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.OnClose01">
            <summary>设置 TelnetAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.RequiresLayoutGet">
            <summary>设置 TelnetAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.RequiresLayout">
            <summary>设置 TelnetAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTextWriterAppender">
            <summary>log4net.Appender.TextWriterAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor(log4net.Layout.ILayout,System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor(log4net.Layout.ILayout,System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 TextWriterAppender.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 TextWriterAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AppendLoggingEvent">
            <summary>设置 TextWriterAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AppendLoggingEventArray">
            <summary>设置 TextWriterAppender.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubTextWriterAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubTextWriterAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToWriter">
            <summary>附加委托以将 StubTextWriterAppender.Writer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.CloseWriter">
            <summary>设置 TextWriterAppender.CloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.CloseWriter01">
            <summary>设置 TextWriterAppender.CloseWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandlerGet">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 TextWriterAppender.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.InitializeStub">
            <summary>初始化 type StubTextWriterAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.OnClose">
            <summary>设置 TextWriterAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.OnClose01">
            <summary>设置 TextWriterAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.PreAppendCheck">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.PreAppendCheck01">
            <summary>设置 TextWriterAppender.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.PrepareWriter">
            <summary>设置 TextWriterAppender.PrepareWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.PrepareWriter01">
            <summary>设置 TextWriterAppender.PrepareWriter() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.RequiresLayoutGet">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Reset">
            <summary>设置 TextWriterAppender.Reset() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.Reset01">
            <summary>设置 TextWriterAppender.Reset() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooter">
            <summary>设置 TextWriterAppender.WriteFooter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooter01">
            <summary>设置 TextWriterAppender.WriteFooter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooterAndCloseWriter">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooterAndCloseWriter01">
            <summary>设置 TextWriterAppender.WriteFooterAndCloseWriter() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteHeader">
            <summary>设置 TextWriterAppender.WriteHeader() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteHeader01">
            <summary>设置 TextWriterAppender.WriteHeader() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriterGet">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriterSetTextWriter">
            <summary>设置 TextWriterAppender.set_Writer(TextWriter value) 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandler">
            <summary>设置 TextWriterAppender.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.RequiresLayout">
            <summary>设置 TextWriterAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.Writer">
            <summary>设置 TextWriterAppender.get_Writer() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTraceAppender">
            <summary>log4net.Appender.TraceAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.ActivateOptions">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ActivateOptions01">
            <summary>设置 AppenderSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 TraceAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AppendLoggingEvent">
            <summary>设置 TraceAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubTraceAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubTraceAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.InitializeStub">
            <summary>初始化 type StubTraceAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.OnClose">
            <summary>设置 AppenderSkeleton.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.OnClose01">
            <summary>设置 AppenderSkeleton.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.RequiresLayoutGet">
            <summary>设置 TraceAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.RequiresLayout">
            <summary>设置 TraceAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubUdpAppender">
            <summary>log4net.Appender.UdpAppender 的存根类型</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.ActivateOptions">
            <summary>设置 UdpAppender.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ActivateOptions01">
            <summary>设置 UdpAppender.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AddFilterIFilter">
            <summary>设置 AppenderSkeleton.AddFilter(IFilter filter) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 存根</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.Append(log4net.Core.LoggingEvent)">
            <summary>设置 UdpAppender.Append(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AppendLoggingEvent">
            <summary>设置 UdpAppender.Append(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AppendLoggingEventArray">
            <summary>设置 AppenderSkeleton.Append(LoggingEvent[] loggingEvents) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AttachBackingFieldToErrorHandler">
            <summary>附加委托以将 StubUdpAppender.ErrorHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AttachBackingFieldToLayout">
            <summary>附加委托以将 StubUdpAppender.Layout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.ClearFilters">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ClearFilters01">
            <summary>设置 AppenderSkeleton.ClearFilters() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ErrorHandlerGet">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ErrorHandlerSetIErrorHandler">
            <summary>设置 AppenderSkeleton.set_ErrorHandler(IErrorHandler value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.FilterEventLoggingEvent">
            <summary>设置 AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.FilterHeadGet">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.InitializeClientConnection">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.InitializeClientConnection01">
            <summary>设置 UdpAppender.InitializeClientConnection() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.InitializeStub">
            <summary>初始化 type StubUdpAppender 的新实例</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.IsAsSevereAsThresholdLevel">
            <summary>设置 AppenderSkeleton.IsAsSevereAsThreshold(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.LayoutGet">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.LayoutSetILayout">
            <summary>设置 AppenderSkeleton.set_Layout(ILayout value) 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.OnClose">
            <summary>设置 UdpAppender.OnClose() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.OnClose01">
            <summary>设置 UdpAppender.OnClose() 的 stub</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.PreAppendCheck">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 存根</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.PreAppendCheck01">
            <summary>设置 AppenderSkeleton.PreAppendCheck() 的 stub</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.RequiresLayoutGet">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.ErrorHandler">
            <summary>设置 AppenderSkeleton.get_ErrorHandler() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.FilterHead">
            <summary>设置 AppenderSkeleton.get_FilterHead() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.Layout">
            <summary>设置 AppenderSkeleton.get_Layout() 的 stub</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.RequiresLayout">
            <summary>设置 UdpAppender.get_RequiresLayout() 的 stub</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimAliasRepositoryAttribute">
            <summary>log4net.Config.AliasRepositoryAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.#ctor(log4net.Config.AliasRepositoryAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.ConstructorString">
            <summary>设置 AliasRepositoryAttribute.AliasRepositoryAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.NameGet">
            <summary>设置 AliasRepositoryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.NameSetString">
            <summary>设置 AliasRepositoryAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances.NameGet">
            <summary>设置 AliasRepositoryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances.NameSetString">
            <summary>设置 AliasRepositoryAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimBasicConfigurator">
            <summary>log4net.Config.BasicConfigurator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.#ctor(log4net.Config.BasicConfigurator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Configure">
            <summary>设置 BasicConfigurator.Configure() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureIAppender">
            <summary>设置 BasicConfigurator.Configure(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureILoggerRepository">
            <summary>设置 BasicConfigurator.Configure(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureILoggerRepositoryIAppender">
            <summary>设置 BasicConfigurator.Configure(ILoggerRepository repository, IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Constructor">
            <summary>设置 BasicConfigurator.BasicConfigurator() 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimBasicConfigurator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimConfiguratorAttribute">
            <summary>log4net.Config.ConfiguratorAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.#ctor(log4net.Config.ConfiguratorAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.CompareToObject">
            <summary>设置 ConfiguratorAttribute.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.ConstructorInt32">
            <summary>设置 ConfiguratorAttribute.ConfiguratorAttribute(Int32 priority) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimConfiguratorAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.AllInstances.CompareToObject">
            <summary>设置 ConfiguratorAttribute.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler">
            <summary>log4net.Config.Log4NetConfigurationSectionHandler 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.#ctor(log4net.Config.Log4NetConfigurationSectionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Bind(System.Configuration.IConfigurationSectionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Constructor">
            <summary>设置 Log4NetConfigurationSectionHandler.Log4NetConfigurationSectionHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.CreateObjectObjectXmlNode">
            <summary>设置 Log4NetConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.AllInstances.CreateObjectObjectXmlNode">
            <summary>设置 Log4NetConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimPluginAttribute">
            <summary>log4net.Config.PluginAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.#ctor(log4net.Config.PluginAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.Bind(log4net.Plugin.IPluginFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ConstructorString">
            <summary>设置 PluginAttribute.PluginAttribute(String typeName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ConstructorType">
            <summary>设置 PluginAttribute.PluginAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.CreatePlugin">
            <summary>设置 PluginAttribute.CreatePlugin() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ToString">
            <summary>设置 PluginAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeGet">
            <summary>设置 PluginAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeNameGet">
            <summary>设置 PluginAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeNameSetString">
            <summary>设置 PluginAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeSetType">
            <summary>设置 PluginAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimPluginAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.CreatePlugin">
            <summary>设置 PluginAttribute.CreatePlugin() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.ToString01">
            <summary>设置 PluginAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeGet">
            <summary>设置 PluginAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeNameGet">
            <summary>设置 PluginAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeNameSetString">
            <summary>设置 PluginAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeSetType">
            <summary>设置 PluginAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimRepositoryAttribute">
            <summary>log4net.Config.RepositoryAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.#ctor(log4net.Config.RepositoryAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.Constructor">
            <summary>设置 RepositoryAttribute.RepositoryAttribute() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.ConstructorString">
            <summary>设置 RepositoryAttribute.RepositoryAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.NameGet">
            <summary>设置 RepositoryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.NameSetString">
            <summary>设置 RepositoryAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.RepositoryTypeGet">
            <summary>设置 RepositoryAttribute.get_RepositoryType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.RepositoryTypeSetType">
            <summary>设置 RepositoryAttribute.set_RepositoryType(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.NameGet">
            <summary>设置 RepositoryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.NameSetString">
            <summary>设置 RepositoryAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.RepositoryTypeGet">
            <summary>设置 RepositoryAttribute.get_RepositoryType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.RepositoryTypeSetType">
            <summary>设置 RepositoryAttribute.set_RepositoryType(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimSecurityContextProviderAttribute">
            <summary>log4net.Config.SecurityContextProviderAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.#ctor(log4net.Config.SecurityContextProviderAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ConfigureAssemblyILoggerRepository">
            <summary>设置 SecurityContextProviderAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ConstructorType">
            <summary>设置 SecurityContextProviderAttribute.SecurityContextProviderAttribute(Type providerType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ProviderTypeGet">
            <summary>设置 SecurityContextProviderAttribute.get_ProviderType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ProviderTypeSetType">
            <summary>设置 SecurityContextProviderAttribute.set_ProviderType(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ConfigureAssemblyILoggerRepository">
            <summary>设置 SecurityContextProviderAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ProviderTypeGet">
            <summary>设置 SecurityContextProviderAttribute.get_ProviderType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ProviderTypeSetType">
            <summary>设置 SecurityContextProviderAttribute.set_ProviderType(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfigurator">
            <summary>log4net.Config.XmlConfigurator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.#ctor(log4net.Config.XmlConfigurator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Configure">
            <summary>设置 XmlConfigurator.Configure() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureAndWatchFileInfo">
            <summary>设置 XmlConfigurator.ConfigureAndWatch(FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureAndWatchILoggerRepositoryFileInfo">
            <summary>设置 XmlConfigurator.ConfigureAndWatch(ILoggerRepository repository, FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureFileInfo">
            <summary>设置 XmlConfigurator.Configure(FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureFromXmlILoggerRepositoryXmlElement">
            <summary>设置 XmlConfigurator.ConfigureFromXml(ILoggerRepository repository, XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepository">
            <summary>设置 XmlConfigurator.Configure(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryFileInfo">
            <summary>设置 XmlConfigurator.Configure(ILoggerRepository repository, FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryStream">
            <summary>设置 XmlConfigurator.Configure(ILoggerRepository repository, Stream configStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryUri">
            <summary>设置 XmlConfigurator.Configure(ILoggerRepository repository, Uri configUri) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryXmlElement">
            <summary>设置 XmlConfigurator.Configure(ILoggerRepository repository, XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureStream">
            <summary>设置 XmlConfigurator.Configure(Stream configStream) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureUri">
            <summary>设置 XmlConfigurator.Configure(Uri configUri) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureXmlElement">
            <summary>设置 XmlConfigurator.Configure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Constructor">
            <summary>设置 XmlConfigurator.XmlConfigurator() 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfigurator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfiguratorAttribute">
            <summary>log4net.Config.XmlConfiguratorAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.#ctor(log4net.Config.XmlConfiguratorAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileExtensionGet">
            <summary>设置 XmlConfiguratorAttribute.get_ConfigFileExtension() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileExtensionSetString">
            <summary>设置 XmlConfiguratorAttribute.set_ConfigFileExtension(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileGet">
            <summary>设置 XmlConfiguratorAttribute.get_ConfigFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileSetString">
            <summary>设置 XmlConfiguratorAttribute.set_ConfigFile(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromFileAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromFile(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromFileILoggerRepositoryFileInfo">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromFile(ILoggerRepository targetRepository, FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromUriAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromUri(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Constructor">
            <summary>设置 XmlConfiguratorAttribute.XmlConfiguratorAttribute() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.WatchGet">
            <summary>设置 XmlConfiguratorAttribute.get_Watch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.WatchSetBoolean">
            <summary>设置 XmlConfiguratorAttribute.set_Watch(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileExtensionGet">
            <summary>设置 XmlConfiguratorAttribute.get_ConfigFileExtension() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileExtensionSetString">
            <summary>设置 XmlConfiguratorAttribute.set_ConfigFileExtension(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileGet">
            <summary>设置 XmlConfiguratorAttribute.get_ConfigFile() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileSetString">
            <summary>设置 XmlConfiguratorAttribute.set_ConfigFile(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromFileAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromFile(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromFileILoggerRepositoryFileInfo">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromFile(ILoggerRepository targetRepository, FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromUriAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.ConfigureFromUri(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.WatchGet">
            <summary>设置 XmlConfiguratorAttribute.get_Watch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.WatchSetBoolean">
            <summary>设置 XmlConfiguratorAttribute.set_Watch(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubAliasRepositoryAttribute">
            <summary>log4net.Config.AliasRepositoryAttribute 的存根类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.InitializeStub">
            <summary>初始化 type StubAliasRepositoryAttribute 的新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubConfiguratorAttribute">
            <summary>log4net.Config.ConfiguratorAttribute 的存根类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Configure(System.Reflection.Assembly,log4net.Repository.ILoggerRepository)">
            <summary>设置 ConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>设置 ConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.InitializeStub">
            <summary>初始化 type StubConfiguratorAttribute 的新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler">
            <summary>log4net.Config.Log4NetConfigurationSectionHandler 的存根类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InitializeStub">
            <summary>初始化 type StubLog4NetConfigurationSectionHandler 的新实例</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubRepositoryAttribute">
            <summary>log4net.Config.RepositoryAttribute 的存根类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.InitializeStub">
            <summary>初始化 type StubRepositoryAttribute 的新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubXmlConfiguratorAttribute">
            <summary>log4net.Config.XmlConfiguratorAttribute 的存根类型</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Configure(System.Reflection.Assembly,log4net.Repository.ILoggerRepository)">
            <summary>设置 XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>设置 XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InitializeStub">
            <summary>初始化 type StubXmlConfiguratorAttribute 的新实例</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimCompactRepositorySelector">
            <summary>log4net.Core.CompactRepositorySelector 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.#ctor(log4net.Core.CompactRepositorySelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.Bind(log4net.Core.IRepositorySelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.ConstructorType">
            <summary>设置 CompactRepositorySelector.CompactRepositorySelector(Type defaultRepositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.CreateRepositoryAssemblyType">
            <summary>设置 CompactRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.CreateRepositoryStringType">
            <summary>设置 CompactRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.ExistsRepositoryString">
            <summary>设置 CompactRepositorySelector.ExistsRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetAllRepositories">
            <summary>设置 CompactRepositorySelector.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetRepositoryAssembly">
            <summary>设置 CompactRepositorySelector.GetRepository(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetRepositoryString">
            <summary>设置 CompactRepositorySelector.GetRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.CreateRepositoryAssemblyType">
            <summary>设置 CompactRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.CreateRepositoryStringType">
            <summary>设置 CompactRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.ExistsRepositoryString">
            <summary>设置 CompactRepositorySelector.ExistsRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetAllRepositories">
            <summary>设置 CompactRepositorySelector.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetRepositoryAssembly">
            <summary>设置 CompactRepositorySelector.GetRepository(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetRepositoryString">
            <summary>设置 CompactRepositorySelector.GetRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 CompactRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimDefaultRepositorySelector">
            <summary>log4net.Core.DefaultRepositorySelector 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.#ctor(log4net.Core.DefaultRepositorySelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.Bind(log4net.Core.IRepositorySelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AliasRepositoryStringILoggerRepository">
            <summary>设置 DefaultRepositorySelector.AliasRepository(String repositoryAlias, ILoggerRepository repositoryTarget) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ConfigureRepositoryAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.ConfigureRepository(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ConstructorType">
            <summary>设置 DefaultRepositorySelector.DefaultRepositorySelector(Type defaultRepositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryAssemblyType">
            <summary>设置 DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryAssemblyTypeStringBoolean">
            <summary>设置 DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType, String repositoryName, Boolean readAssemblyAttributes) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryStringType">
            <summary>设置 DefaultRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ExistsRepositoryString">
            <summary>设置 DefaultRepositorySelector.ExistsRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetAllRepositories">
            <summary>设置 DefaultRepositorySelector.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetInfoForAssemblyAssemblyStringRefTypeRef">
            <summary>设置 DefaultRepositorySelector.GetInfoForAssembly(Assembly assembly, String&amp; repositoryName, Type&amp; repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetRepositoryAssembly">
            <summary>设置 DefaultRepositorySelector.GetRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetRepositoryString">
            <summary>设置 DefaultRepositorySelector.GetRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoadAliasesAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.LoadAliases(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoadPluginsAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.LoadPlugins(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.AliasRepositoryStringILoggerRepository">
            <summary>设置 DefaultRepositorySelector.AliasRepository(String repositoryAlias, ILoggerRepository repositoryTarget) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.ConfigureRepositoryAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.ConfigureRepository(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryAssemblyType">
            <summary>设置 DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryAssemblyTypeStringBoolean">
            <summary>设置 DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType, String repositoryName, Boolean readAssemblyAttributes) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryStringType">
            <summary>设置 DefaultRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.ExistsRepositoryString">
            <summary>设置 DefaultRepositorySelector.ExistsRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetAllRepositories">
            <summary>设置 DefaultRepositorySelector.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetInfoForAssemblyAssemblyStringRefTypeRef">
            <summary>设置 DefaultRepositorySelector.GetInfoForAssembly(Assembly assembly, String&amp; repositoryName, Type&amp; repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetRepositoryAssembly">
            <summary>设置 DefaultRepositorySelector.GetRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetRepositoryString">
            <summary>设置 DefaultRepositorySelector.GetRepository(String repositoryName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoadAliasesAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.LoadAliases(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoadPluginsAssemblyILoggerRepository">
            <summary>设置 DefaultRepositorySelector.LoadPlugins(Assembly assembly, ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>设置 DefaultRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevel">
            <summary>log4net.Core.Level 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.#ctor(log4net.Core.Level)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.CompareLevelLevel">
            <summary>设置 Level.Compare(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.CompareToObject">
            <summary>设置 Level.CompareTo(Object r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ConstructorInt32String">
            <summary>设置 Level.Level(Int32 level, String levelName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ConstructorInt32StringString">
            <summary>设置 Level.Level(Int32 level, String levelName, String displayName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.DisplayNameGet">
            <summary>设置 Level.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.EqualityOpLevelLevel">
            <summary>设置 Level.op_Equality(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.EqualsObject">
            <summary>设置 Level.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GetHashCode">
            <summary>设置 Level.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GreaterThanOpLevelLevel">
            <summary>设置 Level.op_GreaterThan(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GreaterThanOrEqualOpLevelLevel">
            <summary>设置 Level.op_GreaterThanOrEqual(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.InequalityOpLevelLevel">
            <summary>设置 Level.op_Inequality(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.LessThanOpLevelLevel">
            <summary>设置 Level.op_LessThan(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.LessThanOrEqualOpLevelLevel">
            <summary>设置 Level.op_LessThanOrEqual(Level l, Level r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.NameGet">
            <summary>设置 Level.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.StaticConstructor">
            <summary>设置 Level.Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ToString">
            <summary>设置 Level.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ValueGet">
            <summary>设置 Level.get_Value() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.CompareToObject">
            <summary>设置 Level.CompareTo(Object r) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.DisplayNameGet">
            <summary>设置 Level.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.EqualsObject">
            <summary>设置 Level.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.GetHashCode01">
            <summary>设置 Level.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.NameGet">
            <summary>设置 Level.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.ToString01">
            <summary>设置 Level.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.ValueGet">
            <summary>设置 Level.get_Value() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelCollection">
            <summary>log4net.Core.LevelCollection 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.#ctor(log4net.Core.LevelCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddLevel">
            <summary>设置 LevelCollection.Add(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeICollection">
            <summary>设置 LevelCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeLevelArray">
            <summary>设置 LevelCollection.AddRange(Level[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeLevelCollection">
            <summary>设置 LevelCollection.AddRange(LevelCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CapacityGet">
            <summary>设置 LevelCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CapacitySetInt32">
            <summary>设置 LevelCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Clear">
            <summary>设置 LevelCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Clone">
            <summary>设置 LevelCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Constructor">
            <summary>设置 LevelCollection.LevelCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorICollection">
            <summary>设置 LevelCollection.LevelCollection(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorInt32">
            <summary>设置 LevelCollection.LevelCollection(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorLevelArray">
            <summary>设置 LevelCollection.LevelCollection(Level[] a) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorLevelCollection">
            <summary>设置 LevelCollection.LevelCollection(LevelCollection c) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ContainsLevel">
            <summary>设置 LevelCollection.Contains(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CopyToLevelArray">
            <summary>设置 LevelCollection.CopyTo(Level[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CopyToLevelArrayInt32">
            <summary>设置 LevelCollection.CopyTo(Level[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CountGet">
            <summary>设置 LevelCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.EnsureCapacityInt32">
            <summary>设置 LevelCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.GetEnumerator">
            <summary>设置 LevelCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IndexOfLevel">
            <summary>设置 LevelCollection.IndexOf(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.InsertInt32Level">
            <summary>设置 LevelCollection.Insert(Int32 index, Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsFixedSizeGet">
            <summary>设置 LevelCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsReadOnlyGet">
            <summary>设置 LevelCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsSynchronizedGet">
            <summary>设置 LevelCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemGetInt32">
            <summary>设置 LevelCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSetInt32Level">
            <summary>设置 LevelCollection.set_Item(Int32 index, Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSystemCollectionsIListgetInt32">
            <summary>设置 LevelCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 LevelCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ReadOnlyLevelCollection">
            <summary>设置 LevelCollection.ReadOnly(LevelCollection list) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.RemoveAtInt32">
            <summary>设置 LevelCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.RemoveLevel">
            <summary>设置 LevelCollection.Remove(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SyncRootGet">
            <summary>设置 LevelCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 LevelCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 LevelCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListAddObject">
            <summary>设置 LevelCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListContainsObject">
            <summary>设置 LevelCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListIndexOfObject">
            <summary>设置 LevelCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListInsertInt32Object">
            <summary>设置 LevelCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 LevelCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListRemoveObject">
            <summary>设置 LevelCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.TrimToSize">
            <summary>设置 LevelCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ValidateIndexInt32">
            <summary>设置 LevelCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ValidateIndexInt32Boolean">
            <summary>设置 LevelCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddLevel">
            <summary>设置 LevelCollection.Add(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeICollection">
            <summary>设置 LevelCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeLevelArray">
            <summary>设置 LevelCollection.AddRange(Level[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeLevelCollection">
            <summary>设置 LevelCollection.AddRange(LevelCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CapacityGet">
            <summary>设置 LevelCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CapacitySetInt32">
            <summary>设置 LevelCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.Clear">
            <summary>设置 LevelCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.Clone">
            <summary>设置 LevelCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ContainsLevel">
            <summary>设置 LevelCollection.Contains(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CopyToLevelArray">
            <summary>设置 LevelCollection.CopyTo(Level[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CopyToLevelArrayInt32">
            <summary>设置 LevelCollection.CopyTo(Level[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CountGet">
            <summary>设置 LevelCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.EnsureCapacityInt32">
            <summary>设置 LevelCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.GetEnumerator">
            <summary>设置 LevelCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IndexOfLevel">
            <summary>设置 LevelCollection.IndexOf(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.InsertInt32Level">
            <summary>设置 LevelCollection.Insert(Int32 index, Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsFixedSizeGet">
            <summary>设置 LevelCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsReadOnlyGet">
            <summary>设置 LevelCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsSynchronizedGet">
            <summary>设置 LevelCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemGetInt32">
            <summary>设置 LevelCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSetInt32Level">
            <summary>设置 LevelCollection.set_Item(Int32 index, Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>设置 LevelCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 LevelCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.RemoveAtInt32">
            <summary>设置 LevelCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.RemoveLevel">
            <summary>设置 LevelCollection.Remove(Level item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SyncRootGet">
            <summary>设置 LevelCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 LevelCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 LevelCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>设置 LevelCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>设置 LevelCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>设置 LevelCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>设置 LevelCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 LevelCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>设置 LevelCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.TrimToSize">
            <summary>设置 LevelCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ValidateIndexInt32">
            <summary>设置 LevelCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>设置 LevelCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelEvaluator">
            <summary>log4net.Core.LevelEvaluator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.#ctor(log4net.Core.LevelEvaluator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.Bind(log4net.Core.ITriggeringEventEvaluator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.Constructor">
            <summary>设置 LevelEvaluator.LevelEvaluator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ConstructorLevel">
            <summary>设置 LevelEvaluator.LevelEvaluator(Level threshold) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.IsTriggeringEventLoggingEvent">
            <summary>设置 LevelEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ThresholdGet">
            <summary>设置 LevelEvaluator.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ThresholdSetLevel">
            <summary>设置 LevelEvaluator.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.IsTriggeringEventLoggingEvent">
            <summary>设置 LevelEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.ThresholdGet">
            <summary>设置 LevelEvaluator.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.ThresholdSetLevel">
            <summary>设置 LevelEvaluator.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelMap">
            <summary>log4net.Core.LevelMap 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.#ctor(log4net.Core.LevelMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddLevel">
            <summary>设置 LevelMap.Add(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddStringInt32">
            <summary>设置 LevelMap.Add(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddStringInt32String">
            <summary>设置 LevelMap.Add(String name, Int32 value, String displayName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllLevelsGet">
            <summary>设置 LevelMap.get_AllLevels() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Clear">
            <summary>设置 LevelMap.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Constructor">
            <summary>设置 LevelMap.LevelMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.ItemGetString">
            <summary>设置 LevelMap.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.LookupWithDefaultLevel">
            <summary>设置 LevelMap.LookupWithDefault(Level defaultLevel) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddLevel">
            <summary>设置 LevelMap.Add(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddStringInt32">
            <summary>设置 LevelMap.Add(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddStringInt32String">
            <summary>设置 LevelMap.Add(String name, Int32 value, String displayName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AllLevelsGet">
            <summary>设置 LevelMap.get_AllLevels() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.Clear">
            <summary>设置 LevelMap.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.ItemGetString">
            <summary>设置 LevelMap.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.LookupWithDefaultLevel">
            <summary>设置 LevelMap.LookupWithDefault(Level defaultLevel) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLocationInfo">
            <summary>log4net.Core.LocationInfo 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.#ctor(log4net.Core.LocationInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ClassNameGet">
            <summary>设置 LocationInfo.get_ClassName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ConstructorStringStringStringString">
            <summary>设置 LocationInfo.LocationInfo(String className, String methodName, String fileName, String lineNumber) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ConstructorType">
            <summary>设置 LocationInfo.LocationInfo(Type callerStackBoundaryDeclaringType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.FileNameGet">
            <summary>设置 LocationInfo.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.FullInfoGet">
            <summary>设置 LocationInfo.get_FullInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.LineNumberGet">
            <summary>设置 LocationInfo.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.MethodNameGet">
            <summary>设置 LocationInfo.get_MethodName() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLocationInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.ClassNameGet">
            <summary>设置 LocationInfo.get_ClassName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.FileNameGet">
            <summary>设置 LocationInfo.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.FullInfoGet">
            <summary>设置 LocationInfo.get_FullInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.LineNumberGet">
            <summary>设置 LocationInfo.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.MethodNameGet">
            <summary>设置 LocationInfo.get_MethodName() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogException">
            <summary>log4net.Core.LogException 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.#ctor(log4net.Core.LogException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.Constructor">
            <summary>设置 LogException.LogException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 LogException.LogException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorString">
            <summary>设置 LogException.LogException(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorStringException">
            <summary>设置 LogException.LogException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogImpl">
            <summary>log4net.Core.LogImpl 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.#ctor(log4net.Core.LogImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.Bind(log4net.ILog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.Bind(log4net.Core.ILoggerWrapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ConstructorILogger">
            <summary>设置 LogImpl.LogImpl(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugObject">
            <summary>设置 LogImpl.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugObjectException">
            <summary>设置 LogImpl.Debug(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorObject">
            <summary>设置 LogImpl.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorObjectException">
            <summary>设置 LogImpl.Error(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalObject">
            <summary>设置 LogImpl.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalObjectException">
            <summary>设置 LogImpl.Fatal(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoObject">
            <summary>设置 LogImpl.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoObjectException">
            <summary>设置 LogImpl.Info(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsDebugEnabledGet">
            <summary>设置 LogImpl.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsErrorEnabledGet">
            <summary>设置 LogImpl.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsFatalEnabledGet">
            <summary>设置 LogImpl.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsInfoEnabledGet">
            <summary>设置 LogImpl.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsWarnEnabledGet">
            <summary>设置 LogImpl.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.LoggerRepositoryConfigurationChangedObjectEventArgs">
            <summary>设置 LogImpl.LoggerRepositoryConfigurationChanged(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ReloadLevelsILoggerRepository">
            <summary>设置 LogImpl.ReloadLevels(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.StaticConstructor">
            <summary>设置 LogImpl.LogImpl() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnObject">
            <summary>设置 LogImpl.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnObjectException">
            <summary>设置 LogImpl.Warn(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugObject">
            <summary>设置 LogImpl.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugObjectException">
            <summary>设置 LogImpl.Debug(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorObject">
            <summary>设置 LogImpl.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorObjectException">
            <summary>设置 LogImpl.Error(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalObject">
            <summary>设置 LogImpl.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalObjectException">
            <summary>设置 LogImpl.Fatal(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoObject">
            <summary>设置 LogImpl.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoObjectException">
            <summary>设置 LogImpl.Info(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsDebugEnabledGet">
            <summary>设置 LogImpl.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsErrorEnabledGet">
            <summary>设置 LogImpl.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsFatalEnabledGet">
            <summary>设置 LogImpl.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsInfoEnabledGet">
            <summary>设置 LogImpl.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsWarnEnabledGet">
            <summary>设置 LogImpl.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.LoggerRepositoryConfigurationChangedObjectEventArgs">
            <summary>设置 LogImpl.LoggerRepositoryConfigurationChanged(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ReloadLevelsILoggerRepository">
            <summary>设置 LogImpl.ReloadLevels(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnObject">
            <summary>设置 LogImpl.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnObjectException">
            <summary>设置 LogImpl.Warn(Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerManager">
            <summary>log4net.Core.LoggerManager 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.#ctor(log4net.Core.LoggerManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Constructor">
            <summary>设置 LoggerManager.LoggerManager() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainAssemblyType">
            <summary>设置 LoggerManager.CreateDomain(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainString">
            <summary>设置 LoggerManager.CreateDomain(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainStringType">
            <summary>设置 LoggerManager.CreateDomain(String repository, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryAssemblyType">
            <summary>设置 LoggerManager.CreateRepository(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryString">
            <summary>设置 LoggerManager.CreateRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryStringType">
            <summary>设置 LoggerManager.CreateRepository(String repository, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ExistsAssemblyString">
            <summary>设置 LoggerManager.Exists(Assembly repositoryAssembly, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ExistsStringString">
            <summary>设置 LoggerManager.Exists(String repository, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetAllRepositories">
            <summary>设置 LoggerManager.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetCurrentLoggersAssembly">
            <summary>设置 LoggerManager.GetCurrentLoggers(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetCurrentLoggersString">
            <summary>设置 LoggerManager.GetCurrentLoggers(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerAssemblyString">
            <summary>设置 LoggerManager.GetLogger(Assembly repositoryAssembly, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerAssemblyType">
            <summary>设置 LoggerManager.GetLogger(Assembly repositoryAssembly, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerRepositoryAssembly">
            <summary>设置 LoggerManager.GetLoggerRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerRepositoryString">
            <summary>设置 LoggerManager.GetLoggerRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerStringString">
            <summary>设置 LoggerManager.GetLogger(String repository, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerStringType">
            <summary>设置 LoggerManager.GetLogger(String repository, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetRepositoryAssembly">
            <summary>设置 LoggerManager.GetRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetRepositoryString">
            <summary>设置 LoggerManager.GetRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetVersionInfo">
            <summary>设置 LoggerManager.GetVersionInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.OnDomainUnloadObjectEventArgs">
            <summary>设置 LoggerManager.OnDomainUnload(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.OnProcessExitObjectEventArgs">
            <summary>设置 LoggerManager.OnProcessExit(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RegisterAppDomainEvents">
            <summary>设置 LoggerManager.RegisterAppDomainEvents() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RepositorySelectorGet">
            <summary>设置 LoggerManager.get_RepositorySelector() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RepositorySelectorSetIRepositorySelector">
            <summary>设置 LoggerManager.set_RepositorySelector(IRepositorySelector value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ResetConfigurationAssembly">
            <summary>设置 LoggerManager.ResetConfiguration(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ResetConfigurationString">
            <summary>设置 LoggerManager.ResetConfiguration(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Shutdown">
            <summary>设置 LoggerManager.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ShutdownRepositoryAssembly">
            <summary>设置 LoggerManager.ShutdownRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ShutdownRepositoryString">
            <summary>设置 LoggerManager.ShutdownRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.StaticConstructor">
            <summary>设置 LoggerManager.LoggerManager() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs">
            <summary>log4net.Core.LoggerRepositoryCreationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.#ctor(log4net.Core.LoggerRepositoryCreationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.ConstructorILoggerRepository">
            <summary>设置 LoggerRepositoryCreationEventArgs.LoggerRepositoryCreationEventArgs(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.LoggerRepositoryGet">
            <summary>设置 LoggerRepositoryCreationEventArgs.get_LoggerRepository() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.AllInstances.LoggerRepositoryGet">
            <summary>设置 LoggerRepositoryCreationEventArgs.get_LoggerRepository() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerWrapperImpl">
            <summary>log4net.Core.LoggerWrapperImpl 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.#ctor(log4net.Core.LoggerWrapperImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.Bind(log4net.Core.ILoggerWrapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.ConstructorILogger">
            <summary>设置 LoggerWrapperImpl.LoggerWrapperImpl(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.LoggerGet">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerWrapperImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.AllInstances.LoggerGet">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEvent">
            <summary>log4net.Core.LoggingEvent 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.#ctor(log4net.Core.LoggingEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.CacheProperties">
            <summary>设置 LoggingEvent.CacheProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorLoggingEventData">
            <summary>设置 LoggingEvent.LoggingEvent(LoggingEventData data) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorSerializationInfoStreamingContext">
            <summary>设置 LoggingEvent.LoggingEvent(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryLoggingEventData">
            <summary>设置 LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, LoggingEventData data) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryLoggingEventDataFixFlags">
            <summary>设置 LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, LoggingEventData data, FixFlags fixedData) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryStringLevelObjectException">
            <summary>设置 LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, String loggerName, Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.CreateCompositeProperties">
            <summary>设置 LoggingEvent.CreateCompositeProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.DomainGet">
            <summary>设置 LoggingEvent.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.EnsureRepositoryILoggerRepository">
            <summary>设置 LoggingEvent.EnsureRepository(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ExceptionObjectGet">
            <summary>设置 LoggingEvent.get_ExceptionObject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixGet">
            <summary>设置 LoggingEvent.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixSetFixFlags">
            <summary>设置 LoggingEvent.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileData">
            <summary>设置 LoggingEvent.FixVolatileData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileDataBoolean">
            <summary>设置 LoggingEvent.FixVolatileData(Boolean fastButLoose) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileDataFixFlags">
            <summary>设置 LoggingEvent.FixVolatileData(FixFlags flags) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetExceptionStrRep">
            <summary>设置 LoggingEvent.GetExceptionStrRep() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetExceptionString">
            <summary>设置 LoggingEvent.GetExceptionString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetLoggingEventData">
            <summary>设置 LoggingEvent.GetLoggingEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetLoggingEventDataFixFlags">
            <summary>设置 LoggingEvent.GetLoggingEventData(FixFlags fixFlags) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetProperties">
            <summary>设置 LoggingEvent.GetProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.IdentityGet">
            <summary>设置 LoggingEvent.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LevelGet">
            <summary>设置 LoggingEvent.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LocationInformationGet">
            <summary>设置 LoggingEvent.get_LocationInformation() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LoggerNameGet">
            <summary>设置 LoggingEvent.get_LoggerName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LookupPropertyString">
            <summary>设置 LoggingEvent.LookupProperty(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.MessageObjectGet">
            <summary>设置 LoggingEvent.get_MessageObject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.PropertiesGet">
            <summary>设置 LoggingEvent.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.RenderedMessageGet">
            <summary>设置 LoggingEvent.get_RenderedMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.RepositoryGet">
            <summary>设置 LoggingEvent.get_Repository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.StartTimeGet">
            <summary>设置 LoggingEvent.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ThreadNameGet">
            <summary>设置 LoggingEvent.get_ThreadName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.TimeStampGet">
            <summary>设置 LoggingEvent.get_TimeStamp() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.UserNameGet">
            <summary>设置 LoggingEvent.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.WriteRenderedMessageTextWriter">
            <summary>设置 LoggingEvent.WriteRenderedMessage(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.CacheProperties">
            <summary>设置 LoggingEvent.CacheProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.CreateCompositeProperties">
            <summary>设置 LoggingEvent.CreateCompositeProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.DomainGet">
            <summary>设置 LoggingEvent.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.EnsureRepositoryILoggerRepository">
            <summary>设置 LoggingEvent.EnsureRepository(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.ExceptionObjectGet">
            <summary>设置 LoggingEvent.get_ExceptionObject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixGet">
            <summary>设置 LoggingEvent.get_Fix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixSetFixFlags">
            <summary>设置 LoggingEvent.set_Fix(FixFlags value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileData">
            <summary>设置 LoggingEvent.FixVolatileData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileDataBoolean">
            <summary>设置 LoggingEvent.FixVolatileData(Boolean fastButLoose) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileDataFixFlags">
            <summary>设置 LoggingEvent.FixVolatileData(FixFlags flags) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetExceptionStrRep">
            <summary>设置 LoggingEvent.GetExceptionStrRep() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetExceptionString">
            <summary>设置 LoggingEvent.GetExceptionString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetLoggingEventData">
            <summary>设置 LoggingEvent.GetLoggingEventData() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetLoggingEventDataFixFlags">
            <summary>设置 LoggingEvent.GetLoggingEventData(FixFlags fixFlags) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetProperties">
            <summary>设置 LoggingEvent.GetProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.IdentityGet">
            <summary>设置 LoggingEvent.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LevelGet">
            <summary>设置 LoggingEvent.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LocationInformationGet">
            <summary>设置 LoggingEvent.get_LocationInformation() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LoggerNameGet">
            <summary>设置 LoggingEvent.get_LoggerName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LookupPropertyString">
            <summary>设置 LoggingEvent.LookupProperty(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.MessageObjectGet">
            <summary>设置 LoggingEvent.get_MessageObject() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.PropertiesGet">
            <summary>设置 LoggingEvent.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.RenderedMessageGet">
            <summary>设置 LoggingEvent.get_RenderedMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.RepositoryGet">
            <summary>设置 LoggingEvent.get_Repository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.ThreadNameGet">
            <summary>设置 LoggingEvent.get_ThreadName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.TimeStampGet">
            <summary>设置 LoggingEvent.get_TimeStamp() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.UserNameGet">
            <summary>设置 LoggingEvent.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.WriteRenderedMessageTextWriter">
            <summary>设置 LoggingEvent.WriteRenderedMessage(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEventData">
            <summary>log4net.Core.LoggingEventData 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEventData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEventData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContext">
            <summary>log4net.Core.SecurityContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.#ctor(log4net.Core.SecurityContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContext.Constructor">
            <summary>设置 SecurityContext.SecurityContext() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContextProvider">
            <summary>log4net.Core.SecurityContextProvider 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.#ctor(log4net.Core.SecurityContextProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.Constructor">
            <summary>设置 SecurityContextProvider.SecurityContextProvider() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.CreateSecurityContextObject">
            <summary>设置 SecurityContextProvider.CreateSecurityContext(Object consumer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.DefaultProviderGet">
            <summary>设置 SecurityContextProvider.get_DefaultProvider() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.DefaultProviderSetSecurityContextProvider">
            <summary>设置 SecurityContextProvider.set_DefaultProvider(SecurityContextProvider value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.StaticConstructor">
            <summary>设置 SecurityContextProvider.SecurityContextProvider() 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContextProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.AllInstances.CreateSecurityContextObject">
            <summary>设置 SecurityContextProvider.CreateSecurityContext(Object consumer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimWrapperMap">
            <summary>log4net.Core.WrapperMap 的填充码类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.#ctor(log4net.Core.WrapperMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.ConstructorWrapperCreationHandler">
            <summary>设置 WrapperMap.WrapperMap(WrapperCreationHandler createWrapperHandler) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.CreateNewWrapperObjectILogger">
            <summary>设置 WrapperMap.CreateNewWrapperObject(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.GetWrapperILogger">
            <summary>设置 WrapperMap.GetWrapper(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.ILoggerRepository_ShutdownObjectEventArgs">
            <summary>设置 WrapperMap.ILoggerRepository_Shutdown(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.RepositoriesGet">
            <summary>设置 WrapperMap.get_Repositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.RepositoryShutdownILoggerRepository">
            <summary>设置 WrapperMap.RepositoryShutdown(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimWrapperMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.CreateNewWrapperObjectILogger">
            <summary>设置 WrapperMap.CreateNewWrapperObject(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.GetWrapperILogger">
            <summary>设置 WrapperMap.GetWrapper(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.ILoggerRepository_ShutdownObjectEventArgs">
            <summary>设置 WrapperMap.ILoggerRepository_Shutdown(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.RepositoriesGet">
            <summary>设置 WrapperMap.get_Repositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.RepositoryShutdownILoggerRepository">
            <summary>设置 WrapperMap.RepositoryShutdown(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubCompactRepositorySelector">
            <summary>log4net.Core.CompactRepositorySelector 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.InitializeStub">
            <summary>初始化 type StubCompactRepositorySelector 的新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.OnLoggerRepositoryCreatedEvent(log4net.Repository.ILoggerRepository)">
            <summary>设置 CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubCompactRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubDefaultRepositorySelector">
            <summary>log4net.Core.DefaultRepositorySelector 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.InitializeStub">
            <summary>初始化 type StubDefaultRepositorySelector 的新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(log4net.Repository.ILoggerRepository)">
            <summary>设置 DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubDefaultRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>设置 DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIAppenderAttachable">
            <summary>log4net.Core.IAppenderAttachable 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.#ctor">
            <summary>初始化 type StubIAppenderAttachable 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.AddAppenderIAppender">
            <summary>设置 IAppenderAttachable.AddAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.AppendersGet">
            <summary>设置 IAppenderAttachable.get_Appenders() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.GetAppenderString">
            <summary>设置 IAppenderAttachable.GetAppender(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAllAppenders">
            <summary>设置 IAppenderAttachable.RemoveAllAppenders() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAppenderIAppender">
            <summary>设置 IAppenderAttachable.RemoveAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAppenderString">
            <summary>设置 IAppenderAttachable.RemoveAppender(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#AddAppender(log4net.Appender.IAppender)">
            <summary>设置 IAppenderAttachable.AddAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#GetAppender(System.String)">
            <summary>设置 IAppenderAttachable.GetAppender(String name) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#RemoveAllAppenders">
            <summary>设置 IAppenderAttachable.RemoveAllAppenders() 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#RemoveAppender(log4net.Appender.IAppender)">
            <summary>设置 IAppenderAttachable.RemoveAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#RemoveAppender(System.String)">
            <summary>设置 IAppenderAttachable.RemoveAppender(String name) 的 存根</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubIAppenderAttachable.l4::log4net#Core#IAppenderAttachable#Appenders">
            <summary>设置 IAppenderAttachable.get_Appenders() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIErrorHandler">
            <summary>log4net.Core.IErrorHandler 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.#ctor">
            <summary>初始化 type StubIErrorHandler 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorString">
            <summary>设置 IErrorHandler.Error(String message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorStringException">
            <summary>设置 IErrorHandler.Error(String message, Exception e) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorStringExceptionErrorCode">
            <summary>设置 IErrorHandler.Error(String message, Exception e, ErrorCode errorCode) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.l4::log4net#Core#IErrorHandler#Error(System.String)">
            <summary>设置 IErrorHandler.Error(String message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.l4::log4net#Core#IErrorHandler#Error(System.String,System.Exception)">
            <summary>设置 IErrorHandler.Error(String message, Exception e) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.l4::log4net#Core#IErrorHandler#Error(System.String,System.Exception,log4net.Core.ErrorCode)">
            <summary>设置 IErrorHandler.Error(String message, Exception e, ErrorCode errorCode) 的 存根</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIFixingRequired">
            <summary>log4net.Core.IFixingRequired 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIFixingRequired.#ctor">
            <summary>初始化 type StubIFixingRequired 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIFixingRequired.GetFixedObject">
            <summary>设置 IFixingRequired.GetFixedObject() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIFixingRequired.l4::log4net#Core#IFixingRequired#GetFixedObject">
            <summary>设置 IFixingRequired.GetFixedObject() 的 存根</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubILogger">
            <summary>log4net.Core.ILogger 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.#ctor">
            <summary>初始化 type StubILogger 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.IsEnabledForLevel">
            <summary>设置 ILogger.IsEnabledFor(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.LogLoggingEvent">
            <summary>设置 ILogger.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.LogTypeLevelObjectException">
            <summary>设置 ILogger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.NameGet">
            <summary>设置 ILogger.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.RepositoryGet">
            <summary>设置 ILogger.get_Repository() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.l4::log4net#Core#ILogger#IsEnabledFor(log4net.Core.Level)">
            <summary>设置 ILogger.IsEnabledFor(Level level) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.l4::log4net#Core#ILogger#Log(log4net.Core.LoggingEvent)">
            <summary>设置 ILogger.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.l4::log4net#Core#ILogger#Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 ILogger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILogger.l4::log4net#Core#ILogger#Name">
            <summary>设置 ILogger.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILogger.l4::log4net#Core#ILogger#Repository">
            <summary>设置 ILogger.get_Repository() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubILoggerWrapper">
            <summary>log4net.Core.ILoggerWrapper 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILoggerWrapper.#ctor">
            <summary>初始化 type StubILoggerWrapper 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILoggerWrapper.LoggerGet">
            <summary>设置 ILoggerWrapper.get_Logger() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILoggerWrapper.l4::log4net#Core#ILoggerWrapper#Logger">
            <summary>设置 ILoggerWrapper.get_Logger() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIOptionHandler">
            <summary>log4net.Core.IOptionHandler 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIOptionHandler.#ctor">
            <summary>初始化 type StubIOptionHandler 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIOptionHandler.ActivateOptions">
            <summary>设置 IOptionHandler.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIOptionHandler.l4::log4net#Core#IOptionHandler#ActivateOptions">
            <summary>设置 IOptionHandler.ActivateOptions() 的 存根</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIRepositorySelector">
            <summary>log4net.Core.IRepositorySelector 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.#ctor">
            <summary>初始化 type StubIRepositorySelector 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.CreateRepositoryAssemblyType">
            <summary>设置 IRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.CreateRepositoryStringType">
            <summary>设置 IRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.ExistsRepositoryString">
            <summary>设置 IRepositorySelector.ExistsRepository(String repositoryName) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetAllRepositories">
            <summary>设置 IRepositorySelector.GetAllRepositories() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetRepositoryAssembly">
            <summary>设置 IRepositorySelector.GetRepository(Assembly assembly) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetRepositoryString">
            <summary>设置 IRepositorySelector.GetRepository(String repositoryName) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#CreateRepository(System.String,System.Type)">
            <summary>设置 IRepositorySelector.CreateRepository(String repositoryName, Type repositoryType) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#CreateRepository(System.Reflection.Assembly,System.Type)">
            <summary>设置 IRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#ExistsRepository(System.String)">
            <summary>设置 IRepositorySelector.ExistsRepository(String repositoryName) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#GetAllRepositories">
            <summary>设置 IRepositorySelector.GetAllRepositories() 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#GetRepository(System.String)">
            <summary>设置 IRepositorySelector.GetRepository(String repositoryName) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.l4::log4net#Core#IRepositorySelector#GetRepository(System.Reflection.Assembly)">
            <summary>设置 IRepositorySelector.GetRepository(Assembly assembly) 的 存根</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubITriggeringEventEvaluator">
            <summary>log4net.Core.ITriggeringEventEvaluator 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubITriggeringEventEvaluator.#ctor">
            <summary>初始化 type StubITriggeringEventEvaluator 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubITriggeringEventEvaluator.IsTriggeringEventLoggingEvent">
            <summary>设置 ITriggeringEventEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubITriggeringEventEvaluator.l4::log4net#Core#ITriggeringEventEvaluator#IsTriggeringEvent(log4net.Core.LoggingEvent)">
            <summary>设置 ITriggeringEventEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLevelCollection">
            <summary>log4net.Core.LevelCollection 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(System.Collections.ICollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.Level[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.LevelCollection.Tag)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.LevelCollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Add(log4net.Core.Level)">
            <summary>设置 LevelCollection.Add(Level item) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddLevel">
            <summary>设置 LevelCollection.Add(Level item) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(log4net.Core.Level[])">
            <summary>设置 LevelCollection.AddRange(Level[] x) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(log4net.Core.LevelCollection)">
            <summary>设置 LevelCollection.AddRange(LevelCollection x) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 LevelCollection.AddRange(ICollection col) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeICollection">
            <summary>设置 LevelCollection.AddRange(ICollection col) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeLevelArray">
            <summary>设置 LevelCollection.AddRange(Level[] x) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeLevelCollection">
            <summary>设置 LevelCollection.AddRange(LevelCollection x) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AttachBackingFieldToCapacity">
            <summary>附加委托以将 StubLevelCollection.Capacity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CapacityGet">
            <summary>设置 LevelCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CapacitySetInt32">
            <summary>设置 LevelCollection.set_Capacity(Int32 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Clear">
            <summary>设置 LevelCollection.Clear() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.Clear01">
            <summary>设置 LevelCollection.Clear() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Clone">
            <summary>设置 LevelCollection.Clone() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.Clone01">
            <summary>设置 LevelCollection.Clone() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Contains(log4net.Core.Level)">
            <summary>设置 LevelCollection.Contains(Level item) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ContainsLevel">
            <summary>设置 LevelCollection.Contains(Level item) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.CopyTo(log4net.Core.Level[])">
            <summary>设置 LevelCollection.CopyTo(Level[] array) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.CopyTo(log4net.Core.Level[],System.Int32)">
            <summary>设置 LevelCollection.CopyTo(Level[] array, Int32 start) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CopyToLevelArray">
            <summary>设置 LevelCollection.CopyTo(Level[] array) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CopyToLevelArrayInt32">
            <summary>设置 LevelCollection.CopyTo(Level[] array, Int32 start) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CountGet">
            <summary>设置 LevelCollection.get_Count() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.GetEnumerator">
            <summary>设置 LevelCollection.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.GetEnumerator01">
            <summary>设置 LevelCollection.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.IndexOf(log4net.Core.Level)">
            <summary>设置 LevelCollection.IndexOf(Level item) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IndexOfLevel">
            <summary>设置 LevelCollection.IndexOf(Level item) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.InitializeStub">
            <summary>初始化 type StubLevelCollection 的新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Insert(System.Int32,log4net.Core.Level)">
            <summary>设置 LevelCollection.Insert(Int32 index, Level item) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.InsertInt32Level">
            <summary>设置 LevelCollection.Insert(Int32 index, Level item) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsFixedSizeGet">
            <summary>设置 LevelCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsReadOnlyGet">
            <summary>设置 LevelCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsSynchronizedGet">
            <summary>设置 LevelCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ItemGetInt32">
            <summary>设置 LevelCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ItemSetInt32Level">
            <summary>设置 LevelCollection.set_Item(Int32 index, Level value) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Remove(log4net.Core.Level)">
            <summary>设置 LevelCollection.Remove(Level item) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.RemoveAt(System.Int32)">
            <summary>设置 LevelCollection.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.RemoveAtInt32">
            <summary>设置 LevelCollection.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.RemoveLevel">
            <summary>设置 LevelCollection.Remove(Level item) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.SyncRootGet">
            <summary>设置 LevelCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.TrimToSize">
            <summary>设置 LevelCollection.TrimToSize() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.TrimToSize01">
            <summary>设置 LevelCollection.TrimToSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Capacity">
            <summary>设置 LevelCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Count">
            <summary>设置 LevelCollection.get_Count() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsFixedSize">
            <summary>设置 LevelCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsReadOnly">
            <summary>设置 LevelCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsSynchronized">
            <summary>设置 LevelCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Item(System.Int32)">
            <summary>设置 LevelCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.SyncRoot">
            <summary>设置 LevelCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLevelEvaluator">
            <summary>log4net.Core.LevelEvaluator 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.#ctor(log4net.Core.Level)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.InitializeStub">
            <summary>初始化 type StubLevelEvaluator 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLocationInfo">
            <summary>log4net.Core.LocationInfo 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.InitializeStub">
            <summary>初始化 type StubLocationInfo 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLogException">
            <summary>log4net.Core.LogException 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubLogException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubLogException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.InitializeStub">
            <summary>初始化 type StubLogException 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLogImpl">
            <summary>log4net.Core.LogImpl 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.#ctor(log4net.Core.ILogger)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Debug(System.Object)">
            <summary>设置 LogImpl.Debug(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Debug(System.Object,System.Exception)">
            <summary>设置 LogImpl.Debug(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object[])">
            <summary>设置 LogImpl.DebugFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object)">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object,System.Object)">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectArray">
            <summary>设置 LogImpl.DebugFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectObjectObject">
            <summary>设置 LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugObject">
            <summary>设置 LogImpl.Debug(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugObjectException">
            <summary>设置 LogImpl.Debug(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Error(System.Object)">
            <summary>设置 LogImpl.Error(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Error(System.Object,System.Exception)">
            <summary>设置 LogImpl.Error(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object[])">
            <summary>设置 LogImpl.ErrorFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object)">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object,System.Object)">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectArray">
            <summary>设置 LogImpl.ErrorFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectObjectObject">
            <summary>设置 LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorObject">
            <summary>设置 LogImpl.Error(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorObjectException">
            <summary>设置 LogImpl.Error(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Fatal(System.Object)">
            <summary>设置 LogImpl.Fatal(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Fatal(System.Object,System.Exception)">
            <summary>设置 LogImpl.Fatal(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object[])">
            <summary>设置 LogImpl.FatalFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object)">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object,System.Object)">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectArray">
            <summary>设置 LogImpl.FatalFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectObjectObject">
            <summary>设置 LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalObject">
            <summary>设置 LogImpl.Fatal(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalObjectException">
            <summary>设置 LogImpl.Fatal(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Info(System.Object)">
            <summary>设置 LogImpl.Info(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Info(System.Object,System.Exception)">
            <summary>设置 LogImpl.Info(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object)">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object[])">
            <summary>设置 LogImpl.InfoFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object,System.Object)">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectArray">
            <summary>设置 LogImpl.InfoFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectObjectObject">
            <summary>设置 LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoObject">
            <summary>设置 LogImpl.Info(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoObjectException">
            <summary>设置 LogImpl.Info(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InitializeStub">
            <summary>初始化 type StubLogImpl 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsDebugEnabledGet">
            <summary>设置 LogImpl.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsErrorEnabledGet">
            <summary>设置 LogImpl.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsFatalEnabledGet">
            <summary>设置 LogImpl.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsInfoEnabledGet">
            <summary>设置 LogImpl.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsWarnEnabledGet">
            <summary>设置 LogImpl.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.LoggerGet">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ReloadLevels(log4net.Repository.ILoggerRepository)">
            <summary>设置 LogImpl.ReloadLevels(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ReloadLevelsILoggerRepository">
            <summary>设置 LogImpl.ReloadLevels(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Warn(System.Object)">
            <summary>设置 LogImpl.Warn(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Warn(System.Object,System.Exception)">
            <summary>设置 LogImpl.Warn(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object[])">
            <summary>设置 LogImpl.WarnFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object)">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object,System.Object)">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatIFormatProviderStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectArray">
            <summary>设置 LogImpl.WarnFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectObjectObject">
            <summary>设置 LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnObject">
            <summary>设置 LogImpl.Warn(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnObjectException">
            <summary>设置 LogImpl.Warn(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsDebugEnabled">
            <summary>设置 LogImpl.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsErrorEnabled">
            <summary>设置 LogImpl.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsFatalEnabled">
            <summary>设置 LogImpl.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsInfoEnabled">
            <summary>设置 LogImpl.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsWarnEnabled">
            <summary>设置 LogImpl.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.Logger">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs">
            <summary>log4net.Core.LoggerRepositoryCreationEventArgs 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.#ctor(log4net.Repository.ILoggerRepository)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InitializeStub">
            <summary>初始化 type StubLoggerRepositoryCreationEventArgs 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggerWrapperImpl">
            <summary>log4net.Core.LoggerWrapperImpl 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerWrapperImpl.#ctor(log4net.Core.ILogger)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerWrapperImpl.InitializeStub">
            <summary>初始化 type StubLoggerWrapperImpl 的新实例</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLoggerWrapperImpl.LoggerGet">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.Logger">
            <summary>设置 LoggerWrapperImpl.get_Logger() 的 stub</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggingEvent">
            <summary>log4net.Core.LoggingEvent 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(log4net.Core.LoggingEventData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,log4net.Core.LoggingEventData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,log4net.Core.LoggingEventData,log4net.Core.FixFlags)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,System.String,log4net.Core.Level,System.Object,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLoggingEvent.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.InitializeStub">
            <summary>初始化 type StubLoggingEvent 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubSecurityContext">
            <summary>log4net.Core.SecurityContext 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.Impersonate(System.Object)">
            <summary>设置 SecurityContext.Impersonate(Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubSecurityContext.ImpersonateObject">
            <summary>设置 SecurityContext.Impersonate(Object state) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.InitializeStub">
            <summary>初始化 type StubSecurityContext 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubSecurityContextProvider">
            <summary>log4net.Core.SecurityContextProvider 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.CreateSecurityContext(System.Object)">
            <summary>设置 SecurityContextProvider.CreateSecurityContext(Object consumer) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubSecurityContextProvider.CreateSecurityContextObject">
            <summary>设置 SecurityContextProvider.CreateSecurityContext(Object consumer) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.InitializeStub">
            <summary>初始化 type StubSecurityContextProvider 的新实例</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubWrapperMap">
            <summary>log4net.Core.WrapperMap 的存根类型</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.#ctor(log4net.Core.WrapperCreationHandler)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.CreateNewWrapperObject(log4net.Core.ILogger)">
            <summary>设置 WrapperMap.CreateNewWrapperObject(ILogger logger) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.CreateNewWrapperObjectILogger">
            <summary>设置 WrapperMap.CreateNewWrapperObject(ILogger logger) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.GetWrapper(log4net.Core.ILogger)">
            <summary>设置 WrapperMap.GetWrapper(ILogger logger) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.GetWrapperILogger">
            <summary>设置 WrapperMap.GetWrapper(ILogger logger) 的 stub</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.InitializeStub">
            <summary>初始化 type StubWrapperMap 的新实例</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.RepositoryShutdown(log4net.Repository.ILoggerRepository)">
            <summary>设置 WrapperMap.RepositoryShutdown(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.RepositoryShutdownILoggerRepository">
            <summary>设置 WrapperMap.RepositoryShutdown(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter">
            <summary>log4net.DateFormatter.AbsoluteTimeDateFormatter 的填充码类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.#ctor(log4net.DateFormatter.AbsoluteTimeDateFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Constructor">
            <summary>设置 AbsoluteTimeDateFormatter.AbsoluteTimeDateFormatter() 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.StaticConstructor">
            <summary>设置 AbsoluteTimeDateFormatter.AbsoluteTimeDateFormatter() 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances.FormatDateDateTimeTextWriter">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter">
            <summary>log4net.DateFormatter.DateTimeDateFormatter 的填充码类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.#ctor(log4net.DateFormatter.DateTimeDateFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Constructor">
            <summary>设置 DateTimeDateFormatter.DateTimeDateFormatter() 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter">
            <summary>log4net.DateFormatter.Iso8601DateFormatter 的填充码类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.#ctor(log4net.DateFormatter.Iso8601DateFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Constructor">
            <summary>设置 Iso8601DateFormatter.Iso8601DateFormatter() 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter">
            <summary>log4net.DateFormatter.SimpleDateFormatter 的填充码类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.#ctor(log4net.DateFormatter.SimpleDateFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.ConstructorString">
            <summary>设置 SimpleDateFormatter.SimpleDateFormatter(String format) 的 填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.AllInstances.FormatDateDateTimeTextWriter">
            <summary>设置 SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter">
            <summary>log4net.DateFormatter.AbsoluteTimeDateFormatter 的存根类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InitializeStub">
            <summary>初始化 type StubAbsoluteTimeDateFormatter 的新实例</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter">
            <summary>log4net.DateFormatter.DateTimeDateFormatter 的存根类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>设置 DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InitializeStub">
            <summary>初始化 type StubDateTimeDateFormatter 的新实例</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubIDateFormatter">
            <summary>log4net.DateFormatter.IDateFormatter 的存根类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIDateFormatter.#ctor">
            <summary>初始化 type StubIDateFormatter 的新实例</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 IDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIDateFormatter.l4::log4net#DateFormatter#IDateFormatter#FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>设置 IDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 存根</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubIso8601DateFormatter">
            <summary>log4net.DateFormatter.Iso8601DateFormatter 的存根类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>设置 Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>设置 Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InitializeStub">
            <summary>初始化 type StubIso8601DateFormatter 的新实例</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubSimpleDateFormatter">
            <summary>log4net.DateFormatter.SimpleDateFormatter 的存根类型</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>设置 SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.FormatDateDateTimeTextWriter">
            <summary>设置 SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InitializeStub">
            <summary>初始化 type StubSimpleDateFormatter 的新实例</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Fakes.ShimGlobalContext">
            <summary>log4net.GlobalContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.#ctor(log4net.GlobalContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.Constructor">
            <summary>设置 GlobalContext.GlobalContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.PropertiesGet">
            <summary>设置 GlobalContext.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.StaticConstructor">
            <summary>设置 GlobalContext.GlobalContext() 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimGlobalContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogManager">
            <summary>log4net.LogManager 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.#ctor(log4net.LogManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Constructor">
            <summary>设置 LogManager.LogManager() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainAssemblyType">
            <summary>设置 LogManager.CreateDomain(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainString">
            <summary>设置 LogManager.CreateDomain(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainStringType">
            <summary>设置 LogManager.CreateDomain(String repository, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainType">
            <summary>设置 LogManager.CreateDomain(Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryAssemblyType">
            <summary>设置 LogManager.CreateRepository(Assembly repositoryAssembly, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryString">
            <summary>设置 LogManager.CreateRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryStringType">
            <summary>设置 LogManager.CreateRepository(String repository, Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryType">
            <summary>设置 LogManager.CreateRepository(Type repositoryType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsAssemblyString">
            <summary>设置 LogManager.Exists(Assembly repositoryAssembly, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsString">
            <summary>设置 LogManager.Exists(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsStringString">
            <summary>设置 LogManager.Exists(String repository, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetAllRepositories">
            <summary>设置 LogManager.GetAllRepositories() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggers">
            <summary>设置 LogManager.GetCurrentLoggers() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggersAssembly">
            <summary>设置 LogManager.GetCurrentLoggers(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggersString">
            <summary>设置 LogManager.GetCurrentLoggers(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerAssemblyString">
            <summary>设置 LogManager.GetLogger(Assembly repositoryAssembly, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerAssemblyType">
            <summary>设置 LogManager.GetLogger(Assembly repositoryAssembly, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepository">
            <summary>设置 LogManager.GetLoggerRepository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepositoryAssembly">
            <summary>设置 LogManager.GetLoggerRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepositoryString">
            <summary>设置 LogManager.GetLoggerRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerString">
            <summary>设置 LogManager.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerStringString">
            <summary>设置 LogManager.GetLogger(String repository, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerStringType">
            <summary>设置 LogManager.GetLogger(String repository, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerType">
            <summary>设置 LogManager.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepository">
            <summary>设置 LogManager.GetRepository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepositoryAssembly">
            <summary>设置 LogManager.GetRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepositoryString">
            <summary>设置 LogManager.GetRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfiguration">
            <summary>设置 LogManager.ResetConfiguration() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfigurationAssembly">
            <summary>设置 LogManager.ResetConfiguration(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfigurationString">
            <summary>设置 LogManager.ResetConfiguration(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Shutdown">
            <summary>设置 LogManager.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepository">
            <summary>设置 LogManager.ShutdownRepository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepositoryAssembly">
            <summary>设置 LogManager.ShutdownRepository(Assembly repositoryAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepositoryString">
            <summary>设置 LogManager.ShutdownRepository(String repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.StaticConstructor">
            <summary>设置 LogManager.LogManager() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapLoggerILogger">
            <summary>设置 LogManager.WrapLogger(ILogger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapLoggersILoggerArray">
            <summary>设置 LogManager.WrapLoggers(ILogger[] loggers) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapperCreationHandlerILogger">
            <summary>设置 LogManager.WrapperCreationHandler(ILogger logger) 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogicalThreadContext">
            <summary>log4net.LogicalThreadContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.#ctor(log4net.LogicalThreadContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.Constructor">
            <summary>设置 LogicalThreadContext.LogicalThreadContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.PropertiesGet">
            <summary>设置 LogicalThreadContext.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.StacksGet">
            <summary>设置 LogicalThreadContext.get_Stacks() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.StaticConstructor">
            <summary>设置 LogicalThreadContext.LogicalThreadContext() 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogicalThreadContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimMDC">
            <summary>log4net.MDC 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.#ctor(log4net.MDC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Clear">
            <summary>设置 MDC.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Constructor">
            <summary>设置 MDC.MDC() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.GetString">
            <summary>设置 MDC.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.RemoveString">
            <summary>设置 MDC.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.SetStringString">
            <summary>设置 MDC.Set(String key, String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimMDC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimNDC">
            <summary>log4net.NDC 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.#ctor(log4net.NDC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Clear">
            <summary>设置 NDC.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.CloneStack">
            <summary>设置 NDC.CloneStack() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Constructor">
            <summary>设置 NDC.NDC() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.DepthGet">
            <summary>设置 NDC.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.InheritStack">
            <summary>设置 NDC.Inherit(Stack stack) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Pop">
            <summary>设置 NDC.Pop() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.PushString">
            <summary>设置 NDC.Push(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Remove">
            <summary>设置 NDC.Remove() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.SetMaxDepthInt32">
            <summary>设置 NDC.SetMaxDepth(Int32 maxDepth) 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimNDC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimThreadContext">
            <summary>log4net.ThreadContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.#ctor(log4net.ThreadContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.Constructor">
            <summary>设置 ThreadContext.ThreadContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.PropertiesGet">
            <summary>设置 ThreadContext.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.StacksGet">
            <summary>设置 ThreadContext.get_Stacks() 的 填充码</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.StaticConstructor">
            <summary>设置 ThreadContext.ThreadContext() 的 填充码</summary>
        </member>
        <member name="T:log4net.Fakes.ShimThreadContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Fakes.StubILog">
            <summary>log4net.ILog 的存根类型</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.#ctor">
            <summary>初始化 type StubILog 的新实例</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatIFormatProviderStringObjectArray">
            <summary>设置 ILog.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObject">
            <summary>设置 ILog.DebugFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectArray">
            <summary>设置 ILog.DebugFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectObject">
            <summary>设置 ILog.DebugFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectObjectObject">
            <summary>设置 ILog.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugObject">
            <summary>设置 ILog.Debug(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugObjectException">
            <summary>设置 ILog.Debug(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatIFormatProviderStringObjectArray">
            <summary>设置 ILog.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObject">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectArray">
            <summary>设置 ILog.ErrorFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectObject">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectObjectObject">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorObject">
            <summary>设置 ILog.Error(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorObjectException">
            <summary>设置 ILog.Error(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatIFormatProviderStringObjectArray">
            <summary>设置 ILog.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObject">
            <summary>设置 ILog.FatalFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectArray">
            <summary>设置 ILog.FatalFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectObject">
            <summary>设置 ILog.FatalFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectObjectObject">
            <summary>设置 ILog.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalObject">
            <summary>设置 ILog.Fatal(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalObjectException">
            <summary>设置 ILog.Fatal(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatIFormatProviderStringObjectArray">
            <summary>设置 ILog.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObject">
            <summary>设置 ILog.InfoFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectArray">
            <summary>设置 ILog.InfoFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectObject">
            <summary>设置 ILog.InfoFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectObjectObject">
            <summary>设置 ILog.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoObject">
            <summary>设置 ILog.Info(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoObjectException">
            <summary>设置 ILog.Info(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsDebugEnabledGet">
            <summary>设置 ILog.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsErrorEnabledGet">
            <summary>设置 ILog.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsFatalEnabledGet">
            <summary>设置 ILog.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsInfoEnabledGet">
            <summary>设置 ILog.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsWarnEnabledGet">
            <summary>设置 ILog.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.LoggerGet">
            <summary>设置 ILoggerWrapper.get_Logger() 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatIFormatProviderStringObjectArray">
            <summary>设置 ILog.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObject">
            <summary>设置 ILog.WarnFormat(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectArray">
            <summary>设置 ILog.WarnFormat(String format, Object[] args) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectObject">
            <summary>设置 ILog.WarnFormat(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectObjectObject">
            <summary>设置 ILog.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnObject">
            <summary>设置 ILog.Warn(Object message) 的 stub</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnObjectException">
            <summary>设置 ILog.Warn(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Debug(System.Object)">
            <summary>设置 ILog.Debug(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Debug(System.Object,System.Exception)">
            <summary>设置 ILog.Debug(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#DebugFormat(System.String,System.Object[])">
            <summary>设置 ILog.DebugFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#DebugFormat(System.String,System.Object)">
            <summary>设置 ILog.DebugFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 ILog.DebugFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#DebugFormat(System.String,System.Object,System.Object)">
            <summary>设置 ILog.DebugFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#DebugFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 ILog.DebugFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Error(System.Object)">
            <summary>设置 ILog.Error(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Error(System.Object,System.Exception)">
            <summary>设置 ILog.Error(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#ErrorFormat(System.String,System.Object)">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#ErrorFormat(System.String,System.Object[])">
            <summary>设置 ILog.ErrorFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 ILog.ErrorFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#ErrorFormat(System.String,System.Object,System.Object)">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#ErrorFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 ILog.ErrorFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Fatal(System.Object)">
            <summary>设置 ILog.Fatal(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Fatal(System.Object,System.Exception)">
            <summary>设置 ILog.Fatal(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#FatalFormat(System.String,System.Object[])">
            <summary>设置 ILog.FatalFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#FatalFormat(System.String,System.Object)">
            <summary>设置 ILog.FatalFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 ILog.FatalFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#FatalFormat(System.String,System.Object,System.Object)">
            <summary>设置 ILog.FatalFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#FatalFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 ILog.FatalFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Info(System.Object)">
            <summary>设置 ILog.Info(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Info(System.Object,System.Exception)">
            <summary>设置 ILog.Info(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#InfoFormat(System.String,System.Object[])">
            <summary>设置 ILog.InfoFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#InfoFormat(System.String,System.Object)">
            <summary>设置 ILog.InfoFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 ILog.InfoFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#InfoFormat(System.String,System.Object,System.Object)">
            <summary>设置 ILog.InfoFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#InfoFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 ILog.InfoFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Warn(System.Object)">
            <summary>设置 ILog.Warn(Object message) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#Warn(System.Object,System.Exception)">
            <summary>设置 ILog.Warn(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#WarnFormat(System.String,System.Object[])">
            <summary>设置 ILog.WarnFormat(String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#WarnFormat(System.String,System.Object)">
            <summary>设置 ILog.WarnFormat(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>设置 ILog.WarnFormat(IFormatProvider provider, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#WarnFormat(System.String,System.Object,System.Object)">
            <summary>设置 ILog.WarnFormat(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.l4::log4net#ILog#WarnFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 ILog.WarnFormat(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#ILog#IsDebugEnabled">
            <summary>设置 ILog.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#ILog#IsErrorEnabled">
            <summary>设置 ILog.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#ILog#IsFatalEnabled">
            <summary>设置 ILog.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#ILog#IsInfoEnabled">
            <summary>设置 ILog.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#ILog#IsWarnEnabled">
            <summary>设置 ILog.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.l4::log4net#Core#ILoggerWrapper#Logger">
            <summary>设置 ILoggerWrapper.get_Logger() 的 stub</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimDenyAllFilter">
            <summary>log4net.Filter.DenyAllFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.#ctor(log4net.Filter.DenyAllFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.Constructor">
            <summary>设置 DenyAllFilter.DenyAllFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.DecideLoggingEvent">
            <summary>设置 DenyAllFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimDenyAllFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 DenyAllFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimFilterSkeleton">
            <summary>log4net.Filter.FilterSkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.#ctor(log4net.Filter.FilterSkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.Constructor">
            <summary>设置 FilterSkeleton.FilterSkeleton() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.NextGet">
            <summary>设置 FilterSkeleton.get_Next() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.NextSetIFilter">
            <summary>设置 FilterSkeleton.set_Next(IFilter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.NextGet">
            <summary>设置 FilterSkeleton.get_Next() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.NextSetIFilter">
            <summary>设置 FilterSkeleton.set_Next(IFilter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelMatchFilter">
            <summary>log4net.Filter.LevelMatchFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.#ctor(log4net.Filter.LevelMatchFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AcceptOnMatchGet">
            <summary>设置 LevelMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AcceptOnMatchSetBoolean">
            <summary>设置 LevelMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.Constructor">
            <summary>设置 LevelMatchFilter.LevelMatchFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.DecideLoggingEvent">
            <summary>设置 LevelMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.LevelToMatchGet">
            <summary>设置 LevelMatchFilter.get_LevelToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.LevelToMatchSetLevel">
            <summary>设置 LevelMatchFilter.set_LevelToMatch(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>设置 LevelMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>设置 LevelMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 LevelMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.LevelToMatchGet">
            <summary>设置 LevelMatchFilter.get_LevelToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.LevelToMatchSetLevel">
            <summary>设置 LevelMatchFilter.set_LevelToMatch(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelRangeFilter">
            <summary>log4net.Filter.LevelRangeFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.#ctor(log4net.Filter.LevelRangeFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AcceptOnMatchGet">
            <summary>设置 LevelRangeFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AcceptOnMatchSetBoolean">
            <summary>设置 LevelRangeFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.Constructor">
            <summary>设置 LevelRangeFilter.LevelRangeFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.DecideLoggingEvent">
            <summary>设置 LevelRangeFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMaxGet">
            <summary>设置 LevelRangeFilter.get_LevelMax() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMaxSetLevel">
            <summary>设置 LevelRangeFilter.set_LevelMax(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMinGet">
            <summary>设置 LevelRangeFilter.get_LevelMin() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMinSetLevel">
            <summary>设置 LevelRangeFilter.set_LevelMin(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.AcceptOnMatchGet">
            <summary>设置 LevelRangeFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>设置 LevelRangeFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 LevelRangeFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMaxGet">
            <summary>设置 LevelRangeFilter.get_LevelMax() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMaxSetLevel">
            <summary>设置 LevelRangeFilter.set_LevelMax(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMinGet">
            <summary>设置 LevelRangeFilter.get_LevelMin() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMinSetLevel">
            <summary>设置 LevelRangeFilter.set_LevelMin(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLoggerMatchFilter">
            <summary>log4net.Filter.LoggerMatchFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.#ctor(log4net.Filter.LoggerMatchFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AcceptOnMatchGet">
            <summary>设置 LoggerMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AcceptOnMatchSetBoolean">
            <summary>设置 LoggerMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.Constructor">
            <summary>设置 LoggerMatchFilter.LoggerMatchFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.DecideLoggingEvent">
            <summary>设置 LoggerMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.LoggerToMatchGet">
            <summary>设置 LoggerMatchFilter.get_LoggerToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.LoggerToMatchSetString">
            <summary>设置 LoggerMatchFilter.set_LoggerToMatch(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>设置 LoggerMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>设置 LoggerMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 LoggerMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.LoggerToMatchGet">
            <summary>设置 LoggerMatchFilter.get_LoggerToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.LoggerToMatchSetString">
            <summary>设置 LoggerMatchFilter.set_LoggerToMatch(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimMdcFilter">
            <summary>log4net.Filter.MdcFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.#ctor(log4net.Filter.MdcFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimMdcFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimMdcFilter.Constructor">
            <summary>设置 MdcFilter.MdcFilter() 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimMdcFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimNdcFilter">
            <summary>log4net.Filter.NdcFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.#ctor(log4net.Filter.NdcFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimNdcFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimNdcFilter.Constructor">
            <summary>设置 NdcFilter.NdcFilter() 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimNdcFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimPropertyFilter">
            <summary>log4net.Filter.PropertyFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.#ctor(log4net.Filter.PropertyFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.Constructor">
            <summary>设置 PropertyFilter.PropertyFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.DecideLoggingEvent">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.KeyGet">
            <summary>设置 PropertyFilter.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.KeySetString">
            <summary>设置 PropertyFilter.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.KeyGet">
            <summary>设置 PropertyFilter.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.KeySetString">
            <summary>设置 PropertyFilter.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimStringMatchFilter">
            <summary>log4net.Filter.StringMatchFilter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.#ctor(log4net.Filter.StringMatchFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AcceptOnMatchGet">
            <summary>设置 StringMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AcceptOnMatchSetBoolean">
            <summary>设置 StringMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.Constructor">
            <summary>设置 StringMatchFilter.StringMatchFilter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.DecideLoggingEvent">
            <summary>设置 StringMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.RegexToMatchGet">
            <summary>设置 StringMatchFilter.get_RegexToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.RegexToMatchSetString">
            <summary>设置 StringMatchFilter.set_RegexToMatch(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.StringToMatchGet">
            <summary>设置 StringMatchFilter.get_StringToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.StringToMatchSetString">
            <summary>设置 StringMatchFilter.set_StringToMatch(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>设置 StringMatchFilter.get_AcceptOnMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>设置 StringMatchFilter.set_AcceptOnMatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>设置 StringMatchFilter.Decide(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.RegexToMatchGet">
            <summary>设置 StringMatchFilter.get_RegexToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.RegexToMatchSetString">
            <summary>设置 StringMatchFilter.set_RegexToMatch(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.StringToMatchGet">
            <summary>设置 StringMatchFilter.get_StringToMatch() 的 填充码</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.StringToMatchSetString">
            <summary>设置 StringMatchFilter.set_StringToMatch(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubFilterSkeleton">
            <summary>log4net.Filter.FilterSkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubFilterSkeleton.ActivateOptions01">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 FilterSkeleton.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubFilterSkeleton.DecideLoggingEvent">
            <summary>设置 FilterSkeleton.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.InitializeStub">
            <summary>初始化 type StubFilterSkeleton 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubIFilter">
            <summary>log4net.Filter.IFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.#ctor">
            <summary>初始化 type StubIFilter 的新实例</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.ActivateOptions">
            <summary>设置 IOptionHandler.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.AttachBackingFieldToNext">
            <summary>附加委托以将 StubIFilter.Next 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.DecideLoggingEvent">
            <summary>设置 IFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.NextGet">
            <summary>设置 IFilter.get_Next() 的 stub</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.NextSetIFilter">
            <summary>设置 IFilter.set_Next(IFilter value) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.l4::log4net#Core#IOptionHandler#ActivateOptions">
            <summary>设置 IOptionHandler.ActivateOptions() 的 存根</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.l4::log4net#Filter#IFilter#Decide(log4net.Core.LoggingEvent)">
            <summary>设置 IFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubIFilter.l4::log4net#Filter#IFilter#Next">
            <summary>设置 IFilter.get_Next() 的 stub</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLevelMatchFilter">
            <summary>log4net.Filter.LevelMatchFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelMatchFilter.ActivateOptions01">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 LevelMatchFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelMatchFilter.DecideLoggingEvent">
            <summary>设置 LevelMatchFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.InitializeStub">
            <summary>初始化 type StubLevelMatchFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLevelRangeFilter">
            <summary>log4net.Filter.LevelRangeFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelRangeFilter.ActivateOptions01">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 LevelRangeFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelRangeFilter.DecideLoggingEvent">
            <summary>设置 LevelRangeFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.InitializeStub">
            <summary>初始化 type StubLevelRangeFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLoggerMatchFilter">
            <summary>log4net.Filter.LoggerMatchFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.ActivateOptions">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLoggerMatchFilter.ActivateOptions01">
            <summary>设置 FilterSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 LoggerMatchFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLoggerMatchFilter.DecideLoggingEvent">
            <summary>设置 LoggerMatchFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.InitializeStub">
            <summary>初始化 type StubLoggerMatchFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubMdcFilter">
            <summary>log4net.Filter.MdcFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubMdcFilter.ActivateOptions01">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubMdcFilter.DecideLoggingEvent">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.InitializeStub">
            <summary>初始化 type StubMdcFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubNdcFilter">
            <summary>log4net.Filter.NdcFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubNdcFilter.ActivateOptions01">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubNdcFilter.DecideLoggingEvent">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.InitializeStub">
            <summary>初始化 type StubNdcFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubPropertyFilter">
            <summary>log4net.Filter.PropertyFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubPropertyFilter.ActivateOptions01">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubPropertyFilter.DecideLoggingEvent">
            <summary>设置 PropertyFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.InitializeStub">
            <summary>初始化 type StubPropertyFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubStringMatchFilter">
            <summary>log4net.Filter.StringMatchFilter 的存根类型</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.ActivateOptions">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubStringMatchFilter.ActivateOptions01">
            <summary>设置 StringMatchFilter.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>设置 StringMatchFilter.Decide(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubStringMatchFilter.DecideLoggingEvent">
            <summary>设置 StringMatchFilter.Decide(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.InitializeStub">
            <summary>初始化 type StubStringMatchFilter 的新实例</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimExceptionLayout">
            <summary>log4net.Layout.ExceptionLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.#ctor(log4net.Layout.ExceptionLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.ActivateOptions">
            <summary>设置 ExceptionLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.Constructor">
            <summary>设置 ExceptionLayout.ExceptionLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.FormatTextWriterLoggingEvent">
            <summary>设置 ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances.ActivateOptions">
            <summary>设置 ExceptionLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>设置 ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter">
            <summary>log4net.Layout.Layout2RawLayoutAdapter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.#ctor(log4net.Layout.Layout2RawLayoutAdapter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.Bind(log4net.Layout.IRawLayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.ConstructorILayout">
            <summary>设置 Layout2RawLayoutAdapter.Layout2RawLayoutAdapter(ILayout layout) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.FormatLoggingEvent">
            <summary>设置 Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.AllInstances.FormatLoggingEvent">
            <summary>设置 Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayoutSkeleton">
            <summary>log4net.Layout.LayoutSkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.#ctor(log4net.Layout.LayoutSkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.Constructor">
            <summary>设置 LayoutSkeleton.LayoutSkeleton() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout">
            <summary>log4net.Layout.PatternLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.#ctor(log4net.Layout.PatternLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ActivateOptions">
            <summary>设置 PatternLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AddConverterPatternLayoutConverterInfo">
            <summary>设置 PatternLayout.AddConverter(ConverterInfo converterInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AddConverterStringType">
            <summary>设置 PatternLayout.AddConverter(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.Constructor">
            <summary>设置 PatternLayout.PatternLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConstructorString">
            <summary>设置 PatternLayout.PatternLayout(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConversionPatternGet">
            <summary>设置 PatternLayout.get_ConversionPattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConversionPatternSetString">
            <summary>设置 PatternLayout.set_ConversionPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.CreatePatternParserString">
            <summary>设置 PatternLayout.CreatePatternParser(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.FormatTextWriterLoggingEvent">
            <summary>设置 PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.StaticConstructor">
            <summary>设置 PatternLayout.PatternLayout() 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ActivateOptions">
            <summary>设置 PatternLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.AddConverterPatternLayoutConverterInfo">
            <summary>设置 PatternLayout.AddConverter(ConverterInfo converterInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.AddConverterStringType">
            <summary>设置 PatternLayout.AddConverter(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ConversionPatternGet">
            <summary>设置 PatternLayout.get_ConversionPattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ConversionPatternSetString">
            <summary>设置 PatternLayout.set_ConversionPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.CreatePatternParserString">
            <summary>设置 PatternLayout.CreatePatternParser(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>设置 PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo">
            <summary>log4net.Layout.PatternLayout+ConverterInfo 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.#ctor(log4net.Layout.PatternLayout.ConverterInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.Constructor">
            <summary>设置 ConverterInfo.ConverterInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.NameGet">
            <summary>设置 ConverterInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.NameSetString">
            <summary>设置 ConverterInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.TypeGet">
            <summary>设置 ConverterInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.TypeSetType">
            <summary>设置 ConverterInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.AllInstances.NameGet">
            <summary>设置 ConverterInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.AllInstances.NameSetString">
            <summary>设置 ConverterInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.AllInstances.TypeGet">
            <summary>设置 ConverterInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ShimConverterInfo.AllInstances.TypeSetType">
            <summary>设置 ConverterInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawLayoutConverter">
            <summary>log4net.Layout.RawLayoutConverter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.#ctor(log4net.Layout.RawLayoutConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.Bind(log4net.Util.TypeConverters.IConvertFrom)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.CanConvertFromType">
            <summary>设置 RawLayoutConverter.CanConvertFrom(Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.Constructor">
            <summary>设置 RawLayoutConverter.RawLayoutConverter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.ConvertFromObject">
            <summary>设置 RawLayoutConverter.ConvertFrom(Object source) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances.CanConvertFromType">
            <summary>设置 RawLayoutConverter.CanConvertFrom(Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances.ConvertFromObject">
            <summary>设置 RawLayoutConverter.ConvertFrom(Object source) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawPropertyLayout">
            <summary>log4net.Layout.RawPropertyLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.#ctor(log4net.Layout.RawPropertyLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.Constructor">
            <summary>设置 RawPropertyLayout.RawPropertyLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.FormatLoggingEvent">
            <summary>设置 RawPropertyLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.KeyGet">
            <summary>设置 RawPropertyLayout.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.KeySetString">
            <summary>设置 RawPropertyLayout.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.FormatLoggingEvent">
            <summary>设置 RawPropertyLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.KeyGet">
            <summary>设置 RawPropertyLayout.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.KeySetString">
            <summary>设置 RawPropertyLayout.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawTimeStampLayout">
            <summary>log4net.Layout.RawTimeStampLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.#ctor(log4net.Layout.RawTimeStampLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.Constructor">
            <summary>设置 RawTimeStampLayout.RawTimeStampLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.FormatLoggingEvent">
            <summary>设置 RawTimeStampLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawTimeStampLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.AllInstances.FormatLoggingEvent">
            <summary>设置 RawTimeStampLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout">
            <summary>log4net.Layout.RawUtcTimeStampLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.#ctor(log4net.Layout.RawUtcTimeStampLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Constructor">
            <summary>设置 RawUtcTimeStampLayout.RawUtcTimeStampLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.FormatLoggingEvent">
            <summary>设置 RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.AllInstances.FormatLoggingEvent">
            <summary>设置 RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimSimpleLayout">
            <summary>log4net.Layout.SimpleLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.#ctor(log4net.Layout.SimpleLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.ActivateOptions">
            <summary>设置 SimpleLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.Constructor">
            <summary>设置 SimpleLayout.SimpleLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.FormatTextWriterLoggingEvent">
            <summary>设置 SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances.ActivateOptions">
            <summary>设置 SimpleLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>设置 SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayout">
            <summary>log4net.Layout.XmlLayout 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.#ctor(log4net.Layout.XmlLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.ActivateOptions">
            <summary>设置 XmlLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodeMessageGet">
            <summary>设置 XmlLayout.get_Base64EncodeMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodeMessageSetBoolean">
            <summary>设置 XmlLayout.set_Base64EncodeMessage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodePropertiesGet">
            <summary>设置 XmlLayout.get_Base64EncodeProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodePropertiesSetBoolean">
            <summary>设置 XmlLayout.set_Base64EncodeProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Constructor">
            <summary>设置 XmlLayout.XmlLayout() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.ConstructorBoolean">
            <summary>设置 XmlLayout.XmlLayout(Boolean locationInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.PrefixGet">
            <summary>设置 XmlLayout.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.PrefixSetString">
            <summary>设置 XmlLayout.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.ActivateOptions">
            <summary>设置 XmlLayout.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodeMessageGet">
            <summary>设置 XmlLayout.get_Base64EncodeMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodeMessageSetBoolean">
            <summary>设置 XmlLayout.set_Base64EncodeMessage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodePropertiesGet">
            <summary>设置 XmlLayout.get_Base64EncodeProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodePropertiesSetBoolean">
            <summary>设置 XmlLayout.set_Base64EncodeProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.PrefixGet">
            <summary>设置 XmlLayout.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.PrefixSetString">
            <summary>设置 XmlLayout.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutBase">
            <summary>log4net.Layout.XmlLayoutBase 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.#ctor(log4net.Layout.XmlLayoutBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ActivateOptions">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.Constructor">
            <summary>设置 XmlLayoutBase.XmlLayoutBase() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ConstructorBoolean">
            <summary>设置 XmlLayoutBase.XmlLayoutBase(Boolean locationInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ContentTypeGet">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.FormatTextWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.InvalidCharReplacementGet">
            <summary>设置 XmlLayoutBase.get_InvalidCharReplacement() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.InvalidCharReplacementSetString">
            <summary>设置 XmlLayoutBase.set_InvalidCharReplacement(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.LocationInfoGet">
            <summary>设置 XmlLayoutBase.get_LocationInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.LocationInfoSetBoolean">
            <summary>设置 XmlLayoutBase.set_LocationInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.ActivateOptions">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.ContentTypeGet">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.FormatTextWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.InvalidCharReplacementGet">
            <summary>设置 XmlLayoutBase.get_InvalidCharReplacement() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.InvalidCharReplacementSetString">
            <summary>设置 XmlLayoutBase.set_InvalidCharReplacement(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.LocationInfoGet">
            <summary>设置 XmlLayoutBase.get_LocationInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.LocationInfoSetBoolean">
            <summary>设置 XmlLayoutBase.set_LocationInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j">
            <summary>log4net.Layout.XmlLayoutSchemaLog4j 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.#ctor(log4net.Layout.XmlLayoutSchemaLog4j)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Bind(log4net.Layout.ILayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Constructor">
            <summary>设置 XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.ConstructorBoolean">
            <summary>设置 XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j(Boolean locationInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.StaticConstructor">
            <summary>设置 XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.VersionGet">
            <summary>设置 XmlLayoutSchemaLog4j.get_Version() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.VersionSetString">
            <summary>设置 XmlLayoutSchemaLog4j.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.VersionGet">
            <summary>设置 XmlLayoutSchemaLog4j.get_Version() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.VersionSetString">
            <summary>设置 XmlLayoutSchemaLog4j.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubExceptionLayout">
            <summary>log4net.Layout.ExceptionLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.ActivateOptions">
            <summary>设置 ExceptionLayout.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.ActivateOptions01">
            <summary>设置 ExceptionLayout.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubExceptionLayout.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubExceptionLayout.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubExceptionLayout.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FormatTextWriterLoggingEvent">
            <summary>设置 ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.InitializeStub">
            <summary>初始化 type StubExceptionLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.ContentType">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubILayout">
            <summary>log4net.Layout.ILayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubILayout.#ctor">
            <summary>初始化 type StubILayout 的新实例</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.ContentTypeGet">
            <summary>设置 ILayout.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.FooterGet">
            <summary>设置 ILayout.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.FormatTextWriterLoggingEvent">
            <summary>设置 ILayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.HeaderGet">
            <summary>设置 ILayout.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.IgnoresExceptionGet">
            <summary>设置 ILayout.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubILayout.l4::log4net#Layout#ILayout#Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 ILayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.l4::log4net#Layout#ILayout#ContentType">
            <summary>设置 ILayout.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.l4::log4net#Layout#ILayout#Footer">
            <summary>设置 ILayout.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.l4::log4net#Layout#ILayout#Header">
            <summary>设置 ILayout.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.l4::log4net#Layout#ILayout#IgnoresException">
            <summary>设置 ILayout.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubIRawLayout">
            <summary>log4net.Layout.IRawLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubIRawLayout.#ctor">
            <summary>初始化 type StubIRawLayout 的新实例</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubIRawLayout.FormatLoggingEvent">
            <summary>设置 IRawLayout.Format(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubIRawLayout.l4::log4net#Layout#IRawLayout#Format(log4net.Core.LoggingEvent)">
            <summary>设置 IRawLayout.Format(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter">
            <summary>log4net.Layout.Layout2RawLayoutAdapter 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.#ctor(log4net.Layout.ILayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.Format(log4net.Core.LoggingEvent)">
            <summary>设置 Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.FormatLoggingEvent">
            <summary>设置 Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InitializeStub">
            <summary>初始化 type StubLayout2RawLayoutAdapter 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubLayoutSkeleton">
            <summary>log4net.Layout.LayoutSkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.ActivateOptions">
            <summary>设置 LayoutSkeleton.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.ActivateOptions01">
            <summary>设置 LayoutSkeleton.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubLayoutSkeleton.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubLayoutSkeleton.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubLayoutSkeleton.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 LayoutSkeleton.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FormatTextWriterLoggingEvent">
            <summary>设置 LayoutSkeleton.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.InitializeStub">
            <summary>初始化 type StubLayoutSkeleton 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.ContentType">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubPatternLayout">
            <summary>log4net.Layout.PatternLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.ActivateOptions">
            <summary>设置 PatternLayout.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.ActivateOptions01">
            <summary>设置 PatternLayout.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubPatternLayout.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubPatternLayout.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubPatternLayout.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.CreatePatternParser(System.String)">
            <summary>设置 PatternLayout.CreatePatternParser(String pattern) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.CreatePatternParserString">
            <summary>设置 PatternLayout.CreatePatternParser(String pattern) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FormatTextWriterLoggingEvent">
            <summary>设置 PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.InitializeStub">
            <summary>初始化 type StubPatternLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.ContentType">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawLayoutConverter">
            <summary>log4net.Layout.RawLayoutConverter 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawLayoutConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawLayoutConverter.InitializeStub">
            <summary>初始化 type StubRawLayoutConverter 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawPropertyLayout">
            <summary>log4net.Layout.RawPropertyLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.Format(log4net.Core.LoggingEvent)">
            <summary>设置 RawPropertyLayout.Format(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawPropertyLayout.FormatLoggingEvent">
            <summary>设置 RawPropertyLayout.Format(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.InitializeStub">
            <summary>初始化 type StubRawPropertyLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawTimeStampLayout">
            <summary>log4net.Layout.RawTimeStampLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.Format(log4net.Core.LoggingEvent)">
            <summary>设置 RawTimeStampLayout.Format(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawTimeStampLayout.FormatLoggingEvent">
            <summary>设置 RawTimeStampLayout.Format(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.InitializeStub">
            <summary>初始化 type StubRawTimeStampLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawUtcTimeStampLayout">
            <summary>log4net.Layout.RawUtcTimeStampLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.Format(log4net.Core.LoggingEvent)">
            <summary>设置 RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.FormatLoggingEvent">
            <summary>设置 RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InitializeStub">
            <summary>初始化 type StubRawUtcTimeStampLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubSimpleLayout">
            <summary>log4net.Layout.SimpleLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.ActivateOptions">
            <summary>设置 SimpleLayout.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.ActivateOptions01">
            <summary>设置 SimpleLayout.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubSimpleLayout.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubSimpleLayout.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubSimpleLayout.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.ContentTypeGet">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FormatTextWriterLoggingEvent">
            <summary>设置 SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.InitializeStub">
            <summary>初始化 type StubSimpleLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.ContentType">
            <summary>设置 LayoutSkeleton.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayout">
            <summary>log4net.Layout.XmlLayout 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.ActivateOptions">
            <summary>设置 XmlLayout.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.ActivateOptions01">
            <summary>设置 XmlLayout.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubXmlLayout.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubXmlLayout.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubXmlLayout.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.ContentTypeGet">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FormatTextWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.InitializeStub">
            <summary>初始化 type StubXmlLayout 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.ContentType">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayoutBase">
            <summary>log4net.Layout.XmlLayoutBase 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.ActivateOptions">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.ActivateOptions01">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubXmlLayoutBase.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubXmlLayoutBase.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubXmlLayoutBase.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.ContentTypeGet">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FormatTextWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayoutBase.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.InitializeStub">
            <summary>初始化 type StubXmlLayoutBase 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.ContentType">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j">
            <summary>log4net.Layout.XmlLayoutSchemaLog4j 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ActivateOptions">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ActivateOptions01">
            <summary>设置 XmlLayoutBase.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToFooter">
            <summary>附加委托以将 StubXmlLayoutSchemaLog4j.Footer 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToHeader">
            <summary>附加委托以将 StubXmlLayoutSchemaLog4j.Header 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubXmlLayoutSchemaLog4j.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ContentTypeGet">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FooterGet">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FooterSetString">
            <summary>设置 LayoutSkeleton.set_Footer(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatTextWriterLoggingEvent">
            <summary>设置 XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>设置 XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatXmlXmlWriterLoggingEvent">
            <summary>设置 XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.HeaderGet">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.HeaderSetString">
            <summary>设置 LayoutSkeleton.set_Header(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresExceptionGet">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresExceptionSetBoolean">
            <summary>设置 LayoutSkeleton.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InitializeStub">
            <summary>初始化 type StubXmlLayoutSchemaLog4j 的新实例</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ContentType">
            <summary>设置 XmlLayoutBase.get_ContentType() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Footer">
            <summary>设置 LayoutSkeleton.get_Footer() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Header">
            <summary>设置 LayoutSkeleton.get_Header() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresException">
            <summary>设置 LayoutSkeleton.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter">
            <summary>log4net.Layout.Pattern.PatternLayoutConverter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.#ctor(log4net.Layout.Pattern.PatternLayoutConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.Constructor">
            <summary>设置 PatternLayoutConverter.PatternLayoutConverter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.ConvertTextWriterObject">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.IgnoresExceptionGet">
            <summary>设置 PatternLayoutConverter.get_IgnoresException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.IgnoresExceptionSetBoolean">
            <summary>设置 PatternLayoutConverter.set_IgnoresException(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.ConvertTextWriterObject">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.IgnoresExceptionGet">
            <summary>设置 PatternLayoutConverter.get_IgnoresException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.IgnoresExceptionSetBoolean">
            <summary>设置 PatternLayoutConverter.set_IgnoresException(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter">
            <summary>log4net.Layout.Pattern.PatternLayoutConverter 的存根类型</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToFormattingInfo">
            <summary>附加委托以将 StubPatternLayoutConverter.FormattingInfo 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToIgnoresException">
            <summary>附加委托以将 StubPatternLayoutConverter.IgnoresException 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToOption">
            <summary>附加委托以将 StubPatternLayoutConverter.Option 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Convert(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Convert(System.IO.TextWriter,System.Object)">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.ConvertTextWriterLoggingEvent">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.ConvertTextWriterObject">
            <summary>设置 PatternLayoutConverter.Convert(TextWriter writer, Object state) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Format(System.IO.TextWriter,System.Object)">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormatTextWriterObject">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfoGet">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfoSetFormattingInfo">
            <summary>设置 PatternConverter.set_FormattingInfo(FormattingInfo value) 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresExceptionGet">
            <summary>设置 PatternLayoutConverter.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresExceptionSetBoolean">
            <summary>设置 PatternLayoutConverter.set_IgnoresException(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InitializeStub">
            <summary>初始化 type StubPatternLayoutConverter 的新实例</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.NextGet">
            <summary>设置 PatternConverter.get_Next() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.OptionGet">
            <summary>设置 PatternConverter.get_Option() 的 stub</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.OptionSetString">
            <summary>设置 PatternConverter.set_Option(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.SetNext(log4net.Util.PatternConverter)">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 存根</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.SetNextPatternConverter">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfo">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresException">
            <summary>设置 PatternLayoutConverter.get_IgnoresException() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Next">
            <summary>设置 PatternConverter.get_Next() 的 stub</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Option">
            <summary>设置 PatternConverter.get_Option() 的 stub</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer">
            <summary>log4net.ObjectRenderer.DefaultRenderer 的填充码类型</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.#ctor(log4net.ObjectRenderer.DefaultRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Bind(log4net.ObjectRenderer.IObjectRenderer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Constructor">
            <summary>设置 DefaultRenderer.DefaultRenderer() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderArrayRendererMapArrayTextWriter">
            <summary>设置 DefaultRenderer.RenderArray(RendererMap rendererMap, Array array, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderDictionaryEntryRendererMapDictionaryEntryTextWriter">
            <summary>设置 DefaultRenderer.RenderDictionaryEntry(RendererMap rendererMap, DictionaryEntry entry, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderEnumeratorRendererMapIEnumeratorTextWriter">
            <summary>设置 DefaultRenderer.RenderEnumerator(RendererMap rendererMap, IEnumerator enumerator, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderObjectRendererMapObjectTextWriter">
            <summary>设置 DefaultRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderArrayRendererMapArrayTextWriter">
            <summary>设置 DefaultRenderer.RenderArray(RendererMap rendererMap, Array array, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderDictionaryEntryRendererMapDictionaryEntryTextWriter">
            <summary>设置 DefaultRenderer.RenderDictionaryEntry(RendererMap rendererMap, DictionaryEntry entry, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderEnumeratorRendererMapIEnumeratorTextWriter">
            <summary>设置 DefaultRenderer.RenderEnumerator(RendererMap rendererMap, IEnumerator enumerator, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderObjectRendererMapObjectTextWriter">
            <summary>设置 DefaultRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimRendererMap">
            <summary>log4net.ObjectRenderer.RendererMap 的填充码类型</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.#ctor(log4net.ObjectRenderer.RendererMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Clear">
            <summary>设置 RendererMap.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Constructor">
            <summary>设置 RendererMap.RendererMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.DefaultRendererGet">
            <summary>设置 RendererMap.get_DefaultRenderer() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.FindAndRenderObject">
            <summary>设置 RendererMap.FindAndRender(Object obj) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.FindAndRenderObjectTextWriter">
            <summary>设置 RendererMap.FindAndRender(Object obj, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.GetObject">
            <summary>设置 RendererMap.Get(Object obj) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.GetType">
            <summary>设置 RendererMap.Get(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.PutTypeIObjectRenderer">
            <summary>设置 RendererMap.Put(Type typeToRender, IObjectRenderer renderer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.SearchTypeAndInterfacesType">
            <summary>设置 RendererMap.SearchTypeAndInterfaces(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.StaticConstructor">
            <summary>设置 RendererMap.RendererMap() 的 填充码</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.Clear">
            <summary>设置 RendererMap.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.DefaultRendererGet">
            <summary>设置 RendererMap.get_DefaultRenderer() 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.FindAndRenderObject">
            <summary>设置 RendererMap.FindAndRender(Object obj) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.FindAndRenderObjectTextWriter">
            <summary>设置 RendererMap.FindAndRender(Object obj, TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.GetObject">
            <summary>设置 RendererMap.Get(Object obj) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.GetType01">
            <summary>设置 RendererMap.Get(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.PutTypeIObjectRenderer">
            <summary>设置 RendererMap.Put(Type typeToRender, IObjectRenderer renderer) 的 填充码</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.SearchTypeAndInterfacesType">
            <summary>设置 RendererMap.SearchTypeAndInterfaces(Type type) 的 填充码</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.StubIObjectRenderer">
            <summary>log4net.ObjectRenderer.IObjectRenderer 的存根类型</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.#ctor">
            <summary>初始化 type StubIObjectRenderer 的新实例</summary>
        </member>
        <member name="F:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.RenderObjectRendererMapObjectTextWriter">
            <summary>设置 IObjectRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer) 的 stub</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.l4::log4net#ObjectRenderer#IObjectRenderer#RenderObject(log4net.ObjectRenderer.RendererMap,System.Object,System.IO.TextWriter)">
            <summary>设置 IObjectRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer) 的 存根</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.StubRendererMap">
            <summary>log4net.ObjectRenderer.RendererMap 的存根类型</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubRendererMap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubRendererMap.InitializeStub">
            <summary>初始化 type StubRendererMap 的新实例</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginCollection">
            <summary>log4net.Plugin.PluginCollection 的填充码类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.#ctor(log4net.Plugin.PluginCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddIPlugin">
            <summary>设置 PluginCollection.Add(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangeICollection">
            <summary>设置 PluginCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangeIPluginArray">
            <summary>设置 PluginCollection.AddRange(IPlugin[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangePluginCollection">
            <summary>设置 PluginCollection.AddRange(PluginCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CapacityGet">
            <summary>设置 PluginCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CapacitySetInt32">
            <summary>设置 PluginCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Clear">
            <summary>设置 PluginCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Clone">
            <summary>设置 PluginCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Constructor">
            <summary>设置 PluginCollection.PluginCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorICollection">
            <summary>设置 PluginCollection.PluginCollection(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorIPluginArray">
            <summary>设置 PluginCollection.PluginCollection(IPlugin[] a) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorInt32">
            <summary>设置 PluginCollection.PluginCollection(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorPluginCollection">
            <summary>设置 PluginCollection.PluginCollection(PluginCollection c) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ContainsIPlugin">
            <summary>设置 PluginCollection.Contains(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CopyToIPluginArray">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CopyToIPluginArrayInt32">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CountGet">
            <summary>设置 PluginCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.EnsureCapacityInt32">
            <summary>设置 PluginCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.GetEnumerator">
            <summary>设置 PluginCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IndexOfIPlugin">
            <summary>设置 PluginCollection.IndexOf(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.InsertInt32IPlugin">
            <summary>设置 PluginCollection.Insert(Int32 index, IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsFixedSizeGet">
            <summary>设置 PluginCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsReadOnlyGet">
            <summary>设置 PluginCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsSynchronizedGet">
            <summary>设置 PluginCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemGetInt32">
            <summary>设置 PluginCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSetInt32IPlugin">
            <summary>设置 PluginCollection.set_Item(Int32 index, IPlugin value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSystemCollectionsIListgetInt32">
            <summary>设置 PluginCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 PluginCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ReadOnlyPluginCollection">
            <summary>设置 PluginCollection.ReadOnly(PluginCollection list) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.RemoveAtInt32">
            <summary>设置 PluginCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.RemoveIPlugin">
            <summary>设置 PluginCollection.Remove(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SyncRootGet">
            <summary>设置 PluginCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 PluginCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PluginCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListAddObject">
            <summary>设置 PluginCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListContainsObject">
            <summary>设置 PluginCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListIndexOfObject">
            <summary>设置 PluginCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListInsertInt32Object">
            <summary>设置 PluginCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 PluginCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListRemoveObject">
            <summary>设置 PluginCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.TrimToSize">
            <summary>设置 PluginCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ValidateIndexInt32">
            <summary>设置 PluginCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ValidateIndexInt32Boolean">
            <summary>设置 PluginCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddIPlugin">
            <summary>设置 PluginCollection.Add(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangeICollection">
            <summary>设置 PluginCollection.AddRange(ICollection col) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangeIPluginArray">
            <summary>设置 PluginCollection.AddRange(IPlugin[] x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangePluginCollection">
            <summary>设置 PluginCollection.AddRange(PluginCollection x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CapacityGet">
            <summary>设置 PluginCollection.get_Capacity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CapacitySetInt32">
            <summary>设置 PluginCollection.set_Capacity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.Clear">
            <summary>设置 PluginCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.Clone">
            <summary>设置 PluginCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ContainsIPlugin">
            <summary>设置 PluginCollection.Contains(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CopyToIPluginArray">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CopyToIPluginArrayInt32">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CountGet">
            <summary>设置 PluginCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.EnsureCapacityInt32">
            <summary>设置 PluginCollection.EnsureCapacity(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.GetEnumerator">
            <summary>设置 PluginCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IndexOfIPlugin">
            <summary>设置 PluginCollection.IndexOf(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.InsertInt32IPlugin">
            <summary>设置 PluginCollection.Insert(Int32 index, IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsFixedSizeGet">
            <summary>设置 PluginCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsReadOnlyGet">
            <summary>设置 PluginCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsSynchronizedGet">
            <summary>设置 PluginCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemGetInt32">
            <summary>设置 PluginCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSetInt32IPlugin">
            <summary>设置 PluginCollection.set_Item(Int32 index, IPlugin value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>设置 PluginCollection.System.Collections.IList.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 PluginCollection.System.Collections.IList.set_Item(Int32 i, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.RemoveAtInt32">
            <summary>设置 PluginCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.RemoveIPlugin">
            <summary>设置 PluginCollection.Remove(IPlugin item) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SyncRootGet">
            <summary>设置 PluginCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 PluginCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PluginCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>设置 PluginCollection.System.Collections.IList.Add(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>设置 PluginCollection.System.Collections.IList.Contains(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>设置 PluginCollection.System.Collections.IList.IndexOf(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>设置 PluginCollection.System.Collections.IList.Insert(Int32 pos, Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 PluginCollection.System.Collections.IList.RemoveAt(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>设置 PluginCollection.System.Collections.IList.Remove(Object x) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.TrimToSize">
            <summary>设置 PluginCollection.TrimToSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ValidateIndexInt32">
            <summary>设置 PluginCollection.ValidateIndex(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>设置 PluginCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginMap">
            <summary>log4net.Plugin.PluginMap 的填充码类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.#ctor(log4net.Plugin.PluginMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AddIPlugin">
            <summary>设置 PluginMap.Add(IPlugin plugin) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllPluginsGet">
            <summary>设置 PluginMap.get_AllPlugins() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.ConstructorILoggerRepository">
            <summary>设置 PluginMap.PluginMap(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.ItemGetString">
            <summary>设置 PluginMap.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.RemoveIPlugin">
            <summary>设置 PluginMap.Remove(IPlugin plugin) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.AddIPlugin">
            <summary>设置 PluginMap.Add(IPlugin plugin) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.AllPluginsGet">
            <summary>设置 PluginMap.get_AllPlugins() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.ItemGetString">
            <summary>设置 PluginMap.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.RemoveIPlugin">
            <summary>设置 PluginMap.Remove(IPlugin plugin) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginSkeleton">
            <summary>log4net.Plugin.PluginSkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.#ctor(log4net.Plugin.PluginSkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.Bind(log4net.Plugin.IPlugin)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AttachILoggerRepository">
            <summary>设置 PluginSkeleton.Attach(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.ConstructorString">
            <summary>设置 PluginSkeleton.PluginSkeleton(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.LoggerRepositoryGet">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.LoggerRepositorySetILoggerRepository">
            <summary>设置 PluginSkeleton.set_LoggerRepository(ILoggerRepository value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.NameGet">
            <summary>设置 PluginSkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.NameSetString">
            <summary>设置 PluginSkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.Shutdown">
            <summary>设置 PluginSkeleton.Shutdown() 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.AttachILoggerRepository">
            <summary>设置 PluginSkeleton.Attach(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.LoggerRepositoryGet">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.LoggerRepositorySetILoggerRepository">
            <summary>设置 PluginSkeleton.set_LoggerRepository(ILoggerRepository value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.NameGet">
            <summary>设置 PluginSkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.NameSetString">
            <summary>设置 PluginSkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.Shutdown">
            <summary>设置 PluginSkeleton.Shutdown() 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin">
            <summary>log4net.Plugin.RemoteLoggingServerPlugin 的填充码类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.#ctor(log4net.Plugin.RemoteLoggingServerPlugin)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Bind(log4net.Plugin.IPlugin)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AttachILoggerRepository">
            <summary>设置 RemoteLoggingServerPlugin.Attach(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Constructor">
            <summary>设置 RemoteLoggingServerPlugin.RemoteLoggingServerPlugin() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.ConstructorString">
            <summary>设置 RemoteLoggingServerPlugin.RemoteLoggingServerPlugin(String sinkUri) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Shutdown">
            <summary>设置 RemoteLoggingServerPlugin.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.SinkUriGet">
            <summary>设置 RemoteLoggingServerPlugin.get_SinkUri() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.SinkUriSetString">
            <summary>设置 RemoteLoggingServerPlugin.set_SinkUri(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.AttachILoggerRepository">
            <summary>设置 RemoteLoggingServerPlugin.Attach(ILoggerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.Shutdown">
            <summary>设置 RemoteLoggingServerPlugin.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.SinkUriGet">
            <summary>设置 RemoteLoggingServerPlugin.get_SinkUri() 的 填充码</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.SinkUriSetString">
            <summary>设置 RemoteLoggingServerPlugin.set_SinkUri(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubIPlugin">
            <summary>log4net.Plugin.IPlugin 的存根类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.#ctor">
            <summary>初始化 type StubIPlugin 的新实例</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.AttachILoggerRepository">
            <summary>设置 IPlugin.Attach(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.NameGet">
            <summary>设置 IPlugin.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.Shutdown">
            <summary>设置 IPlugin.Shutdown() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.l4::log4net#Plugin#IPlugin#Attach(log4net.Repository.ILoggerRepository)">
            <summary>设置 IPlugin.Attach(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.l4::log4net#Plugin#IPlugin#Shutdown">
            <summary>设置 IPlugin.Shutdown() 的 存根</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubIPlugin.l4::log4net#Plugin#IPlugin#Name">
            <summary>设置 IPlugin.get_Name() 的 stub</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubIPluginFactory">
            <summary>log4net.Plugin.IPluginFactory 的存根类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPluginFactory.#ctor">
            <summary>初始化 type StubIPluginFactory 的新实例</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPluginFactory.CreatePlugin">
            <summary>设置 IPluginFactory.CreatePlugin() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPluginFactory.l4::log4net#Plugin#IPluginFactory#CreatePlugin">
            <summary>设置 IPluginFactory.CreatePlugin() 的 存根</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubPluginCollection">
            <summary>log4net.Plugin.PluginCollection 的存根类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(System.Collections.ICollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.IPlugin[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.PluginCollection.Tag)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.PluginCollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Add(log4net.Plugin.IPlugin)">
            <summary>设置 PluginCollection.Add(IPlugin item) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddIPlugin">
            <summary>设置 PluginCollection.Add(IPlugin item) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(log4net.Plugin.IPlugin[])">
            <summary>设置 PluginCollection.AddRange(IPlugin[] x) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(log4net.Plugin.PluginCollection)">
            <summary>设置 PluginCollection.AddRange(PluginCollection x) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 PluginCollection.AddRange(ICollection col) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangeICollection">
            <summary>设置 PluginCollection.AddRange(ICollection col) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangeIPluginArray">
            <summary>设置 PluginCollection.AddRange(IPlugin[] x) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangePluginCollection">
            <summary>设置 PluginCollection.AddRange(PluginCollection x) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AttachBackingFieldToCapacity">
            <summary>附加委托以将 StubPluginCollection.Capacity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CapacityGet">
            <summary>设置 PluginCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CapacitySetInt32">
            <summary>设置 PluginCollection.set_Capacity(Int32 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Clear">
            <summary>设置 PluginCollection.Clear() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.Clear01">
            <summary>设置 PluginCollection.Clear() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Clone">
            <summary>设置 PluginCollection.Clone() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.Clone01">
            <summary>设置 PluginCollection.Clone() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Contains(log4net.Plugin.IPlugin)">
            <summary>设置 PluginCollection.Contains(IPlugin item) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ContainsIPlugin">
            <summary>设置 PluginCollection.Contains(IPlugin item) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.CopyTo(log4net.Plugin.IPlugin[])">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.CopyTo(log4net.Plugin.IPlugin[],System.Int32)">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array, Int32 start) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CopyToIPluginArray">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CopyToIPluginArrayInt32">
            <summary>设置 PluginCollection.CopyTo(IPlugin[] array, Int32 start) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CountGet">
            <summary>设置 PluginCollection.get_Count() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.GetEnumerator">
            <summary>设置 PluginCollection.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.GetEnumerator01">
            <summary>设置 PluginCollection.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.IndexOf(log4net.Plugin.IPlugin)">
            <summary>设置 PluginCollection.IndexOf(IPlugin item) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IndexOfIPlugin">
            <summary>设置 PluginCollection.IndexOf(IPlugin item) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.InitializeStub">
            <summary>初始化 type StubPluginCollection 的新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Insert(System.Int32,log4net.Plugin.IPlugin)">
            <summary>设置 PluginCollection.Insert(Int32 index, IPlugin item) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.InsertInt32IPlugin">
            <summary>设置 PluginCollection.Insert(Int32 index, IPlugin item) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsFixedSizeGet">
            <summary>设置 PluginCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsReadOnlyGet">
            <summary>设置 PluginCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsSynchronizedGet">
            <summary>设置 PluginCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ItemGetInt32">
            <summary>设置 PluginCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ItemSetInt32IPlugin">
            <summary>设置 PluginCollection.set_Item(Int32 index, IPlugin value) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Remove(log4net.Plugin.IPlugin)">
            <summary>设置 PluginCollection.Remove(IPlugin item) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.RemoveAt(System.Int32)">
            <summary>设置 PluginCollection.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.RemoveAtInt32">
            <summary>设置 PluginCollection.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.RemoveIPlugin">
            <summary>设置 PluginCollection.Remove(IPlugin item) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.SyncRootGet">
            <summary>设置 PluginCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.TrimToSize">
            <summary>设置 PluginCollection.TrimToSize() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.TrimToSize01">
            <summary>设置 PluginCollection.TrimToSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Capacity">
            <summary>设置 PluginCollection.get_Capacity() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Count">
            <summary>设置 PluginCollection.get_Count() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsFixedSize">
            <summary>设置 PluginCollection.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsReadOnly">
            <summary>设置 PluginCollection.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsSynchronized">
            <summary>设置 PluginCollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Item(System.Int32)">
            <summary>设置 PluginCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.SyncRoot">
            <summary>设置 PluginCollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubPluginSkeleton">
            <summary>log4net.Plugin.PluginSkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.Attach(log4net.Repository.ILoggerRepository)">
            <summary>设置 PluginSkeleton.Attach(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.AttachBackingFieldToLoggerRepository">
            <summary>附加委托以将 StubPluginSkeleton.LoggerRepository 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.AttachBackingFieldToName">
            <summary>附加委托以将 StubPluginSkeleton.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.AttachILoggerRepository">
            <summary>设置 PluginSkeleton.Attach(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.InitializeStub">
            <summary>初始化 type StubPluginSkeleton 的新实例</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepositoryGet">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepositorySetILoggerRepository">
            <summary>设置 PluginSkeleton.set_LoggerRepository(ILoggerRepository value) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.NameGet">
            <summary>设置 PluginSkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.NameSetString">
            <summary>设置 PluginSkeleton.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.Shutdown">
            <summary>设置 PluginSkeleton.Shutdown() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.Shutdown01">
            <summary>设置 PluginSkeleton.Shutdown() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepository">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.Name">
            <summary>设置 PluginSkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin">
            <summary>log4net.Plugin.RemoteLoggingServerPlugin 的存根类型</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Attach(log4net.Repository.ILoggerRepository)">
            <summary>设置 RemoteLoggingServerPlugin.Attach(ILoggerRepository repository) 的 存根</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToLoggerRepository">
            <summary>附加委托以将 StubRemoteLoggingServerPlugin.LoggerRepository 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToName">
            <summary>附加委托以将 StubRemoteLoggingServerPlugin.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToSinkUri">
            <summary>附加委托以将 StubRemoteLoggingServerPlugin.SinkUri 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachILoggerRepository">
            <summary>设置 RemoteLoggingServerPlugin.Attach(ILoggerRepository repository) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InitializeStub">
            <summary>初始化 type StubRemoteLoggingServerPlugin 的新实例</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepositoryGet">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepositorySetILoggerRepository">
            <summary>设置 PluginSkeleton.set_LoggerRepository(ILoggerRepository value) 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.NameGet">
            <summary>设置 PluginSkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.NameSetString">
            <summary>设置 PluginSkeleton.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Shutdown">
            <summary>设置 RemoteLoggingServerPlugin.Shutdown() 的 存根</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Shutdown01">
            <summary>设置 RemoteLoggingServerPlugin.Shutdown() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUriGet">
            <summary>设置 RemoteLoggingServerPlugin.get_SinkUri() 的 stub</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUriSetString">
            <summary>设置 RemoteLoggingServerPlugin.set_SinkUri(String value) 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepository">
            <summary>设置 PluginSkeleton.get_LoggerRepository() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Name">
            <summary>设置 PluginSkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUri">
            <summary>设置 RemoteLoggingServerPlugin.get_SinkUri() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton">
            <summary>log4net.Repository.LoggerRepositorySkeleton 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.#ctor(log4net.Repository.LoggerRepositorySkeleton)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Bind(log4net.Repository.ILoggerRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AddBuiltinLevels">
            <summary>设置 LoggerRepositorySkeleton.AddBuiltinLevels() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AddRendererTypeIObjectRenderer">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationChangedAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationChangedRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationResetAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationResetRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfiguredGet">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfiguredSetBoolean">
            <summary>设置 LoggerRepositorySkeleton.set_Configured(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Constructor">
            <summary>设置 LoggerRepositorySkeleton.LoggerRepositorySkeleton() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConstructorPropertiesDictionary">
            <summary>设置 LoggerRepositorySkeleton.LoggerRepositorySkeleton(PropertiesDictionary properties) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.LevelMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.NameGet">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.NameSetString">
            <summary>设置 LoggerRepositorySkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnConfigurationResetEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnShutdownEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.PluginMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.PropertiesGet">
            <summary>设置 LoggerRepositorySkeleton.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.RaiseConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.RaiseConfigurationChanged(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.RendererMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ResetConfiguration">
            <summary>设置 LoggerRepositorySkeleton.ResetConfiguration() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Shutdown">
            <summary>设置 LoggerRepositorySkeleton.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ShutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ShutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ShutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ShutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ThresholdGet">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ThresholdSetLevel">
            <summary>设置 LoggerRepositorySkeleton.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationChangedEventAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationChangedEventRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationResetEventAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationResetEventRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_shutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_shutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.AddBuiltinLevels">
            <summary>设置 LoggerRepositorySkeleton.AddBuiltinLevels() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.AddRendererTypeIObjectRenderer">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationChangedAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationChangedRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationResetAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationResetRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfiguredGet">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfiguredSetBoolean">
            <summary>设置 LoggerRepositorySkeleton.set_Configured(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.LevelMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.NameGet">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.NameSetString">
            <summary>设置 LoggerRepositorySkeleton.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnConfigurationResetEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnShutdownEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.PluginMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.PropertiesGet">
            <summary>设置 LoggerRepositorySkeleton.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.RaiseConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.RaiseConfigurationChanged(EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.RendererMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ResetConfiguration">
            <summary>设置 LoggerRepositorySkeleton.ResetConfiguration() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.Shutdown">
            <summary>设置 LoggerRepositorySkeleton.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ShutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_ShutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ShutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_ShutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ThresholdGet">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ThresholdSetLevel">
            <summary>设置 LoggerRepositorySkeleton.set_Threshold(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationChangedEventAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationChangedEventRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationResetEventAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationResetEventRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_shutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.add_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_shutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>设置 LoggerRepositorySkeleton.remove_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator">
            <summary>log4net.Repository.IBasicRepositoryConfigurator 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.#ctor">
            <summary>初始化 type StubIBasicRepositoryConfigurator 的新实例</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.ConfigureIAppender">
            <summary>设置 IBasicRepositoryConfigurator.Configure(IAppender appender) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.l4::log4net#Repository#IBasicRepositoryConfigurator#Configure(log4net.Appender.IAppender)">
            <summary>设置 IBasicRepositoryConfigurator.Configure(IAppender appender) 的 存根</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubILoggerRepository">
            <summary>log4net.Repository.ILoggerRepository 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.#ctor">
            <summary>初始化 type StubILoggerRepository 的新实例</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToConfigured">
            <summary>附加委托以将 StubILoggerRepository.Configured 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToName">
            <summary>附加委托以将 StubILoggerRepository.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToThreshold">
            <summary>附加委托以将 StubILoggerRepository.Threshold 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfiguredGet">
            <summary>设置 ILoggerRepository.get_Configured() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfiguredSetBoolean">
            <summary>设置 ILoggerRepository.set_Configured(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ExistsString">
            <summary>设置 ILoggerRepository.Exists(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetAppenders">
            <summary>设置 ILoggerRepository.GetAppenders() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetCurrentLoggers">
            <summary>设置 ILoggerRepository.GetCurrentLoggers() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetLoggerString">
            <summary>设置 ILoggerRepository.GetLogger(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.LevelMapGet">
            <summary>设置 ILoggerRepository.get_LevelMap() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.LogLoggingEvent">
            <summary>设置 ILoggerRepository.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.NameGet">
            <summary>设置 ILoggerRepository.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.NameSetString">
            <summary>设置 ILoggerRepository.set_Name(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.PluginMapGet">
            <summary>设置 ILoggerRepository.get_PluginMap() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.PropertiesGet">
            <summary>设置 ILoggerRepository.get_Properties() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.RendererMapGet">
            <summary>设置 ILoggerRepository.get_RendererMap() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ResetConfiguration">
            <summary>设置 ILoggerRepository.ResetConfiguration() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.Shutdown">
            <summary>设置 ILoggerRepository.Shutdown() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ThresholdGet">
            <summary>设置 ILoggerRepository.get_Threshold() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ThresholdSetLevel">
            <summary>设置 ILoggerRepository.set_Threshold(Level value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Exists(System.String)">
            <summary>设置 ILoggerRepository.Exists(String name) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#GetAppenders">
            <summary>设置 ILoggerRepository.GetAppenders() 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#GetCurrentLoggers">
            <summary>设置 ILoggerRepository.GetCurrentLoggers() 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#GetLogger(System.String)">
            <summary>设置 ILoggerRepository.GetLogger(String name) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Log(log4net.Core.LoggingEvent)">
            <summary>设置 ILoggerRepository.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#ResetConfiguration">
            <summary>设置 ILoggerRepository.ResetConfiguration() 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Shutdown">
            <summary>设置 ILoggerRepository.Shutdown() 的 存根</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Configured">
            <summary>设置 ILoggerRepository.get_Configured() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#LevelMap">
            <summary>设置 ILoggerRepository.get_LevelMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Name">
            <summary>设置 ILoggerRepository.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#PluginMap">
            <summary>设置 ILoggerRepository.get_PluginMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Properties">
            <summary>设置 ILoggerRepository.get_Properties() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#RendererMap">
            <summary>设置 ILoggerRepository.get_RendererMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.l4::log4net#Repository#ILoggerRepository#Threshold">
            <summary>设置 ILoggerRepository.get_Threshold() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator">
            <summary>log4net.Repository.IXmlRepositoryConfigurator 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.#ctor">
            <summary>初始化 type StubIXmlRepositoryConfigurator 的新实例</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.ConfigureXmlElement">
            <summary>设置 IXmlRepositoryConfigurator.Configure(XmlElement element) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.l4::log4net#Repository#IXmlRepositoryConfigurator#Configure(System.Xml.XmlElement)">
            <summary>设置 IXmlRepositoryConfigurator.Configure(XmlElement element) 的 存根</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubLoggerRepositorySkeleton">
            <summary>log4net.Repository.LoggerRepositorySkeleton 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AddRenderer(System.Type,log4net.ObjectRenderer.IObjectRenderer)">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AddRendererTypeIObjectRenderer">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToConfigured">
            <summary>附加委托以将 StubLoggerRepositorySkeleton.Configured 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToName">
            <summary>附加委托以将 StubLoggerRepositorySkeleton.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToThreshold">
            <summary>附加委托以将 StubLoggerRepositorySkeleton.Threshold 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfiguredGet">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfiguredSetBoolean">
            <summary>设置 LoggerRepositorySkeleton.set_Configured(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Exists(System.String)">
            <summary>设置 LoggerRepositorySkeleton.Exists(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ExistsString">
            <summary>设置 LoggerRepositorySkeleton.Exists(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetAppenders">
            <summary>设置 LoggerRepositorySkeleton.GetAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetAppenders01">
            <summary>设置 LoggerRepositorySkeleton.GetAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetCurrentLoggers">
            <summary>设置 LoggerRepositorySkeleton.GetCurrentLoggers() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetCurrentLoggers01">
            <summary>设置 LoggerRepositorySkeleton.GetCurrentLoggers() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetLogger(System.String)">
            <summary>设置 LoggerRepositorySkeleton.GetLogger(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetLoggerString">
            <summary>设置 LoggerRepositorySkeleton.GetLogger(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InitializeStub">
            <summary>初始化 type StubLoggerRepositorySkeleton 的新实例</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LevelMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Log(log4net.Core.LoggingEvent)">
            <summary>设置 LoggerRepositorySkeleton.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LogLoggingEvent">
            <summary>设置 LoggerRepositorySkeleton.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.NameGet">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.NameSetString">
            <summary>设置 LoggerRepositorySkeleton.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationChanged(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationReset(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationResetEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnShutdown(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnShutdownEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.PluginMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.RendererMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ResetConfiguration">
            <summary>设置 LoggerRepositorySkeleton.ResetConfiguration() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ResetConfiguration01">
            <summary>设置 LoggerRepositorySkeleton.ResetConfiguration() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Shutdown">
            <summary>设置 LoggerRepositorySkeleton.Shutdown() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Shutdown01">
            <summary>设置 LoggerRepositorySkeleton.Shutdown() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ThresholdGet">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ThresholdSetLevel">
            <summary>设置 LoggerRepositorySkeleton.set_Threshold(Level value) 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Configured">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LevelMap">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Name">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.PluginMap">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.RendererMap">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Threshold">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimHierarchy">
            <summary>log4net.Repository.Hierarchy.Hierarchy 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.#ctor(log4net.Repository.Hierarchy.Hierarchy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.IBasicRepositoryConfigurator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.ILoggerRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.IXmlRepositoryConfigurator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BasicRepositoryConfigureIAppender">
            <summary>设置 Hierarchy.BasicRepositoryConfigure(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Clear">
            <summary>设置 Hierarchy.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.CollectAppenderArrayListIAppender">
            <summary>设置 Hierarchy.CollectAppender(ArrayList appenderList, IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.CollectAppendersArrayListIAppenderAttachable">
            <summary>设置 Hierarchy.CollectAppenders(ArrayList appenderList, IAppenderAttachable container) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Constructor">
            <summary>设置 Hierarchy.Hierarchy() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorILoggerFactory">
            <summary>设置 Hierarchy.Hierarchy(ILoggerFactory loggerFactory) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorPropertiesDictionary">
            <summary>设置 Hierarchy.Hierarchy(PropertiesDictionary properties) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorPropertiesDictionaryILoggerFactory">
            <summary>设置 Hierarchy.Hierarchy(PropertiesDictionary properties, ILoggerFactory loggerFactory) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.EmittedNoAppenderWarningGet">
            <summary>设置 Hierarchy.get_EmittedNoAppenderWarning() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.EmittedNoAppenderWarningSetBoolean">
            <summary>设置 Hierarchy.set_EmittedNoAppenderWarning(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ExistsString">
            <summary>设置 Hierarchy.Exists(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetAppenders">
            <summary>设置 Hierarchy.GetAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetCurrentLoggers">
            <summary>设置 Hierarchy.GetCurrentLoggers() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetLoggerString">
            <summary>设置 Hierarchy.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetLoggerStringILoggerFactory">
            <summary>设置 Hierarchy.GetLogger(String name, ILoggerFactory factory) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.IsDisabledLevel">
            <summary>设置 Hierarchy.IsDisabled(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LogLoggingEvent">
            <summary>设置 Hierarchy.Log(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerCreatedEventAddLoggerCreationEventHandler">
            <summary>设置 Hierarchy.add_LoggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>设置 Hierarchy.remove_LoggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerFactoryGet">
            <summary>设置 Hierarchy.get_LoggerFactory() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerFactorySetILoggerFactory">
            <summary>设置 Hierarchy.set_LoggerFactory(ILoggerFactory value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.OnLoggerCreationEventLogger">
            <summary>设置 Hierarchy.OnLoggerCreationEvent(Logger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ResetConfiguration">
            <summary>设置 Hierarchy.ResetConfiguration() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.RootGet">
            <summary>设置 Hierarchy.get_Root() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Shutdown">
            <summary>设置 Hierarchy.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.UpdateParentsLogger">
            <summary>设置 Hierarchy.UpdateParents(Logger log) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.XmlRepositoryConfigureXmlElement">
            <summary>设置 Hierarchy.XmlRepositoryConfigure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppender">
            <summary>设置 Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.log4netRepositoryIXmlRepositoryConfiguratorConfigureXmlElement">
            <summary>设置 Hierarchy.log4net.Repository.IXmlRepositoryConfigurator.Configure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.m_loggerCreatedEventAddLoggerCreationEventHandler">
            <summary>设置 Hierarchy.add_m_loggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.m_loggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>设置 Hierarchy.remove_m_loggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.BasicRepositoryConfigureIAppender">
            <summary>设置 Hierarchy.BasicRepositoryConfigure(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.Clear">
            <summary>设置 Hierarchy.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.EmittedNoAppenderWarningGet">
            <summary>设置 Hierarchy.get_EmittedNoAppenderWarning() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.EmittedNoAppenderWarningSetBoolean">
            <summary>设置 Hierarchy.set_EmittedNoAppenderWarning(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.ExistsString">
            <summary>设置 Hierarchy.Exists(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetAppenders">
            <summary>设置 Hierarchy.GetAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetCurrentLoggers">
            <summary>设置 Hierarchy.GetCurrentLoggers() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetLoggerString">
            <summary>设置 Hierarchy.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetLoggerStringILoggerFactory">
            <summary>设置 Hierarchy.GetLogger(String name, ILoggerFactory factory) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.IsDisabledLevel">
            <summary>设置 Hierarchy.IsDisabled(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LogLoggingEvent">
            <summary>设置 Hierarchy.Log(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerCreatedEventAddLoggerCreationEventHandler">
            <summary>设置 Hierarchy.add_LoggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>设置 Hierarchy.remove_LoggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerFactoryGet">
            <summary>设置 Hierarchy.get_LoggerFactory() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerFactorySetILoggerFactory">
            <summary>设置 Hierarchy.set_LoggerFactory(ILoggerFactory value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.OnLoggerCreationEventLogger">
            <summary>设置 Hierarchy.OnLoggerCreationEvent(Logger logger) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.ResetConfiguration">
            <summary>设置 Hierarchy.ResetConfiguration() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.RootGet">
            <summary>设置 Hierarchy.get_Root() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.Shutdown">
            <summary>设置 Hierarchy.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.UpdateParentsLogger">
            <summary>设置 Hierarchy.UpdateParents(Logger log) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.XmlRepositoryConfigureXmlElement">
            <summary>设置 Hierarchy.XmlRepositoryConfigure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppender">
            <summary>设置 Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.log4netRepositoryIXmlRepositoryConfiguratorConfigureXmlElement">
            <summary>设置 Hierarchy.log4net.Repository.IXmlRepositoryConfigurator.Configure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.m_loggerCreatedEventAddLoggerCreationEventHandler">
            <summary>设置 Hierarchy.add_m_loggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.m_loggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>设置 Hierarchy.remove_m_loggerCreatedEvent(LoggerCreationEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLogger">
            <summary>log4net.Repository.Hierarchy.Logger 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.#ctor(log4net.Repository.Hierarchy.Logger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.Bind(log4net.Core.IAppenderAttachable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.Bind(log4net.Core.ILogger)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AddAppenderIAppender">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AdditivityGet">
            <summary>设置 Logger.get_Additivity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AdditivitySetBoolean">
            <summary>设置 Logger.set_Additivity(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AppendersGet">
            <summary>设置 Logger.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.CallAppendersLoggingEvent">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.CloseNestedAppenders">
            <summary>设置 Logger.CloseNestedAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ConstructorString">
            <summary>设置 Logger.Logger(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.EffectiveLevelGet">
            <summary>设置 Logger.get_EffectiveLevel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ForcedLogLoggingEvent">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ForcedLogTypeLevelObjectException">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.GetAppenderString">
            <summary>设置 Logger.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.HierarchyGet">
            <summary>设置 Logger.get_Hierarchy() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.HierarchySetHierarchy">
            <summary>设置 Logger.set_Hierarchy(Hierarchy value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.IsEnabledForLevel">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LevelGet">
            <summary>设置 Logger.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LevelSetLevel">
            <summary>设置 Logger.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogLevelObjectException">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogLoggingEvent">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogTypeLevelObjectException">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.NameGet">
            <summary>设置 Logger.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ParentGet">
            <summary>设置 Logger.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ParentSetLogger">
            <summary>设置 Logger.set_Parent(Logger value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAllAppenders">
            <summary>设置 Logger.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAppenderIAppender">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAppenderString">
            <summary>设置 Logger.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RepositoryGet">
            <summary>设置 Logger.get_Repository() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.StaticConstructor">
            <summary>设置 Logger.Logger() 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AddAppenderIAppender">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AdditivityGet">
            <summary>设置 Logger.get_Additivity() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AdditivitySetBoolean">
            <summary>设置 Logger.set_Additivity(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AppendersGet">
            <summary>设置 Logger.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.CallAppendersLoggingEvent">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.CloseNestedAppenders">
            <summary>设置 Logger.CloseNestedAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.EffectiveLevelGet">
            <summary>设置 Logger.get_EffectiveLevel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ForcedLogLoggingEvent">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ForcedLogTypeLevelObjectException">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.GetAppenderString">
            <summary>设置 Logger.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.HierarchyGet">
            <summary>设置 Logger.get_Hierarchy() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.HierarchySetHierarchy">
            <summary>设置 Logger.set_Hierarchy(Hierarchy value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.IsEnabledForLevel">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LevelGet">
            <summary>设置 Logger.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LevelSetLevel">
            <summary>设置 Logger.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogLevelObjectException">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogLoggingEvent">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogTypeLevelObjectException">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.NameGet">
            <summary>设置 Logger.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ParentGet">
            <summary>设置 Logger.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ParentSetLogger">
            <summary>设置 Logger.set_Parent(Logger value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAllAppenders">
            <summary>设置 Logger.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAppenderIAppender">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAppenderString">
            <summary>设置 Logger.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RepositoryGet">
            <summary>设置 Logger.get_Repository() 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs">
            <summary>log4net.Repository.Hierarchy.LoggerCreationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.#ctor(log4net.Repository.Hierarchy.LoggerCreationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.ConstructorLogger">
            <summary>设置 LoggerCreationEventArgs.LoggerCreationEventArgs(Logger log) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.LoggerGet">
            <summary>设置 LoggerCreationEventArgs.get_Logger() 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.AllInstances.LoggerGet">
            <summary>设置 LoggerCreationEventArgs.get_Logger() 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimRootLogger">
            <summary>log4net.Repository.Hierarchy.RootLogger 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.#ctor(log4net.Repository.Hierarchy.RootLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Bind(log4net.Core.IAppenderAttachable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Bind(log4net.Core.ILogger)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.ConstructorLevel">
            <summary>设置 RootLogger.RootLogger(Level level) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.EffectiveLevelGet">
            <summary>设置 RootLogger.get_EffectiveLevel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.LevelGet">
            <summary>设置 RootLogger.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.LevelSetLevel">
            <summary>设置 RootLogger.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.EffectiveLevelGet">
            <summary>设置 RootLogger.get_EffectiveLevel() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.LevelGet">
            <summary>设置 RootLogger.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.LevelSetLevel">
            <summary>设置 RootLogger.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator">
            <summary>log4net.Repository.Hierarchy.XmlHierarchyConfigurator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.#ctor(log4net.Repository.Hierarchy.XmlHierarchyConfigurator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConfigureXmlElement">
            <summary>设置 XmlHierarchyConfigurator.Configure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConstructorHierarchy">
            <summary>设置 XmlHierarchyConfigurator.XmlHierarchyConfigurator(Hierarchy hierarchy) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConvertStringToTypeString">
            <summary>设置 XmlHierarchyConfigurator.ConvertStringTo(Type type, String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.CreateObjectFromXmlXmlElementTypeType">
            <summary>设置 XmlHierarchyConfigurator.CreateObjectFromXml(XmlElement element, Type defaultTargetType, Type typeConstraint) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.FindAppenderByReferenceXmlElement">
            <summary>设置 XmlHierarchyConfigurator.FindAppenderByReference(XmlElement appenderRef) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.FindMethodInfoTypeString">
            <summary>设置 XmlHierarchyConfigurator.FindMethodInfo(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.HasAttributesOrElementsXmlElement">
            <summary>设置 XmlHierarchyConfigurator.HasAttributesOrElements(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.IsTypeConstructibleType">
            <summary>设置 XmlHierarchyConfigurator.IsTypeConstructible(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseAppenderXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseAppender(XmlElement appenderElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseChildrenOfLoggerElementXmlElementLoggerBoolean">
            <summary>设置 XmlHierarchyConfigurator.ParseChildrenOfLoggerElement(XmlElement catElement, Logger log, Boolean isRoot) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseLevelXmlElementLoggerBoolean">
            <summary>设置 XmlHierarchyConfigurator.ParseLevel(XmlElement element, Logger log, Boolean isRoot) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseLoggerXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseLogger(XmlElement loggerElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseRendererXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseRenderer(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseRootXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseRoot(XmlElement rootElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.SetParameterXmlElementObject">
            <summary>设置 XmlHierarchyConfigurator.SetParameter(XmlElement element, Object target) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ConfigureXmlElement">
            <summary>设置 XmlHierarchyConfigurator.Configure(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ConvertStringToTypeString">
            <summary>设置 XmlHierarchyConfigurator.ConvertStringTo(Type type, String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.CreateObjectFromXmlXmlElementTypeType">
            <summary>设置 XmlHierarchyConfigurator.CreateObjectFromXml(XmlElement element, Type defaultTargetType, Type typeConstraint) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.FindAppenderByReferenceXmlElement">
            <summary>设置 XmlHierarchyConfigurator.FindAppenderByReference(XmlElement appenderRef) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.FindMethodInfoTypeString">
            <summary>设置 XmlHierarchyConfigurator.FindMethodInfo(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.HasAttributesOrElementsXmlElement">
            <summary>设置 XmlHierarchyConfigurator.HasAttributesOrElements(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseAppenderXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseAppender(XmlElement appenderElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseChildrenOfLoggerElementXmlElementLoggerBoolean">
            <summary>设置 XmlHierarchyConfigurator.ParseChildrenOfLoggerElement(XmlElement catElement, Logger log, Boolean isRoot) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseLevelXmlElementLoggerBoolean">
            <summary>设置 XmlHierarchyConfigurator.ParseLevel(XmlElement element, Logger log, Boolean isRoot) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseLoggerXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseLogger(XmlElement loggerElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseRendererXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseRenderer(XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseRootXmlElement">
            <summary>设置 XmlHierarchyConfigurator.ParseRoot(XmlElement rootElement) 的 填充码</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.SetParameterXmlElementObject">
            <summary>设置 XmlHierarchyConfigurator.SetParameter(XmlElement element, Object target) 的 填充码</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubHierarchy">
            <summary>log4net.Repository.Hierarchy.Hierarchy 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Repository.Hierarchy.ILoggerFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Util.PropertiesDictionary,log4net.Repository.Hierarchy.ILoggerFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AddRenderer(System.Type,log4net.ObjectRenderer.IObjectRenderer)">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AddRendererTypeIObjectRenderer">
            <summary>设置 LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToConfigured">
            <summary>附加委托以将 StubHierarchy.Configured 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToName">
            <summary>附加委托以将 StubHierarchy.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToThreshold">
            <summary>附加委托以将 StubHierarchy.Threshold 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfiguredGet">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfiguredSetBoolean">
            <summary>设置 LoggerRepositorySkeleton.set_Configured(Boolean value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Exists(System.String)">
            <summary>设置 Hierarchy.Exists(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ExistsString">
            <summary>设置 Hierarchy.Exists(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetAppenders">
            <summary>设置 Hierarchy.GetAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetAppenders01">
            <summary>设置 Hierarchy.GetAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetCurrentLoggers">
            <summary>设置 Hierarchy.GetCurrentLoggers() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetCurrentLoggers01">
            <summary>设置 Hierarchy.GetCurrentLoggers() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetLogger(System.String)">
            <summary>设置 Hierarchy.GetLogger(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetLoggerString">
            <summary>设置 Hierarchy.GetLogger(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InitializeStub">
            <summary>初始化 type StubHierarchy 的新实例</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LevelMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Log(log4net.Core.LoggingEvent)">
            <summary>设置 Hierarchy.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LogLoggingEvent">
            <summary>设置 Hierarchy.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.NameGet">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.NameSetString">
            <summary>设置 LoggerRepositorySkeleton.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationChanged(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationChangedEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationReset(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationResetEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnLoggerCreationEvent(log4net.Repository.Hierarchy.Logger)">
            <summary>设置 Hierarchy.OnLoggerCreationEvent(Logger logger) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnLoggerCreationEventLogger">
            <summary>设置 Hierarchy.OnLoggerCreationEvent(Logger logger) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnShutdown(System.EventArgs)">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnShutdownEventArgs">
            <summary>设置 LoggerRepositorySkeleton.OnShutdown(EventArgs e) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.PluginMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.RendererMapGet">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ResetConfiguration">
            <summary>设置 Hierarchy.ResetConfiguration() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ResetConfiguration01">
            <summary>设置 Hierarchy.ResetConfiguration() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Shutdown">
            <summary>设置 Hierarchy.Shutdown() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Shutdown01">
            <summary>设置 Hierarchy.Shutdown() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ThresholdGet">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ThresholdSetLevel">
            <summary>设置 LoggerRepositorySkeleton.set_Threshold(Level value) 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Configured">
            <summary>设置 LoggerRepositorySkeleton.get_Configured() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LevelMap">
            <summary>设置 LoggerRepositorySkeleton.get_LevelMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Name">
            <summary>设置 LoggerRepositorySkeleton.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.PluginMap">
            <summary>设置 LoggerRepositorySkeleton.get_PluginMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.RendererMap">
            <summary>设置 LoggerRepositorySkeleton.get_RendererMap() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Threshold">
            <summary>设置 LoggerRepositorySkeleton.get_Threshold() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory">
            <summary>log4net.Repository.Hierarchy.ILoggerFactory 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.#ctor">
            <summary>初始化 type StubILoggerFactory 的新实例</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.CreateLoggerString">
            <summary>设置 ILoggerFactory.CreateLogger(String name) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.l4::log4net#Repository#Hierarchy#ILoggerFactory#CreateLogger(System.String)">
            <summary>设置 ILoggerFactory.CreateLogger(String name) 的 存根</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubLogger">
            <summary>log4net.Repository.Hierarchy.Logger 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AddAppender(log4net.Appender.IAppender)">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AddAppenderIAppender">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AdditivityGet">
            <summary>设置 Logger.get_Additivity() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AdditivitySetBoolean">
            <summary>设置 Logger.set_Additivity(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AppendersGet">
            <summary>设置 Logger.get_Appenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToAdditivity">
            <summary>附加委托以将 StubLogger.Additivity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToHierarchy">
            <summary>附加委托以将 StubLogger.Hierarchy 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToLevel">
            <summary>附加委托以将 StubLogger.Level 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToParent">
            <summary>附加委托以将 StubLogger.Parent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.CallAppenders(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.CallAppendersLoggingEvent">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.CloseNestedAppenders">
            <summary>设置 Logger.CloseNestedAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.CloseNestedAppenders01">
            <summary>设置 Logger.CloseNestedAppenders() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.EffectiveLevelGet">
            <summary>设置 Logger.get_EffectiveLevel() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLog(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLog(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLogLoggingEvent">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLogTypeLevelObjectException">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.GetAppender(System.String)">
            <summary>设置 Logger.GetAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.GetAppenderString">
            <summary>设置 Logger.GetAppender(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.HierarchyGet">
            <summary>设置 Logger.get_Hierarchy() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.HierarchySetHierarchy">
            <summary>设置 Logger.set_Hierarchy(Hierarchy value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.InitializeStub">
            <summary>初始化 type StubLogger 的新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.IsEnabledFor(log4net.Core.Level)">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.IsEnabledForLevel">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LevelGet">
            <summary>设置 Logger.get_Level() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LevelSetLevel">
            <summary>设置 Logger.set_Level(Level value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogLevelObjectException">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogLoggingEvent">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogTypeLevelObjectException">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.NameGet">
            <summary>设置 Logger.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ParentGet">
            <summary>设置 Logger.get_Parent() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ParentSetLogger">
            <summary>设置 Logger.set_Parent(Logger value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAllAppenders">
            <summary>设置 Logger.RemoveAllAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAllAppenders01">
            <summary>设置 Logger.RemoveAllAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppender(log4net.Appender.IAppender)">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppender(System.String)">
            <summary>设置 Logger.RemoveAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppenderIAppender">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppenderString">
            <summary>设置 Logger.RemoveAppender(String name) 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Additivity">
            <summary>设置 Logger.get_Additivity() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Appenders">
            <summary>设置 Logger.get_Appenders() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.EffectiveLevel">
            <summary>设置 Logger.get_EffectiveLevel() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Hierarchy">
            <summary>设置 Logger.get_Hierarchy() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Level">
            <summary>设置 Logger.get_Level() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Name">
            <summary>设置 Logger.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Parent">
            <summary>设置 Logger.get_Parent() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs">
            <summary>log4net.Repository.Hierarchy.LoggerCreationEventArgs 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.#ctor(log4net.Repository.Hierarchy.Logger)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InitializeStub">
            <summary>初始化 type StubLoggerCreationEventArgs 的新实例</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubRootLogger">
            <summary>log4net.Repository.Hierarchy.RootLogger 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.#ctor(log4net.Core.Level)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AddAppender(log4net.Appender.IAppender)">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AddAppenderIAppender">
            <summary>设置 Logger.AddAppender(IAppender newAppender) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AdditivityGet">
            <summary>设置 Logger.get_Additivity() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AdditivitySetBoolean">
            <summary>设置 Logger.set_Additivity(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AppendersGet">
            <summary>设置 Logger.get_Appenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToAdditivity">
            <summary>附加委托以将 StubRootLogger.Additivity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToHierarchy">
            <summary>附加委托以将 StubRootLogger.Hierarchy 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToLevel">
            <summary>附加委托以将 StubRootLogger.Level 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToParent">
            <summary>附加委托以将 StubRootLogger.Parent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallAppenders(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallAppendersLoggingEvent">
            <summary>设置 Logger.CallAppenders(LoggingEvent loggingEvent) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CloseNestedAppenders">
            <summary>设置 Logger.CloseNestedAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CloseNestedAppenders01">
            <summary>设置 Logger.CloseNestedAppenders() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.EffectiveLevelGet">
            <summary>设置 RootLogger.get_EffectiveLevel() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLog(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLog(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLogLoggingEvent">
            <summary>设置 Logger.ForcedLog(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLogTypeLevelObjectException">
            <summary>设置 Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.GetAppender(System.String)">
            <summary>设置 Logger.GetAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.GetAppenderString">
            <summary>设置 Logger.GetAppender(String name) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.HierarchyGet">
            <summary>设置 Logger.get_Hierarchy() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.HierarchySetHierarchy">
            <summary>设置 Logger.set_Hierarchy(Hierarchy value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InitializeStub">
            <summary>初始化 type StubRootLogger 的新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.IsEnabledFor(log4net.Core.Level)">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.IsEnabledForLevel">
            <summary>设置 Logger.IsEnabledFor(Level level) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LevelGet">
            <summary>设置 RootLogger.get_Level() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LevelSetLevel">
            <summary>设置 RootLogger.set_Level(Level value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(log4net.Core.LoggingEvent)">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogLevelObjectException">
            <summary>设置 Logger.Log(Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogLoggingEvent">
            <summary>设置 Logger.Log(LoggingEvent logEvent) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogTypeLevelObjectException">
            <summary>设置 Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.NameGet">
            <summary>设置 Logger.get_Name() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ParentGet">
            <summary>设置 Logger.get_Parent() 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ParentSetLogger">
            <summary>设置 Logger.set_Parent(Logger value) 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAllAppenders">
            <summary>设置 Logger.RemoveAllAppenders() 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAllAppenders01">
            <summary>设置 Logger.RemoveAllAppenders() 的 stub</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppender(log4net.Appender.IAppender)">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 存根</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppender(System.String)">
            <summary>设置 Logger.RemoveAppender(String name) 的 存根</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppenderIAppender">
            <summary>设置 Logger.RemoveAppender(IAppender appender) 的 stub</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppenderString">
            <summary>设置 Logger.RemoveAppender(String name) 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Additivity">
            <summary>设置 Logger.get_Additivity() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Appenders">
            <summary>设置 Logger.get_Appenders() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.EffectiveLevel">
            <summary>设置 RootLogger.get_EffectiveLevel() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Hierarchy">
            <summary>设置 Logger.get_Hierarchy() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Level">
            <summary>设置 RootLogger.get_Level() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Name">
            <summary>设置 Logger.get_Name() 的 stub</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Parent">
            <summary>设置 Logger.get_Parent() 的 stub</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator">
            <summary>log4net.Repository.Hierarchy.XmlHierarchyConfigurator 的存根类型</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.#ctor(log4net.Repository.Hierarchy.Hierarchy)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InitializeStub">
            <summary>初始化 type StubXmlHierarchyConfigurator 的新实例</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimAppenderAttachedImpl">
            <summary>log4net.Util.AppenderAttachedImpl 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.#ctor(log4net.Util.AppenderAttachedImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.Bind(log4net.Core.IAppenderAttachable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AddAppenderIAppender">
            <summary>设置 AppenderAttachedImpl.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendLoopOnAppendersLoggingEvent">
            <summary>设置 AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendLoopOnAppendersLoggingEventArray">
            <summary>设置 AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendersGet">
            <summary>设置 AppenderAttachedImpl.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.CallAppendIAppenderLoggingEventArray">
            <summary>设置 AppenderAttachedImpl.CallAppend(IAppender appender, LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.Constructor">
            <summary>设置 AppenderAttachedImpl.AppenderAttachedImpl() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.GetAppenderString">
            <summary>设置 AppenderAttachedImpl.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAllAppenders">
            <summary>设置 AppenderAttachedImpl.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAppenderIAppender">
            <summary>设置 AppenderAttachedImpl.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAppenderString">
            <summary>设置 AppenderAttachedImpl.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AddAppenderIAppender">
            <summary>设置 AppenderAttachedImpl.AddAppender(IAppender newAppender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendLoopOnAppendersLoggingEvent">
            <summary>设置 AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendLoopOnAppendersLoggingEventArray">
            <summary>设置 AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent[] loggingEvents) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendersGet">
            <summary>设置 AppenderAttachedImpl.get_Appenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.GetAppenderString">
            <summary>设置 AppenderAttachedImpl.GetAppender(String name) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAllAppenders">
            <summary>设置 AppenderAttachedImpl.RemoveAllAppenders() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAppenderIAppender">
            <summary>设置 AppenderAttachedImpl.RemoveAppender(IAppender appender) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAppenderString">
            <summary>设置 AppenderAttachedImpl.RemoveAppender(String name) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCompositeProperties">
            <summary>log4net.Util.CompositeProperties 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.#ctor(log4net.Util.CompositeProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AddReadOnlyPropertiesDictionary">
            <summary>设置 CompositeProperties.Add(ReadOnlyPropertiesDictionary properties) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Constructor">
            <summary>设置 CompositeProperties.CompositeProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Flatten">
            <summary>设置 CompositeProperties.Flatten() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.ItemGetString">
            <summary>设置 CompositeProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCompositeProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.AddReadOnlyPropertiesDictionary">
            <summary>设置 CompositeProperties.Add(ReadOnlyPropertiesDictionary properties) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.Flatten">
            <summary>设置 CompositeProperties.Flatten() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.ItemGetString">
            <summary>设置 CompositeProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimContextPropertiesBase">
            <summary>log4net.Util.ContextPropertiesBase 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.#ctor(log4net.Util.ContextPropertiesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimContextPropertiesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimContextPropertiesBase.Constructor">
            <summary>设置 ContextPropertiesBase.ContextPropertiesBase() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimContextPropertiesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCountingQuietTextWriter">
            <summary>log4net.Util.CountingQuietTextWriter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.#ctor(log4net.Util.CountingQuietTextWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.ConstructorTextWriterIErrorHandler">
            <summary>设置 CountingQuietTextWriter.CountingQuietTextWriter(TextWriter writer, IErrorHandler errorHandler) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.CountGet">
            <summary>设置 CountingQuietTextWriter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.CountSetInt64">
            <summary>设置 CountingQuietTextWriter.set_Count(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteChar">
            <summary>设置 CountingQuietTextWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>设置 CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteString">
            <summary>设置 CountingQuietTextWriter.Write(String str) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.CountGet">
            <summary>设置 CountingQuietTextWriter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.CountSetInt64">
            <summary>设置 CountingQuietTextWriter.set_Count(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteChar">
            <summary>设置 CountingQuietTextWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>设置 CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteString">
            <summary>设置 CountingQuietTextWriter.Write(String str) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCyclicBuffer">
            <summary>log4net.Util.CyclicBuffer 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.#ctor(log4net.Util.CyclicBuffer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AppendLoggingEvent">
            <summary>设置 CyclicBuffer.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.Clear">
            <summary>设置 CyclicBuffer.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.ConstructorInt32">
            <summary>设置 CyclicBuffer.CyclicBuffer(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.ItemGetInt32">
            <summary>设置 CyclicBuffer.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.LengthGet">
            <summary>设置 CyclicBuffer.get_Length() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.MaxSizeGet">
            <summary>设置 CyclicBuffer.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.PopAll">
            <summary>设置 CyclicBuffer.PopAll() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.PopOldest">
            <summary>设置 CyclicBuffer.PopOldest() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.AppendLoggingEvent">
            <summary>设置 CyclicBuffer.Append(LoggingEvent loggingEvent) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.Clear">
            <summary>设置 CyclicBuffer.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.ItemGetInt32">
            <summary>设置 CyclicBuffer.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.LengthGet">
            <summary>设置 CyclicBuffer.get_Length() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.MaxSizeGet">
            <summary>设置 CyclicBuffer.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.PopAll">
            <summary>设置 CyclicBuffer.PopAll() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.PopOldest">
            <summary>设置 CyclicBuffer.PopOldest() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyCollection">
            <summary>log4net.Util.EmptyCollection 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.#ctor(log4net.Util.EmptyCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.Constructor">
            <summary>设置 EmptyCollection.EmptyCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.CopyToArrayInt32">
            <summary>设置 EmptyCollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.CountGet">
            <summary>设置 EmptyCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.GetEnumerator">
            <summary>设置 EmptyCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.InstanceGet">
            <summary>设置 EmptyCollection.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.IsSynchronizedGet">
            <summary>设置 EmptyCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.StaticConstructor">
            <summary>设置 EmptyCollection.EmptyCollection() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.SyncRootGet">
            <summary>设置 EmptyCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.CopyToArrayInt32">
            <summary>设置 EmptyCollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.CountGet">
            <summary>设置 EmptyCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.GetEnumerator">
            <summary>设置 EmptyCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.IsSynchronizedGet">
            <summary>设置 EmptyCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.SyncRootGet">
            <summary>设置 EmptyCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyDictionary">
            <summary>log4net.Util.EmptyDictionary 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.#ctor(log4net.Util.EmptyDictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AddObjectObject">
            <summary>设置 EmptyDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Clear">
            <summary>设置 EmptyDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Constructor">
            <summary>设置 EmptyDictionary.EmptyDictionary() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ContainsObject">
            <summary>设置 EmptyDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.CopyToArrayInt32">
            <summary>设置 EmptyDictionary.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.CountGet">
            <summary>设置 EmptyDictionary.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.GetEnumerator">
            <summary>设置 EmptyDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.InstanceGet">
            <summary>设置 EmptyDictionary.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsFixedSizeGet">
            <summary>设置 EmptyDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsReadOnlyGet">
            <summary>设置 EmptyDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsSynchronizedGet">
            <summary>设置 EmptyDictionary.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ItemGetObject">
            <summary>设置 EmptyDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ItemSetObjectObject">
            <summary>设置 EmptyDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.KeysGet">
            <summary>设置 EmptyDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.RemoveObject">
            <summary>设置 EmptyDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.StaticConstructor">
            <summary>设置 EmptyDictionary.EmptyDictionary() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.SyncRootGet">
            <summary>设置 EmptyDictionary.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EmptyDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ValuesGet">
            <summary>设置 EmptyDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.AddObjectObject">
            <summary>设置 EmptyDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.Clear">
            <summary>设置 EmptyDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ContainsObject">
            <summary>设置 EmptyDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.CopyToArrayInt32">
            <summary>设置 EmptyDictionary.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.CountGet">
            <summary>设置 EmptyDictionary.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.GetEnumerator">
            <summary>设置 EmptyDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsFixedSizeGet">
            <summary>设置 EmptyDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsReadOnlyGet">
            <summary>设置 EmptyDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsSynchronizedGet">
            <summary>设置 EmptyDictionary.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ItemGetObject">
            <summary>设置 EmptyDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ItemSetObjectObject">
            <summary>设置 EmptyDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.KeysGet">
            <summary>设置 EmptyDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.RemoveObject">
            <summary>设置 EmptyDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.SyncRootGet">
            <summary>设置 EmptyDictionary.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EmptyDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ValuesGet">
            <summary>设置 EmptyDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimFormattingInfo">
            <summary>log4net.Util.FormattingInfo 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.#ctor(log4net.Util.FormattingInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.Constructor">
            <summary>设置 FormattingInfo.FormattingInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.ConstructorInt32Int32Boolean">
            <summary>设置 FormattingInfo.FormattingInfo(Int32 min, Int32 max, Boolean leftAlign) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.LeftAlignGet">
            <summary>设置 FormattingInfo.get_LeftAlign() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.LeftAlignSetBoolean">
            <summary>设置 FormattingInfo.set_LeftAlign(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MaxGet">
            <summary>设置 FormattingInfo.get_Max() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MaxSetInt32">
            <summary>设置 FormattingInfo.set_Max(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MinGet">
            <summary>设置 FormattingInfo.get_Min() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MinSetInt32">
            <summary>设置 FormattingInfo.set_Min(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimFormattingInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.LeftAlignGet">
            <summary>设置 FormattingInfo.get_LeftAlign() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.LeftAlignSetBoolean">
            <summary>设置 FormattingInfo.set_LeftAlign(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MaxGet">
            <summary>设置 FormattingInfo.get_Max() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MaxSetInt32">
            <summary>设置 FormattingInfo.set_Max(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MinGet">
            <summary>设置 FormattingInfo.get_Min() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MinSetInt32">
            <summary>设置 FormattingInfo.set_Min(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimGlobalContextProperties">
            <summary>log4net.Util.GlobalContextProperties 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.#ctor(log4net.Util.GlobalContextProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Clear">
            <summary>设置 GlobalContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Constructor">
            <summary>设置 GlobalContextProperties.GlobalContextProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.GetReadOnlyProperties">
            <summary>设置 GlobalContextProperties.GetReadOnlyProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.ItemGetString">
            <summary>设置 GlobalContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.ItemSetStringObject">
            <summary>设置 GlobalContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.RemoveString">
            <summary>设置 GlobalContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.Clear">
            <summary>设置 GlobalContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.GetReadOnlyProperties">
            <summary>设置 GlobalContextProperties.GetReadOnlyProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.ItemGetString">
            <summary>设置 GlobalContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.ItemSetStringObject">
            <summary>设置 GlobalContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.RemoveString">
            <summary>设置 GlobalContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMapping">
            <summary>log4net.Util.LevelMapping 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.#ctor(log4net.Util.LevelMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.ActivateOptions">
            <summary>设置 LevelMapping.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AddLevelMappingEntry">
            <summary>设置 LevelMapping.Add(LevelMappingEntry entry) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.Constructor">
            <summary>设置 LevelMapping.LevelMapping() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.LookupLevel">
            <summary>设置 LevelMapping.Lookup(Level level) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.ActivateOptions">
            <summary>设置 LevelMapping.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.AddLevelMappingEntry">
            <summary>设置 LevelMapping.Add(LevelMappingEntry entry) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.LookupLevel">
            <summary>设置 LevelMapping.Lookup(Level level) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMappingEntry">
            <summary>log4net.Util.LevelMappingEntry 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.#ctor(log4net.Util.LevelMappingEntry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.ActivateOptions">
            <summary>设置 LevelMappingEntry.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.Constructor">
            <summary>设置 LevelMappingEntry.LevelMappingEntry() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.LevelGet">
            <summary>设置 LevelMappingEntry.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.LevelSetLevel">
            <summary>设置 LevelMappingEntry.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.ActivateOptions">
            <summary>设置 LevelMappingEntry.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.LevelGet">
            <summary>设置 LevelMappingEntry.get_Level() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.LevelSetLevel">
            <summary>设置 LevelMappingEntry.set_Level(Level value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog">
            <summary>log4net.Util.LogLog 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.#ctor(log4net.Util.LogLog)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.Constructor">
            <summary>设置 LogLog.LogLog() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.DebugString">
            <summary>设置 LogLog.Debug(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.DebugStringException">
            <summary>设置 LogLog.Debug(String message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitErrorLineString">
            <summary>设置 LogLog.EmitErrorLine(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitOutLineString">
            <summary>设置 LogLog.EmitOutLine(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ErrorString">
            <summary>设置 LogLog.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ErrorStringException">
            <summary>设置 LogLog.Error(String message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.InternalDebuggingGet">
            <summary>设置 LogLog.get_InternalDebugging() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.InternalDebuggingSetBoolean">
            <summary>设置 LogLog.set_InternalDebugging(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsDebugEnabledGet">
            <summary>设置 LogLog.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsErrorEnabledGet">
            <summary>设置 LogLog.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsWarnEnabledGet">
            <summary>设置 LogLog.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.QuietModeGet">
            <summary>设置 LogLog.get_QuietMode() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.QuietModeSetBoolean">
            <summary>设置 LogLog.set_QuietMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.StaticConstructor">
            <summary>设置 LogLog.LogLog() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.WarnString">
            <summary>设置 LogLog.Warn(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.WarnStringException">
            <summary>设置 LogLog.Warn(String message, Exception exception) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextProperties">
            <summary>log4net.Util.LogicalThreadContextProperties 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.#ctor(log4net.Util.LogicalThreadContextProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Clear">
            <summary>设置 LogicalThreadContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Constructor">
            <summary>设置 LogicalThreadContextProperties.LogicalThreadContextProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.GetPropertiesBoolean">
            <summary>设置 LogicalThreadContextProperties.GetProperties(Boolean create) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.ItemGetString">
            <summary>设置 LogicalThreadContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.ItemSetStringObject">
            <summary>设置 LogicalThreadContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.RemoveString">
            <summary>设置 LogicalThreadContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.Clear">
            <summary>设置 LogicalThreadContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.GetPropertiesBoolean">
            <summary>设置 LogicalThreadContextProperties.GetProperties(Boolean create) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.ItemGetString">
            <summary>设置 LogicalThreadContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.ItemSetStringObject">
            <summary>设置 LogicalThreadContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.RemoveString">
            <summary>设置 LogicalThreadContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNativeError">
            <summary>log4net.Util.NativeError 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.#ctor(log4net.Util.NativeError)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.ConstructorInt32String">
            <summary>设置 NativeError.NativeError(Int32 number, String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetErrorInt32">
            <summary>设置 NativeError.GetError(Int32 number) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetErrorMessageInt32">
            <summary>设置 NativeError.GetErrorMessage(Int32 messageId) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetLastError">
            <summary>设置 NativeError.GetLastError() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.MessageGet">
            <summary>设置 NativeError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.NumberGet">
            <summary>设置 NativeError.get_Number() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.ToString">
            <summary>设置 NativeError.ToString() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNativeError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.MessageGet">
            <summary>设置 NativeError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.NumberGet">
            <summary>设置 NativeError.get_Number() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.ToString01">
            <summary>设置 NativeError.ToString() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullDictionaryEnumerator">
            <summary>log4net.Util.NullDictionaryEnumerator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.#ctor(log4net.Util.NullDictionaryEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Bind(System.Collections.IDictionaryEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Constructor">
            <summary>设置 NullDictionaryEnumerator.NullDictionaryEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.CurrentGet">
            <summary>设置 NullDictionaryEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.EntryGet">
            <summary>设置 NullDictionaryEnumerator.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.InstanceGet">
            <summary>设置 NullDictionaryEnumerator.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.KeyGet">
            <summary>设置 NullDictionaryEnumerator.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.MoveNext">
            <summary>设置 NullDictionaryEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Reset">
            <summary>设置 NullDictionaryEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.StaticConstructor">
            <summary>设置 NullDictionaryEnumerator.NullDictionaryEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.ValueGet">
            <summary>设置 NullDictionaryEnumerator.get_Value() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.CurrentGet">
            <summary>设置 NullDictionaryEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.EntryGet">
            <summary>设置 NullDictionaryEnumerator.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.KeyGet">
            <summary>设置 NullDictionaryEnumerator.get_Key() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.MoveNext">
            <summary>设置 NullDictionaryEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.Reset">
            <summary>设置 NullDictionaryEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.ValueGet">
            <summary>设置 NullDictionaryEnumerator.get_Value() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullEnumerator">
            <summary>log4net.Util.NullEnumerator 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.#ctor(log4net.Util.NullEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Constructor">
            <summary>设置 NullEnumerator.NullEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.CurrentGet">
            <summary>设置 NullEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.InstanceGet">
            <summary>设置 NullEnumerator.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.MoveNext">
            <summary>设置 NullEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Reset">
            <summary>设置 NullEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.StaticConstructor">
            <summary>设置 NullEnumerator.NullEnumerator() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.CurrentGet">
            <summary>设置 NullEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.MoveNext">
            <summary>设置 NullEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.Reset">
            <summary>设置 NullEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullSecurityContext">
            <summary>log4net.Util.NullSecurityContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.#ctor(log4net.Util.NullSecurityContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.Constructor">
            <summary>设置 NullSecurityContext.NullSecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.ImpersonateObject">
            <summary>设置 NullSecurityContext.Impersonate(Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.StaticConstructor">
            <summary>设置 NullSecurityContext.NullSecurityContext() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullSecurityContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.AllInstances.ImpersonateObject">
            <summary>设置 NullSecurityContext.Impersonate(Object state) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOnlyOnceErrorHandler">
            <summary>log4net.Util.OnlyOnceErrorHandler 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.#ctor(log4net.Util.OnlyOnceErrorHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Bind(log4net.Core.IErrorHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Constructor">
            <summary>设置 OnlyOnceErrorHandler.OnlyOnceErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ConstructorString">
            <summary>设置 OnlyOnceErrorHandler.OnlyOnceErrorHandler(String prefix) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorString">
            <summary>设置 OnlyOnceErrorHandler.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorStringException">
            <summary>设置 OnlyOnceErrorHandler.Error(String message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorStringExceptionErrorCode">
            <summary>设置 OnlyOnceErrorHandler.Error(String message, Exception e, ErrorCode errorCode) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.IsEnabledGet">
            <summary>设置 OnlyOnceErrorHandler.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorString">
            <summary>设置 OnlyOnceErrorHandler.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorStringException">
            <summary>设置 OnlyOnceErrorHandler.Error(String message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorStringExceptionErrorCode">
            <summary>设置 OnlyOnceErrorHandler.Error(String message, Exception e, ErrorCode errorCode) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.IsEnabledGet">
            <summary>设置 OnlyOnceErrorHandler.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOptionConverter">
            <summary>log4net.Util.OptionConverter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.#ctor(log4net.Util.OptionConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.CanConvertTypeToTypeType">
            <summary>设置 OptionConverter.CanConvertTypeTo(Type sourceType, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.Constructor">
            <summary>设置 OptionConverter.OptionConverter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ConvertStringToTypeString">
            <summary>设置 OptionConverter.ConvertStringTo(Type target, String txt) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ConvertTypeToObjectType">
            <summary>设置 OptionConverter.ConvertTypeTo(Object sourceInstance, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.InstantiateByClassNameStringTypeObject">
            <summary>设置 OptionConverter.InstantiateByClassName(String className, Type superClass, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ParseEnumTypeStringBoolean">
            <summary>设置 OptionConverter.ParseEnum(Type enumType, String value, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.SubstituteVariablesStringIDictionary">
            <summary>设置 OptionConverter.SubstituteVariables(String value, IDictionary props) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ToBooleanStringBoolean">
            <summary>设置 OptionConverter.ToBoolean(String argValue, Boolean defaultValue) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ToFileSizeStringInt64">
            <summary>设置 OptionConverter.ToFileSize(String argValue, Int64 defaultValue) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOptionConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternConverter">
            <summary>log4net.Util.PatternConverter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.#ctor(log4net.Util.PatternConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.Constructor">
            <summary>设置 PatternConverter.PatternConverter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormatTextWriterObject">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormattingInfoGet">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormattingInfoSetFormattingInfo">
            <summary>设置 PatternConverter.set_FormattingInfo(FormattingInfo value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.NextGet">
            <summary>设置 PatternConverter.get_Next() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.OptionGet">
            <summary>设置 PatternConverter.get_Option() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.OptionSetString">
            <summary>设置 PatternConverter.set_Option(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.SetNextPatternConverter">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.SpacePadTextWriterInt32">
            <summary>设置 PatternConverter.SpacePad(TextWriter writer, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.StaticConstructor">
            <summary>设置 PatternConverter.PatternConverter() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.WriteDictionaryTextWriterILoggerRepositoryIDictionary">
            <summary>设置 PatternConverter.WriteDictionary(TextWriter writer, ILoggerRepository repository, IDictionary value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.WriteObjectTextWriterILoggerRepositoryObject">
            <summary>设置 PatternConverter.WriteObject(TextWriter writer, ILoggerRepository repository, Object value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormatTextWriterObject">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormattingInfoGet">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormattingInfoSetFormattingInfo">
            <summary>设置 PatternConverter.set_FormattingInfo(FormattingInfo value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.NextGet">
            <summary>设置 PatternConverter.get_Next() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.OptionGet">
            <summary>设置 PatternConverter.get_Option() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.OptionSetString">
            <summary>设置 PatternConverter.set_Option(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.SetNextPatternConverter">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternParser">
            <summary>log4net.Util.PatternParser 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.#ctor(log4net.Util.PatternParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AddConverterPatternConverter">
            <summary>设置 PatternParser.AddConverter(PatternConverter pc) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.BuildCache">
            <summary>设置 PatternParser.BuildCache() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ConstructorString">
            <summary>设置 PatternParser.PatternParser(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.Parse">
            <summary>设置 PatternParser.Parse() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ParseInternalStringStringArray">
            <summary>设置 PatternParser.ParseInternal(String pattern, String[] matches) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.PatternConvertersGet">
            <summary>设置 PatternParser.get_PatternConverters() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ProcessConverterStringStringFormattingInfo">
            <summary>设置 PatternParser.ProcessConverter(String converterName, String option, FormattingInfo formattingInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ProcessLiteralString">
            <summary>设置 PatternParser.ProcessLiteral(String text) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.AddConverterPatternConverter">
            <summary>设置 PatternParser.AddConverter(PatternConverter pc) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.BuildCache">
            <summary>设置 PatternParser.BuildCache() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.Parse">
            <summary>设置 PatternParser.Parse() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ParseInternalStringStringArray">
            <summary>设置 PatternParser.ParseInternal(String pattern, String[] matches) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.PatternConvertersGet">
            <summary>设置 PatternParser.get_PatternConverters() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ProcessConverterStringStringFormattingInfo">
            <summary>设置 PatternParser.ProcessConverter(String converterName, String option, FormattingInfo formattingInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ProcessLiteralString">
            <summary>设置 PatternParser.ProcessLiteral(String text) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString">
            <summary>log4net.Util.PatternString 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.#ctor(log4net.Util.PatternString)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ActivateOptions">
            <summary>设置 PatternString.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AddConverterPatternStringConverterInfo">
            <summary>设置 PatternString.AddConverter(ConverterInfo converterInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AddConverterStringType">
            <summary>设置 PatternString.AddConverter(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Constructor">
            <summary>设置 PatternString.PatternString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConstructorString">
            <summary>设置 PatternString.PatternString(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConversionPatternGet">
            <summary>设置 PatternString.get_ConversionPattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConversionPatternSetString">
            <summary>设置 PatternString.set_ConversionPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.CreatePatternParserString">
            <summary>设置 PatternString.CreatePatternParser(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Format">
            <summary>设置 PatternString.Format() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.FormatTextWriter">
            <summary>设置 PatternString.Format(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.StaticConstructor">
            <summary>设置 PatternString.PatternString() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ActivateOptions">
            <summary>设置 PatternString.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.AddConverterPatternStringConverterInfo">
            <summary>设置 PatternString.AddConverter(ConverterInfo converterInfo) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.AddConverterStringType">
            <summary>设置 PatternString.AddConverter(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ConversionPatternGet">
            <summary>设置 PatternString.get_ConversionPattern() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ConversionPatternSetString">
            <summary>设置 PatternString.set_ConversionPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.CreatePatternParserString">
            <summary>设置 PatternString.CreatePatternParser(String pattern) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.Format">
            <summary>设置 PatternString.Format() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.FormatTextWriter">
            <summary>设置 PatternString.Format(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo">
            <summary>log4net.Util.PatternString+ConverterInfo 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.#ctor(log4net.Util.PatternString.ConverterInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.Constructor">
            <summary>设置 ConverterInfo.ConverterInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.NameGet">
            <summary>设置 ConverterInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.NameSetString">
            <summary>设置 ConverterInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.TypeGet">
            <summary>设置 ConverterInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.TypeSetType">
            <summary>设置 ConverterInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.AllInstances.NameGet">
            <summary>设置 ConverterInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.AllInstances.NameSetString">
            <summary>设置 ConverterInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.AllInstances.TypeGet">
            <summary>设置 ConverterInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ShimConverterInfo.AllInstances.TypeSetType">
            <summary>设置 ConverterInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertiesDictionary">
            <summary>log4net.Util.PropertiesDictionary 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Clear">
            <summary>设置 PropertiesDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Constructor">
            <summary>设置 PropertiesDictionary.PropertiesDictionary() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ConstructorReadOnlyPropertiesDictionary">
            <summary>设置 PropertiesDictionary.PropertiesDictionary(ReadOnlyPropertiesDictionary propertiesDictionary) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ConstructorSerializationInfoStreamingContext">
            <summary>设置 PropertiesDictionary.PropertiesDictionary(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemGetString">
            <summary>设置 PropertiesDictionary.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSetStringObject">
            <summary>设置 PropertiesDictionary.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSystemCollectionsIDictionarygetObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.KeysSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.RemoveString">
            <summary>设置 PropertiesDictionary.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SyncRootSystemCollectionsICollectionget">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryAddObjectObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryContainsObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryGetEnumerator">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryRemoveObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PropertiesDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ValuesSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.Clear">
            <summary>设置 PropertiesDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemGetString">
            <summary>设置 PropertiesDictionary.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSetStringObject">
            <summary>设置 PropertiesDictionary.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.RemoveString">
            <summary>设置 PropertiesDictionary.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 PropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PropertiesDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>设置 PropertiesDictionary.System.Collections.IDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimProtectCloseTextWriter">
            <summary>log4net.Util.ProtectCloseTextWriter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.#ctor(log4net.Util.ProtectCloseTextWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AttachTextWriter">
            <summary>设置 ProtectCloseTextWriter.Attach(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.Close">
            <summary>设置 ProtectCloseTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.ConstructorTextWriter">
            <summary>设置 ProtectCloseTextWriter.ProtectCloseTextWriter(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances.AttachTextWriter">
            <summary>设置 ProtectCloseTextWriter.Attach(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances.Close">
            <summary>设置 ProtectCloseTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimQuietTextWriter">
            <summary>log4net.Util.QuietTextWriter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.#ctor(log4net.Util.QuietTextWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.Close">
            <summary>设置 QuietTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ClosedGet">
            <summary>设置 QuietTextWriter.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ConstructorTextWriterIErrorHandler">
            <summary>设置 QuietTextWriter.QuietTextWriter(TextWriter writer, IErrorHandler errorHandler) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ErrorHandlerGet">
            <summary>设置 QuietTextWriter.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ErrorHandlerSetIErrorHandler">
            <summary>设置 QuietTextWriter.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteChar">
            <summary>设置 QuietTextWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>设置 QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteString">
            <summary>设置 QuietTextWriter.Write(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.Close">
            <summary>设置 QuietTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ClosedGet">
            <summary>设置 QuietTextWriter.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ErrorHandlerGet">
            <summary>设置 QuietTextWriter.get_ErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>设置 QuietTextWriter.set_ErrorHandler(IErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteChar">
            <summary>设置 QuietTextWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>设置 QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteString">
            <summary>设置 QuietTextWriter.Write(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary">
            <summary>log4net.Util.ReadOnlyPropertiesDictionary 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.#ctor(log4net.Util.ReadOnlyPropertiesDictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Clear">
            <summary>设置 ReadOnlyPropertiesDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Constructor">
            <summary>设置 ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ConstructorReadOnlyPropertiesDictionary">
            <summary>设置 ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary(ReadOnlyPropertiesDictionary propertiesDictionary) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ContainsString">
            <summary>设置 ReadOnlyPropertiesDictionary.Contains(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.CountGet">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.GetKeys">
            <summary>设置 ReadOnlyPropertiesDictionary.GetKeys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.InnerHashtableGet">
            <summary>设置 ReadOnlyPropertiesDictionary.get_InnerHashtable() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemGetString">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSetStringObject">
            <summary>设置 ReadOnlyPropertiesDictionary.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSystemCollectionsIDictionarygetObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.KeysSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SyncRootSystemCollectionsICollectionget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryAddObjectObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryContainsObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryGetEnumerator">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryRemoveObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ValuesSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.Clear">
            <summary>设置 ReadOnlyPropertiesDictionary.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ContainsString">
            <summary>设置 ReadOnlyPropertiesDictionary.Contains(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.CountGet">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.GetKeys">
            <summary>设置 ReadOnlyPropertiesDictionary.GetKeys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.InnerHashtableGet">
            <summary>设置 ReadOnlyPropertiesDictionary.get_InnerHashtable() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemGetString">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSetStringObject">
            <summary>设置 ReadOnlyPropertiesDictionary.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Contains(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Remove(Object key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>设置 ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Values() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReaderWriterLock">
            <summary>log4net.Util.ReaderWriterLock 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.#ctor(log4net.Util.ReaderWriterLock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AcquireReaderLock">
            <summary>设置 ReaderWriterLock.AcquireReaderLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AcquireWriterLock">
            <summary>设置 ReaderWriterLock.AcquireWriterLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.Constructor">
            <summary>设置 ReaderWriterLock.ReaderWriterLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.ReleaseReaderLock">
            <summary>设置 ReaderWriterLock.ReleaseReaderLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.ReleaseWriterLock">
            <summary>设置 ReaderWriterLock.ReleaseWriterLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.AcquireReaderLock">
            <summary>设置 ReaderWriterLock.AcquireReaderLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.AcquireWriterLock">
            <summary>设置 ReaderWriterLock.AcquireWriterLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.ReleaseReaderLock">
            <summary>设置 ReaderWriterLock.ReleaseReaderLock() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.ReleaseWriterLock">
            <summary>设置 ReaderWriterLock.ReleaseWriterLock() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReusableStringWriter">
            <summary>log4net.Util.ReusableStringWriter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.#ctor(log4net.Util.ReusableStringWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.ConstructorIFormatProvider">
            <summary>设置 ReusableStringWriter.ReusableStringWriter(IFormatProvider formatProvider) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.DisposeBoolean">
            <summary>设置 ReusableStringWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.ResetInt32Int32">
            <summary>设置 ReusableStringWriter.Reset(Int32 maxCapacity, Int32 defaultSize) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances.DisposeBoolean">
            <summary>设置 ReusableStringWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances.ResetInt32Int32">
            <summary>设置 ReusableStringWriter.Reset(Int32 maxCapacity, Int32 defaultSize) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemInfo">
            <summary>log4net.Util.SystemInfo 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.#ctor(log4net.Util.SystemInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ApplicationBaseDirectoryGet">
            <summary>设置 SystemInfo.get_ApplicationBaseDirectory() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ApplicationFriendlyNameGet">
            <summary>设置 SystemInfo.get_ApplicationFriendlyName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyFileNameAssembly">
            <summary>设置 SystemInfo.AssemblyFileName(Assembly myAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyLocationInfoAssembly">
            <summary>设置 SystemInfo.AssemblyLocationInfo(Assembly myAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyQualifiedNameType">
            <summary>设置 SystemInfo.AssemblyQualifiedName(Type type) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyShortNameAssembly">
            <summary>设置 SystemInfo.AssemblyShortName(Assembly myAssembly) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ConfigurationFileLocationGet">
            <summary>设置 SystemInfo.get_ConfigurationFileLocation() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.Constructor">
            <summary>设置 SystemInfo.SystemInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ConvertToFullPathString">
            <summary>设置 SystemInfo.ConvertToFullPath(String path) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CreateArgumentOutOfRangeExceptionStringObjectString">
            <summary>设置 SystemInfo.CreateArgumentOutOfRangeException(String parameterName, Object actualValue, String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CreateCaseInsensitiveHashtable">
            <summary>设置 SystemInfo.CreateCaseInsensitiveHashtable() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CurrentThreadIdGet">
            <summary>设置 SystemInfo.get_CurrentThreadId() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.EntryAssemblyLocationGet">
            <summary>设置 SystemInfo.get_EntryAssemblyLocation() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetAppSettingString">
            <summary>设置 SystemInfo.GetAppSetting(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringAssemblyStringBooleanBoolean">
            <summary>设置 SystemInfo.GetTypeFromString(Assembly relativeAssembly, String typeName, Boolean throwOnError, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringStringBooleanBoolean">
            <summary>设置 SystemInfo.GetTypeFromString(String typeName, Boolean throwOnError, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringTypeStringBooleanBoolean">
            <summary>设置 SystemInfo.GetTypeFromString(Type relativeType, String typeName, Boolean throwOnError, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.HostNameGet">
            <summary>设置 SystemInfo.get_HostName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NewGuid">
            <summary>设置 SystemInfo.NewGuid() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NewLineGet">
            <summary>设置 SystemInfo.get_NewLine() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NotAvailableTextGet">
            <summary>设置 SystemInfo.get_NotAvailableText() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NotAvailableTextSetString">
            <summary>设置 SystemInfo.set_NotAvailableText(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NullTextGet">
            <summary>设置 SystemInfo.get_NullText() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NullTextSetString">
            <summary>设置 SystemInfo.set_NullText(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ProcessStartTimeGet">
            <summary>设置 SystemInfo.get_ProcessStartTime() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.StaticConstructor">
            <summary>设置 SystemInfo.SystemInfo() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.TryParseStringInt32Out">
            <summary>设置 SystemInfo.TryParse(String s, Int32&amp; val) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.TryParseStringInt64Out">
            <summary>设置 SystemInfo.TryParse(String s, Int64&amp; val) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemStringFormat">
            <summary>log4net.Util.SystemStringFormat 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.#ctor(log4net.Util.SystemStringFormat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.ConstructorIFormatProviderStringObjectArray">
            <summary>设置 SystemStringFormat.SystemStringFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.RenderArrayArrayStringBuilder">
            <summary>设置 SystemStringFormat.RenderArray(Array array, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.RenderObjectObjectStringBuilder">
            <summary>设置 SystemStringFormat.RenderObject(Object obj, StringBuilder buffer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.StringFormatErrorExceptionStringObjectArray">
            <summary>设置 SystemStringFormat.StringFormatError(Exception formatException, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.StringFormatIFormatProviderStringObjectArray">
            <summary>设置 SystemStringFormat.StringFormat(IFormatProvider provider, String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.ToString">
            <summary>设置 SystemStringFormat.ToString() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemStringFormat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.AllInstances.ToString01">
            <summary>设置 SystemStringFormat.ToString() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTextWriterAdapter">
            <summary>log4net.Util.TextWriterAdapter 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.#ctor(log4net.Util.TextWriterAdapter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Close">
            <summary>设置 TextWriterAdapter.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.ConstructorTextWriter">
            <summary>设置 TextWriterAdapter.TextWriterAdapter(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteChar">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteCharArrayInt32Int32">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteString">
            <summary>设置 TextWriterAdapter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriterGet">
            <summary>设置 TextWriterAdapter.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriterSetTextWriter">
            <summary>设置 TextWriterAdapter.set_Writer(TextWriter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.Close">
            <summary>设置 TextWriterAdapter.Close() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteChar">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteCharArrayInt32Int32">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteString">
            <summary>设置 TextWriterAdapter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriterGet">
            <summary>设置 TextWriterAdapter.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriterSetTextWriter">
            <summary>设置 TextWriterAdapter.set_Writer(TextWriter value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextProperties">
            <summary>log4net.Util.ThreadContextProperties 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.#ctor(log4net.Util.ThreadContextProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Clear">
            <summary>设置 ThreadContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Constructor">
            <summary>设置 ThreadContextProperties.ThreadContextProperties() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.GetPropertiesBoolean">
            <summary>设置 ThreadContextProperties.GetProperties(Boolean create) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.ItemGetString">
            <summary>设置 ThreadContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.ItemSetStringObject">
            <summary>设置 ThreadContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.RemoveString">
            <summary>设置 ThreadContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.StaticConstructor">
            <summary>设置 ThreadContextProperties.ThreadContextProperties() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.Clear">
            <summary>设置 ThreadContextProperties.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.GetPropertiesBoolean">
            <summary>设置 ThreadContextProperties.GetProperties(Boolean create) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.ItemGetString">
            <summary>设置 ThreadContextProperties.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.ItemSetStringObject">
            <summary>设置 ThreadContextProperties.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.RemoveString">
            <summary>设置 ThreadContextProperties.Remove(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStack">
            <summary>log4net.Util.ThreadContextStack 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.#ctor(log4net.Util.ThreadContextStack)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.Bind(log4net.Core.IFixingRequired)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Clear">
            <summary>设置 ThreadContextStack.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Constructor">
            <summary>设置 ThreadContextStack.ThreadContextStack() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.CountGet">
            <summary>设置 ThreadContextStack.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.GetFullMessage">
            <summary>设置 ThreadContextStack.GetFullMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.InternalStackGet">
            <summary>设置 ThreadContextStack.get_InternalStack() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.InternalStackSetStack">
            <summary>设置 ThreadContextStack.set_InternalStack(Stack value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Pop">
            <summary>设置 ThreadContextStack.Pop() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.PushString">
            <summary>设置 ThreadContextStack.Push(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.ToString">
            <summary>设置 ThreadContextStack.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.log4netCoreIFixingRequiredGetFixedObject">
            <summary>设置 ThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStack.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.Clear">
            <summary>设置 ThreadContextStack.Clear() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.CountGet">
            <summary>设置 ThreadContextStack.get_Count() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.GetFullMessage">
            <summary>设置 ThreadContextStack.GetFullMessage() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.InternalStackGet">
            <summary>设置 ThreadContextStack.get_InternalStack() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.InternalStackSetStack">
            <summary>设置 ThreadContextStack.set_InternalStack(Stack value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.Pop">
            <summary>设置 ThreadContextStack.Pop() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.PushString">
            <summary>设置 ThreadContextStack.Push(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.ToString01">
            <summary>设置 ThreadContextStack.ToString() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.log4netCoreIFixingRequiredGetFixedObject">
            <summary>设置 ThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStacks">
            <summary>log4net.Util.ThreadContextStacks 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.#ctor(log4net.Util.ThreadContextStacks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.ConstructorContextPropertiesBase">
            <summary>设置 ThreadContextStacks.ThreadContextStacks(ContextPropertiesBase properties) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.ItemGetString">
            <summary>设置 ThreadContextStacks.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStacks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.AllInstances.ItemGetString">
            <summary>设置 ThreadContextStacks.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTransform">
            <summary>log4net.Util.Transform 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.#ctor(log4net.Util.Transform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.Constructor">
            <summary>设置 Transform.Transform() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.CountSubstringsStringString">
            <summary>设置 Transform.CountSubstrings(String text, String substring) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.MaskXmlInvalidCharactersStringString">
            <summary>设置 Transform.MaskXmlInvalidCharacters(String textData, String mask) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.StaticConstructor">
            <summary>设置 Transform.Transform() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.WriteEscapedXmlStringXmlWriterStringString">
            <summary>设置 Transform.WriteEscapedXmlString(XmlWriter writer, String textData, String invalidCharReplacement) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTransform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimWindowsSecurityContext">
            <summary>log4net.Util.WindowsSecurityContext 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.#ctor(log4net.Util.WindowsSecurityContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.Bind(log4net.Core.IOptionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.ActivateOptions">
            <summary>设置 WindowsSecurityContext.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.Constructor">
            <summary>设置 WindowsSecurityContext.WindowsSecurityContext() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.CredentialsGet">
            <summary>设置 WindowsSecurityContext.get_Credentials() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.CredentialsSetWindowsSecurityContextImpersonationMode">
            <summary>设置 WindowsSecurityContext.set_Credentials(ImpersonationMode value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.DomainNameGet">
            <summary>设置 WindowsSecurityContext.get_DomainName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.DomainNameSetString">
            <summary>设置 WindowsSecurityContext.set_DomainName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.ImpersonateObject">
            <summary>设置 WindowsSecurityContext.Impersonate(Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.LogonUserStringStringString">
            <summary>设置 WindowsSecurityContext.LogonUser(String userName, String domainName, String password) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.PasswordSetString">
            <summary>设置 WindowsSecurityContext.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.UserNameGet">
            <summary>设置 WindowsSecurityContext.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.UserNameSetString">
            <summary>设置 WindowsSecurityContext.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.ActivateOptions">
            <summary>设置 WindowsSecurityContext.ActivateOptions() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.CredentialsGet">
            <summary>设置 WindowsSecurityContext.get_Credentials() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.CredentialsSetWindowsSecurityContextImpersonationMode">
            <summary>设置 WindowsSecurityContext.set_Credentials(ImpersonationMode value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.DomainNameGet">
            <summary>设置 WindowsSecurityContext.get_DomainName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.DomainNameSetString">
            <summary>设置 WindowsSecurityContext.set_DomainName(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.ImpersonateObject">
            <summary>设置 WindowsSecurityContext.Impersonate(Object state) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.PasswordSetString">
            <summary>设置 WindowsSecurityContext.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.UserNameGet">
            <summary>设置 WindowsSecurityContext.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.UserNameSetString">
            <summary>设置 WindowsSecurityContext.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubAppenderAttachedImpl">
            <summary>log4net.Util.AppenderAttachedImpl 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubAppenderAttachedImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubAppenderAttachedImpl.InitializeStub">
            <summary>初始化 type StubAppenderAttachedImpl 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubContextPropertiesBase">
            <summary>log4net.Util.ContextPropertiesBase 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubContextPropertiesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubContextPropertiesBase.InitializeStub">
            <summary>初始化 type StubContextPropertiesBase 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubContextPropertiesBase.ItemGetString">
            <summary>设置 ContextPropertiesBase.get_Item(String key) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubContextPropertiesBase.ItemSetStringObject">
            <summary>设置 ContextPropertiesBase.set_Item(String key, Object value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.Item(System.String)">
            <summary>设置 ContextPropertiesBase.get_Item(String key) 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubCountingQuietTextWriter">
            <summary>log4net.Util.CountingQuietTextWriter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.#ctor(System.IO.TextWriter,log4net.Core.IErrorHandler)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.AttachBackingFieldToNewLine">
            <summary>附加委托以将 StubCountingQuietTextWriter.NewLine 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Close">
            <summary>设置 QuietTextWriter.Close() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.Close01">
            <summary>设置 QuietTextWriter.Close() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Dispose(System.Boolean)">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.Flush01">
            <summary>设置 TextWriterAdapter.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.InitializeStub">
            <summary>初始化 type StubCountingQuietTextWriter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Decimal)">
            <summary>设置 TextWriter.Write(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Double)">
            <summary>设置 TextWriter.Write(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Object)">
            <summary>设置 TextWriter.Write(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Char[])">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Char)">
            <summary>设置 CountingQuietTextWriter.Write(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.String)">
            <summary>设置 CountingQuietTextWriter.Write(String str) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Boolean)">
            <summary>设置 TextWriter.Write(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Int32)">
            <summary>设置 TextWriter.Write(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Int64)">
            <summary>设置 TextWriter.Write(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Single)">
            <summary>设置 TextWriter.Write(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.UInt32)">
            <summary>设置 TextWriter.Write(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.UInt64)">
            <summary>设置 TextWriter.Write(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.String,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.String,System.Object[])">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>设置 CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteBoolean">
            <summary>设置 TextWriter.Write(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteChar">
            <summary>设置 CountingQuietTextWriter.Write(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteCharArray">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>设置 CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteDecimal">
            <summary>设置 TextWriter.Write(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteDouble">
            <summary>设置 TextWriter.Write(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteInt32">
            <summary>设置 TextWriter.Write(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteInt64">
            <summary>设置 TextWriter.Write(Int64 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine">
            <summary>设置 TextWriter.WriteLine() 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Boolean)">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.String)">
            <summary>设置 TextWriter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Char)">
            <summary>设置 TextWriter.WriteLine(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Decimal)">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Double)">
            <summary>设置 TextWriter.WriteLine(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Int32)">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Int64)">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Single)">
            <summary>设置 TextWriter.WriteLine(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.UInt32)">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.UInt64)">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Object)">
            <summary>设置 TextWriter.WriteLine(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Char[])">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.String,System.Object[])">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.String,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLine01">
            <summary>设置 TextWriter.WriteLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineBoolean">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineChar">
            <summary>设置 TextWriter.WriteLine(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineCharArray">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineCharArrayInt32Int32">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineDecimal">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineDouble">
            <summary>设置 TextWriter.WriteLine(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineInt32">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineInt64">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineObject">
            <summary>设置 TextWriter.WriteLine(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineSingle">
            <summary>设置 TextWriter.WriteLine(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineString">
            <summary>设置 TextWriter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineStringObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineStringObjectArray">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineStringObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineStringObjectObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineUInt32">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteLineUInt64">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteObject">
            <summary>设置 TextWriter.Write(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteSingle">
            <summary>设置 TextWriter.Write(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteString">
            <summary>设置 CountingQuietTextWriter.Write(String str) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteStringObject">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteStringObjectArray">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteStringObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteStringObjectObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteUInt32">
            <summary>设置 TextWriter.Write(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubCountingQuietTextWriter.WriteUInt64">
            <summary>设置 TextWriter.Write(UInt64 value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.Encoding">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.FormatProvider">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCountingQuietTextWriter.NewLine">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubCyclicBuffer">
            <summary>log4net.Util.CyclicBuffer 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCyclicBuffer.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCyclicBuffer.InitializeStub">
            <summary>初始化 type StubCyclicBuffer 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubFormattingInfo">
            <summary>log4net.Util.FormattingInfo 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.InitializeStub">
            <summary>初始化 type StubFormattingInfo 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubLevelMappingEntry">
            <summary>log4net.Util.LevelMappingEntry 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.ActivateOptions">
            <summary>设置 LevelMappingEntry.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubLevelMappingEntry.ActivateOptions01">
            <summary>设置 LevelMappingEntry.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.InitializeStub">
            <summary>初始化 type StubLevelMappingEntry 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubOnlyOnceErrorHandler">
            <summary>log4net.Util.OnlyOnceErrorHandler 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InitializeStub">
            <summary>初始化 type StubOnlyOnceErrorHandler 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubPatternConverter">
            <summary>log4net.Util.PatternConverter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.AttachBackingFieldToFormattingInfo">
            <summary>附加委托以将 StubPatternConverter.FormattingInfo 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.AttachBackingFieldToOption">
            <summary>附加委托以将 StubPatternConverter.Option 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.Convert(System.IO.TextWriter,System.Object)">
            <summary>设置 PatternConverter.Convert(TextWriter writer, Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.ConvertTextWriterObject">
            <summary>设置 PatternConverter.Convert(TextWriter writer, Object state) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.Format(System.IO.TextWriter,System.Object)">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormatTextWriterObject">
            <summary>设置 PatternConverter.Format(TextWriter writer, Object state) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormattingInfoGet">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormattingInfoSetFormattingInfo">
            <summary>设置 PatternConverter.set_FormattingInfo(FormattingInfo value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.InitializeStub">
            <summary>初始化 type StubPatternConverter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.NextGet">
            <summary>设置 PatternConverter.get_Next() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.OptionGet">
            <summary>设置 PatternConverter.get_Option() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.OptionSetString">
            <summary>设置 PatternConverter.set_Option(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.SetNext(log4net.Util.PatternConverter)">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.SetNextPatternConverter">
            <summary>设置 PatternConverter.SetNext(PatternConverter patternConverter) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.FormattingInfo">
            <summary>设置 PatternConverter.get_FormattingInfo() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.Next">
            <summary>设置 PatternConverter.get_Next() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.Option">
            <summary>设置 PatternConverter.get_Option() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubPatternString">
            <summary>log4net.Util.PatternString 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.ActivateOptions">
            <summary>设置 PatternString.ActivateOptions() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternString.ActivateOptions01">
            <summary>设置 PatternString.ActivateOptions() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.InitializeStub">
            <summary>初始化 type StubPatternString 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubProtectCloseTextWriter">
            <summary>log4net.Util.ProtectCloseTextWriter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.#ctor(System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.AttachBackingFieldToNewLine">
            <summary>附加委托以将 StubProtectCloseTextWriter.NewLine 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Close">
            <summary>设置 ProtectCloseTextWriter.Close() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.Close01">
            <summary>设置 ProtectCloseTextWriter.Close() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Dispose(System.Boolean)">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.Flush01">
            <summary>设置 TextWriterAdapter.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.InitializeStub">
            <summary>初始化 type StubProtectCloseTextWriter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Boolean)">
            <summary>设置 TextWriter.Write(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Char)">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Decimal)">
            <summary>设置 TextWriter.Write(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Int32)">
            <summary>设置 TextWriter.Write(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Object)">
            <summary>设置 TextWriter.Write(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Double)">
            <summary>设置 TextWriter.Write(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Char[])">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.String)">
            <summary>设置 TextWriterAdapter.Write(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Int64)">
            <summary>设置 TextWriter.Write(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Single)">
            <summary>设置 TextWriter.Write(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.UInt32)">
            <summary>设置 TextWriter.Write(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.UInt64)">
            <summary>设置 TextWriter.Write(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.String,System.Object[])">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.String,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteBoolean">
            <summary>设置 TextWriter.Write(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteChar">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteCharArray">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteCharArrayInt32Int32">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteDecimal">
            <summary>设置 TextWriter.Write(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteDouble">
            <summary>设置 TextWriter.Write(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteInt32">
            <summary>设置 TextWriter.Write(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteInt64">
            <summary>设置 TextWriter.Write(Int64 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine">
            <summary>设置 TextWriter.WriteLine() 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Boolean)">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Char)">
            <summary>设置 TextWriter.WriteLine(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Decimal)">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.String)">
            <summary>设置 TextWriter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Double)">
            <summary>设置 TextWriter.WriteLine(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Int32)">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Int64)">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Char[])">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Single)">
            <summary>设置 TextWriter.WriteLine(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.UInt32)">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.UInt64)">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Object)">
            <summary>设置 TextWriter.WriteLine(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.String,System.Object[])">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.String,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLine01">
            <summary>设置 TextWriter.WriteLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineBoolean">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineChar">
            <summary>设置 TextWriter.WriteLine(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineCharArray">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineCharArrayInt32Int32">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineDecimal">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineDouble">
            <summary>设置 TextWriter.WriteLine(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineInt32">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineInt64">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineObject">
            <summary>设置 TextWriter.WriteLine(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineSingle">
            <summary>设置 TextWriter.WriteLine(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineString">
            <summary>设置 TextWriter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineStringObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineStringObjectArray">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineStringObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineStringObjectObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineUInt32">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteLineUInt64">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteObject">
            <summary>设置 TextWriter.Write(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteSingle">
            <summary>设置 TextWriter.Write(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteString">
            <summary>设置 TextWriterAdapter.Write(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteStringObject">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteStringObjectArray">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteStringObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteStringObjectObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteUInt32">
            <summary>设置 TextWriter.Write(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubProtectCloseTextWriter.WriteUInt64">
            <summary>设置 TextWriter.Write(UInt64 value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.Encoding">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.FormatProvider">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubProtectCloseTextWriter.NewLine">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubQuietTextWriter">
            <summary>log4net.Util.QuietTextWriter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.#ctor(System.IO.TextWriter,log4net.Core.IErrorHandler)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.AttachBackingFieldToNewLine">
            <summary>附加委托以将 StubQuietTextWriter.NewLine 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Close">
            <summary>设置 QuietTextWriter.Close() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.Close01">
            <summary>设置 QuietTextWriter.Close() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Dispose(System.Boolean)">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.Flush01">
            <summary>设置 TextWriterAdapter.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.InitializeStub">
            <summary>初始化 type StubQuietTextWriter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Object)">
            <summary>设置 TextWriter.Write(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.String)">
            <summary>设置 QuietTextWriter.Write(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Double)">
            <summary>设置 TextWriter.Write(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Boolean)">
            <summary>设置 TextWriter.Write(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Char)">
            <summary>设置 QuietTextWriter.Write(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Decimal)">
            <summary>设置 TextWriter.Write(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Int32)">
            <summary>设置 TextWriter.Write(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Int64)">
            <summary>设置 TextWriter.Write(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Single)">
            <summary>设置 TextWriter.Write(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.UInt32)">
            <summary>设置 TextWriter.Write(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.UInt64)">
            <summary>设置 TextWriter.Write(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Char[])">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.String,System.Object[])">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.String,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>设置 QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteBoolean">
            <summary>设置 TextWriter.Write(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteChar">
            <summary>设置 QuietTextWriter.Write(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteCharArray">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>设置 QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteDecimal">
            <summary>设置 TextWriter.Write(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteDouble">
            <summary>设置 TextWriter.Write(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteInt32">
            <summary>设置 TextWriter.Write(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteInt64">
            <summary>设置 TextWriter.Write(Int64 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine">
            <summary>设置 TextWriter.WriteLine() 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Decimal)">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Double)">
            <summary>设置 TextWriter.WriteLine(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.String)">
            <summary>设置 TextWriter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Boolean)">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Char)">
            <summary>设置 TextWriter.WriteLine(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Int32)">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Int64)">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Single)">
            <summary>设置 TextWriter.WriteLine(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.UInt32)">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Object)">
            <summary>设置 TextWriter.WriteLine(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.UInt64)">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Char[])">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.String,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.String,System.Object[])">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubQuietTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLine01">
            <summary>设置 TextWriter.WriteLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineBoolean">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineChar">
            <summary>设置 TextWriter.WriteLine(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineCharArray">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineCharArrayInt32Int32">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineDecimal">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineDouble">
            <summary>设置 TextWriter.WriteLine(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineInt32">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineInt64">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineObject">
            <summary>设置 TextWriter.WriteLine(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineSingle">
            <summary>设置 TextWriter.WriteLine(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineString">
            <summary>设置 TextWriter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineStringObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineStringObjectArray">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineStringObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineStringObjectObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineUInt32">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteLineUInt64">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteObject">
            <summary>设置 TextWriter.Write(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteSingle">
            <summary>设置 TextWriter.Write(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteString">
            <summary>设置 QuietTextWriter.Write(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteStringObject">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteStringObjectArray">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteStringObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteStringObjectObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteUInt32">
            <summary>设置 TextWriter.Write(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubQuietTextWriter.WriteUInt64">
            <summary>设置 TextWriter.Write(UInt64 value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.Encoding">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.FormatProvider">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubQuietTextWriter.NewLine">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary">
            <summary>log4net.Util.ReadOnlyPropertiesDictionary 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor(log4net.Util.ReadOnlyPropertiesDictionary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Clear">
            <summary>设置 ReadOnlyPropertiesDictionary.Clear() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Clear01">
            <summary>设置 ReadOnlyPropertiesDictionary.Clear() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InitializeStub">
            <summary>初始化 type StubReadOnlyPropertiesDictionary 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.ItemGetString">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Item(String key) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.ItemSetStringObject">
            <summary>设置 ReadOnlyPropertiesDictionary.set_Item(String key, Object value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Item(System.String)">
            <summary>设置 ReadOnlyPropertiesDictionary.get_Item(String key) 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubReusableStringWriter">
            <summary>log4net.Util.ReusableStringWriter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.#ctor(System.IFormatProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.AttachBackingFieldToNewLine">
            <summary>附加委托以将 StubReusableStringWriter.NewLine 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Close">
            <summary>设置 StringWriter.Close() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.Close01">
            <summary>设置 StringWriter.Close() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Dispose(System.Boolean)">
            <summary>设置 ReusableStringWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.DisposeBoolean">
            <summary>设置 ReusableStringWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.EncodingGet">
            <summary>设置 StringWriter.get_Encoding() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Flush">
            <summary>设置 TextWriter.Flush() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.Flush01">
            <summary>设置 TextWriter.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.FormatProviderGet">
            <summary>设置 TextWriter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.GetStringBuilder">
            <summary>设置 StringWriter.GetStringBuilder() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.GetStringBuilder01">
            <summary>设置 StringWriter.GetStringBuilder() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.InitializeStub">
            <summary>初始化 type StubReusableStringWriter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.NewLineGet">
            <summary>设置 TextWriter.get_NewLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.NewLineSetString">
            <summary>设置 TextWriter.set_NewLine(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.ToString">
            <summary>设置 StringWriter.ToString() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.ToString01">
            <summary>设置 StringWriter.ToString() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Object)">
            <summary>设置 TextWriter.Write(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Boolean)">
            <summary>设置 TextWriter.Write(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Char)">
            <summary>设置 StringWriter.Write(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Decimal)">
            <summary>设置 TextWriter.Write(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.String)">
            <summary>设置 StringWriter.Write(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Double)">
            <summary>设置 TextWriter.Write(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Int32)">
            <summary>设置 TextWriter.Write(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Int64)">
            <summary>设置 TextWriter.Write(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Single)">
            <summary>设置 TextWriter.Write(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.UInt64)">
            <summary>设置 TextWriter.Write(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Char[])">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.UInt32)">
            <summary>设置 TextWriter.Write(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.String,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.String,System.Object[])">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>设置 StringWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteBoolean">
            <summary>设置 TextWriter.Write(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteChar">
            <summary>设置 StringWriter.Write(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteCharArray">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteCharArrayInt32Int32">
            <summary>设置 StringWriter.Write(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteDecimal">
            <summary>设置 TextWriter.Write(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteDouble">
            <summary>设置 TextWriter.Write(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteInt32">
            <summary>设置 TextWriter.Write(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteInt64">
            <summary>设置 TextWriter.Write(Int64 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine">
            <summary>设置 TextWriter.WriteLine() 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Int64)">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.UInt32)">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.UInt64)">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Object)">
            <summary>设置 TextWriter.WriteLine(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.String)">
            <summary>设置 TextWriter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Int32)">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Char[])">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Boolean)">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Char)">
            <summary>设置 TextWriter.WriteLine(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Decimal)">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Double)">
            <summary>设置 TextWriter.WriteLine(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Single)">
            <summary>设置 TextWriter.WriteLine(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.String,System.Object[])">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.String,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReusableStringWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLine01">
            <summary>设置 TextWriter.WriteLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineBoolean">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineChar">
            <summary>设置 TextWriter.WriteLine(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineCharArray">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineCharArrayInt32Int32">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineDecimal">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineDouble">
            <summary>设置 TextWriter.WriteLine(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineInt32">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineInt64">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineObject">
            <summary>设置 TextWriter.WriteLine(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineSingle">
            <summary>设置 TextWriter.WriteLine(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineString">
            <summary>设置 TextWriter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineStringObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineStringObjectArray">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineStringObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineStringObjectObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineUInt32">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteLineUInt64">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteObject">
            <summary>设置 TextWriter.Write(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteSingle">
            <summary>设置 TextWriter.Write(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteString">
            <summary>设置 StringWriter.Write(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteStringObject">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteStringObjectArray">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteStringObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteStringObjectObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteUInt32">
            <summary>设置 TextWriter.Write(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReusableStringWriter.WriteUInt64">
            <summary>设置 TextWriter.Write(UInt64 value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.Encoding">
            <summary>设置 StringWriter.get_Encoding() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.FormatProvider">
            <summary>设置 TextWriter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReusableStringWriter.NewLine">
            <summary>设置 TextWriter.get_NewLine() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubTextWriterAdapter">
            <summary>log4net.Util.TextWriterAdapter 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.#ctor(System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.AttachBackingFieldToNewLine">
            <summary>附加委托以将 StubTextWriterAdapter.NewLine 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Close">
            <summary>设置 TextWriterAdapter.Close() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.Close01">
            <summary>设置 TextWriterAdapter.Close() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Dispose(System.Boolean)">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.DisposeBoolean">
            <summary>设置 TextWriterAdapter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.EncodingGet">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Flush">
            <summary>设置 TextWriterAdapter.Flush() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.Flush01">
            <summary>设置 TextWriterAdapter.Flush() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.FormatProviderGet">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.InitializeStub">
            <summary>初始化 type StubTextWriterAdapter 的新实例</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.NewLineGet">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.NewLineSetString">
            <summary>设置 TextWriterAdapter.set_NewLine(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Boolean)">
            <summary>设置 TextWriter.Write(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Char)">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Decimal)">
            <summary>设置 TextWriter.Write(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Int32)">
            <summary>设置 TextWriter.Write(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Object)">
            <summary>设置 TextWriter.Write(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Double)">
            <summary>设置 TextWriter.Write(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Char[])">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.String)">
            <summary>设置 TextWriterAdapter.Write(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Int64)">
            <summary>设置 TextWriter.Write(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Single)">
            <summary>设置 TextWriter.Write(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.UInt32)">
            <summary>设置 TextWriter.Write(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.UInt64)">
            <summary>设置 TextWriter.Write(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.String,System.Object[])">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.String,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteBoolean">
            <summary>设置 TextWriter.Write(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteChar">
            <summary>设置 TextWriterAdapter.Write(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteCharArray">
            <summary>设置 TextWriter.Write(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteCharArrayInt32Int32">
            <summary>设置 TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteDecimal">
            <summary>设置 TextWriter.Write(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteDouble">
            <summary>设置 TextWriter.Write(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteInt32">
            <summary>设置 TextWriter.Write(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteInt64">
            <summary>设置 TextWriter.Write(Int64 value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine">
            <summary>设置 TextWriter.WriteLine() 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Boolean)">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Char)">
            <summary>设置 TextWriter.WriteLine(Char value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Decimal)">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.String)">
            <summary>设置 TextWriter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Double)">
            <summary>设置 TextWriter.WriteLine(Double value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Int32)">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Int64)">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Char[])">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Single)">
            <summary>设置 TextWriter.WriteLine(Single value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.UInt32)">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.UInt64)">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Object)">
            <summary>设置 TextWriter.WriteLine(Object value) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.String,System.Object[])">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.String,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.String,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLine01">
            <summary>设置 TextWriter.WriteLine() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineBoolean">
            <summary>设置 TextWriter.WriteLine(Boolean value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineChar">
            <summary>设置 TextWriter.WriteLine(Char value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineCharArray">
            <summary>设置 TextWriter.WriteLine(Char[] buffer) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineCharArrayInt32Int32">
            <summary>设置 TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineDecimal">
            <summary>设置 TextWriter.WriteLine(Decimal value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineDouble">
            <summary>设置 TextWriter.WriteLine(Double value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineInt32">
            <summary>设置 TextWriter.WriteLine(Int32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineInt64">
            <summary>设置 TextWriter.WriteLine(Int64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineObject">
            <summary>设置 TextWriter.WriteLine(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineSingle">
            <summary>设置 TextWriter.WriteLine(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineString">
            <summary>设置 TextWriter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineStringObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineStringObjectArray">
            <summary>设置 TextWriter.WriteLine(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineStringObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineStringObjectObjectObject">
            <summary>设置 TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineUInt32">
            <summary>设置 TextWriter.WriteLine(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteLineUInt64">
            <summary>设置 TextWriter.WriteLine(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteObject">
            <summary>设置 TextWriter.Write(Object value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteSingle">
            <summary>设置 TextWriter.Write(Single value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteString">
            <summary>设置 TextWriterAdapter.Write(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteStringObject">
            <summary>设置 TextWriter.Write(String format, Object arg0) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteStringObjectArray">
            <summary>设置 TextWriter.Write(String format, Object[] arg) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteStringObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteStringObjectObjectObject">
            <summary>设置 TextWriter.Write(String format, Object arg0, Object arg1, Object arg2) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteUInt32">
            <summary>设置 TextWriter.Write(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubTextWriterAdapter.WriteUInt64">
            <summary>设置 TextWriter.Write(UInt64 value) 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.Encoding">
            <summary>设置 TextWriterAdapter.get_Encoding() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.FormatProvider">
            <summary>设置 TextWriterAdapter.get_FormatProvider() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubTextWriterAdapter.NewLine">
            <summary>设置 TextWriterAdapter.get_NewLine() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubWindowsSecurityContext">
            <summary>log4net.Util.WindowsSecurityContext 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.Impersonate(System.Object)">
            <summary>设置 WindowsSecurityContext.Impersonate(Object state) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubWindowsSecurityContext.ImpersonateObject">
            <summary>设置 WindowsSecurityContext.Impersonate(Object state) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.InitializeStub">
            <summary>初始化 type StubWindowsSecurityContext 的新实例</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException">
            <summary>log4net.Util.TypeConverters.ConversionNotSupportedException 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.#ctor(log4net.Util.TypeConverters.ConversionNotSupportedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Constructor">
            <summary>设置 ConversionNotSupportedException.ConversionNotSupportedException() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ConversionNotSupportedException.ConversionNotSupportedException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorString">
            <summary>设置 ConversionNotSupportedException.ConversionNotSupportedException(String message) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorStringException">
            <summary>设置 ConversionNotSupportedException.ConversionNotSupportedException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.CreateTypeObject">
            <summary>设置 ConversionNotSupportedException.Create(Type destinationType, Object sourceValue) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.CreateTypeObjectException">
            <summary>设置 ConversionNotSupportedException.Create(Type destinationType, Object sourceValue, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry">
            <summary>log4net.Util.TypeConverters.ConverterRegistry 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.#ctor(log4net.Util.TypeConverters.ConverterRegistry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AddConverterTypeObject">
            <summary>设置 ConverterRegistry.AddConverter(Type destinationType, Object converter) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AddConverterTypeType">
            <summary>设置 ConverterRegistry.AddConverter(Type destinationType, Type converterType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.Constructor">
            <summary>设置 ConverterRegistry.ConverterRegistry() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.CreateConverterInstanceType">
            <summary>设置 ConverterRegistry.CreateConverterInstance(Type converterType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConvertFromType">
            <summary>设置 ConverterRegistry.GetConvertFrom(Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConvertToTypeType">
            <summary>设置 ConverterRegistry.GetConvertTo(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConverterFromAttributeType">
            <summary>设置 ConverterRegistry.GetConverterFromAttribute(Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.StaticConstructor">
            <summary>设置 ConverterRegistry.ConverterRegistry() 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute">
            <summary>log4net.Util.TypeConverters.TypeConverterAttribute 的填充码类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.#ctor(log4net.Util.TypeConverters.TypeConverterAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.Constructor">
            <summary>设置 TypeConverterAttribute.TypeConverterAttribute() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConstructorString">
            <summary>设置 TypeConverterAttribute.TypeConverterAttribute(String typeName) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConstructorType">
            <summary>设置 TypeConverterAttribute.TypeConverterAttribute(Type converterType) 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConverterTypeNameGet">
            <summary>设置 TypeConverterAttribute.get_ConverterTypeName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConverterTypeNameSetString">
            <summary>设置 TypeConverterAttribute.set_ConverterTypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances.ConverterTypeNameGet">
            <summary>设置 TypeConverterAttribute.get_ConverterTypeName() 的 填充码</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances.ConverterTypeNameSetString">
            <summary>设置 TypeConverterAttribute.set_ConverterTypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException">
            <summary>log4net.Util.TypeConverters.ConversionNotSupportedException 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubConversionNotSupportedException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubConversionNotSupportedException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InitializeStub">
            <summary>初始化 type StubConversionNotSupportedException 的新实例</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubIConvertFrom">
            <summary>log4net.Util.TypeConverters.IConvertFrom 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.#ctor">
            <summary>初始化 type StubIConvertFrom 的新实例</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.CanConvertFromType">
            <summary>设置 IConvertFrom.CanConvertFrom(Type sourceType) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.ConvertFromObject">
            <summary>设置 IConvertFrom.ConvertFrom(Object source) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.l4::log4net#Util#TypeConverters#IConvertFrom#CanConvertFrom(System.Type)">
            <summary>设置 IConvertFrom.CanConvertFrom(Type sourceType) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.l4::log4net#Util#TypeConverters#IConvertFrom#ConvertFrom(System.Object)">
            <summary>设置 IConvertFrom.ConvertFrom(Object source) 的 存根</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubIConvertTo">
            <summary>log4net.Util.TypeConverters.IConvertTo 的存根类型</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.#ctor">
            <summary>初始化 type StubIConvertTo 的新实例</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertTo.CanConvertToType">
            <summary>设置 IConvertTo.CanConvertTo(Type targetType) 的 stub</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertTo.ConvertToObjectType">
            <summary>设置 IConvertTo.ConvertTo(Object source, Type targetType) 的 stub</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.l4::log4net#Util#TypeConverters#IConvertTo#CanConvertTo(System.Type)">
            <summary>设置 IConvertTo.CanConvertTo(Type targetType) 的 存根</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.l4::log4net#Util#TypeConverters#IConvertTo#ConvertTo(System.Object,System.Type)">
            <summary>设置 IConvertTo.ConvertTo(Object source, Type targetType) 的 存根</summary>
        </member>
    </members>
</doc>
